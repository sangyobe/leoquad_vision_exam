// Generated by the gRPC C++ plugin.
// If you make any local change, they will be lost.
// source: QuadrupedNav.proto
#ifndef GRPC_QuadrupedNav_2eproto__INCLUDED
#define GRPC_QuadrupedNav_2eproto__INCLUDED

#include "QuadrupedNav.pb.h"

#include <functional>
#include <grpcpp/generic/async_generic_service.h>
#include <grpcpp/support/async_stream.h>
#include <grpcpp/support/async_unary_call.h>
#include <grpcpp/support/client_callback.h>
#include <grpcpp/client_context.h>
#include <grpcpp/completion_queue.h>
#include <grpcpp/support/message_allocator.h>
#include <grpcpp/support/method_handler.h>
#include <grpcpp/impl/proto_utils.h>
#include <grpcpp/impl/rpc_method.h>
#include <grpcpp/support/server_callback.h>
#include <grpcpp/impl/server_callback_handlers.h>
#include <grpcpp/server_context.h>
#include <grpcpp/impl/service_type.h>
#include <grpcpp/support/status.h>
#include <grpcpp/support/stub_options.h>
#include <grpcpp/support/sync_stream.h>

namespace dtproto {
namespace quadruped {

class Nav final {
 public:
  static constexpr char const* service_full_name() {
    return "dtproto.quadruped.Nav";
  }
  class StubInterface {
   public:
    virtual ~StubInterface() {}
    // server publishes infomation
    std::unique_ptr< ::grpc::ClientReaderInterface< ::dtproto::quadruped::OdomWithJointPosTimeStamped>> PublishOdomWithJointPos(::grpc::ClientContext* context, const ::dtproto::std_msgs::Request& request) {
      return std::unique_ptr< ::grpc::ClientReaderInterface< ::dtproto::quadruped::OdomWithJointPosTimeStamped>>(PublishOdomWithJointPosRaw(context, request));
    }
    std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::dtproto::quadruped::OdomWithJointPosTimeStamped>> AsyncPublishOdomWithJointPos(::grpc::ClientContext* context, const ::dtproto::std_msgs::Request& request, ::grpc::CompletionQueue* cq, void* tag) {
      return std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::dtproto::quadruped::OdomWithJointPosTimeStamped>>(AsyncPublishOdomWithJointPosRaw(context, request, cq, tag));
    }
    std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::dtproto::quadruped::OdomWithJointPosTimeStamped>> PrepareAsyncPublishOdomWithJointPos(::grpc::ClientContext* context, const ::dtproto::std_msgs::Request& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::dtproto::quadruped::OdomWithJointPosTimeStamped>>(PrepareAsyncPublishOdomWithJointPosRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientReaderInterface< ::dtproto::sensor_msgs::ImuTimeStamped>> PublishImu(::grpc::ClientContext* context, const ::dtproto::std_msgs::Request& request) {
      return std::unique_ptr< ::grpc::ClientReaderInterface< ::dtproto::sensor_msgs::ImuTimeStamped>>(PublishImuRaw(context, request));
    }
    std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::dtproto::sensor_msgs::ImuTimeStamped>> AsyncPublishImu(::grpc::ClientContext* context, const ::dtproto::std_msgs::Request& request, ::grpc::CompletionQueue* cq, void* tag) {
      return std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::dtproto::sensor_msgs::ImuTimeStamped>>(AsyncPublishImuRaw(context, request, cq, tag));
    }
    std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::dtproto::sensor_msgs::ImuTimeStamped>> PrepareAsyncPublishImu(::grpc::ClientContext* context, const ::dtproto::std_msgs::Request& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::dtproto::sensor_msgs::ImuTimeStamped>>(PrepareAsyncPublishImuRaw(context, request, cq));
    }
    // client feeds information
    std::unique_ptr< ::grpc::ClientWriterInterface< ::dtproto::nav_msgs::OdomTimeStamped>> SubscribeVisualOdom(::grpc::ClientContext* context, ::dtproto::std_msgs::Response* response) {
      return std::unique_ptr< ::grpc::ClientWriterInterface< ::dtproto::nav_msgs::OdomTimeStamped>>(SubscribeVisualOdomRaw(context, response));
    }
    std::unique_ptr< ::grpc::ClientAsyncWriterInterface< ::dtproto::nav_msgs::OdomTimeStamped>> AsyncSubscribeVisualOdom(::grpc::ClientContext* context, ::dtproto::std_msgs::Response* response, ::grpc::CompletionQueue* cq, void* tag) {
      return std::unique_ptr< ::grpc::ClientAsyncWriterInterface< ::dtproto::nav_msgs::OdomTimeStamped>>(AsyncSubscribeVisualOdomRaw(context, response, cq, tag));
    }
    std::unique_ptr< ::grpc::ClientAsyncWriterInterface< ::dtproto::nav_msgs::OdomTimeStamped>> PrepareAsyncSubscribeVisualOdom(::grpc::ClientContext* context, ::dtproto::std_msgs::Response* response, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncWriterInterface< ::dtproto::nav_msgs::OdomTimeStamped>>(PrepareAsyncSubscribeVisualOdomRaw(context, response, cq));
    }
    std::unique_ptr< ::grpc::ClientWriterInterface< ::dtproto::nav_msgs::GridTimeStamped>> SubscribeLocalGridmap(::grpc::ClientContext* context, ::dtproto::std_msgs::Response* response) {
      return std::unique_ptr< ::grpc::ClientWriterInterface< ::dtproto::nav_msgs::GridTimeStamped>>(SubscribeLocalGridmapRaw(context, response));
    }
    std::unique_ptr< ::grpc::ClientAsyncWriterInterface< ::dtproto::nav_msgs::GridTimeStamped>> AsyncSubscribeLocalGridmap(::grpc::ClientContext* context, ::dtproto::std_msgs::Response* response, ::grpc::CompletionQueue* cq, void* tag) {
      return std::unique_ptr< ::grpc::ClientAsyncWriterInterface< ::dtproto::nav_msgs::GridTimeStamped>>(AsyncSubscribeLocalGridmapRaw(context, response, cq, tag));
    }
    std::unique_ptr< ::grpc::ClientAsyncWriterInterface< ::dtproto::nav_msgs::GridTimeStamped>> PrepareAsyncSubscribeLocalGridmap(::grpc::ClientContext* context, ::dtproto::std_msgs::Response* response, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncWriterInterface< ::dtproto::nav_msgs::GridTimeStamped>>(PrepareAsyncSubscribeLocalGridmapRaw(context, response, cq));
    }
    std::unique_ptr< ::grpc::ClientWriterInterface< ::dtproto::nav_msgs::SteppableAreaTimeStamped>> SubscribeSteppableArea(::grpc::ClientContext* context, ::dtproto::std_msgs::Response* response) {
      return std::unique_ptr< ::grpc::ClientWriterInterface< ::dtproto::nav_msgs::SteppableAreaTimeStamped>>(SubscribeSteppableAreaRaw(context, response));
    }
    std::unique_ptr< ::grpc::ClientAsyncWriterInterface< ::dtproto::nav_msgs::SteppableAreaTimeStamped>> AsyncSubscribeSteppableArea(::grpc::ClientContext* context, ::dtproto::std_msgs::Response* response, ::grpc::CompletionQueue* cq, void* tag) {
      return std::unique_ptr< ::grpc::ClientAsyncWriterInterface< ::dtproto::nav_msgs::SteppableAreaTimeStamped>>(AsyncSubscribeSteppableAreaRaw(context, response, cq, tag));
    }
    std::unique_ptr< ::grpc::ClientAsyncWriterInterface< ::dtproto::nav_msgs::SteppableAreaTimeStamped>> PrepareAsyncSubscribeSteppableArea(::grpc::ClientContext* context, ::dtproto::std_msgs::Response* response, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncWriterInterface< ::dtproto::nav_msgs::SteppableAreaTimeStamped>>(PrepareAsyncSubscribeSteppableAreaRaw(context, response, cq));
    }
    std::unique_ptr< ::grpc::ClientWriterInterface< ::dtproto::robot_msgs::RobotCommandTimeStamped>> SubscribeRobotCommand(::grpc::ClientContext* context, ::dtproto::std_msgs::Response* response) {
      return std::unique_ptr< ::grpc::ClientWriterInterface< ::dtproto::robot_msgs::RobotCommandTimeStamped>>(SubscribeRobotCommandRaw(context, response));
    }
    std::unique_ptr< ::grpc::ClientAsyncWriterInterface< ::dtproto::robot_msgs::RobotCommandTimeStamped>> AsyncSubscribeRobotCommand(::grpc::ClientContext* context, ::dtproto::std_msgs::Response* response, ::grpc::CompletionQueue* cq, void* tag) {
      return std::unique_ptr< ::grpc::ClientAsyncWriterInterface< ::dtproto::robot_msgs::RobotCommandTimeStamped>>(AsyncSubscribeRobotCommandRaw(context, response, cq, tag));
    }
    std::unique_ptr< ::grpc::ClientAsyncWriterInterface< ::dtproto::robot_msgs::RobotCommandTimeStamped>> PrepareAsyncSubscribeRobotCommand(::grpc::ClientContext* context, ::dtproto::std_msgs::Response* response, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncWriterInterface< ::dtproto::robot_msgs::RobotCommandTimeStamped>>(PrepareAsyncSubscribeRobotCommandRaw(context, response, cq));
    }
    class async_interface {
     public:
      virtual ~async_interface() {}
      // server publishes infomation
      virtual void PublishOdomWithJointPos(::grpc::ClientContext* context, const ::dtproto::std_msgs::Request* request, ::grpc::ClientReadReactor< ::dtproto::quadruped::OdomWithJointPosTimeStamped>* reactor) = 0;
      virtual void PublishImu(::grpc::ClientContext* context, const ::dtproto::std_msgs::Request* request, ::grpc::ClientReadReactor< ::dtproto::sensor_msgs::ImuTimeStamped>* reactor) = 0;
      // client feeds information
      virtual void SubscribeVisualOdom(::grpc::ClientContext* context, ::dtproto::std_msgs::Response* response, ::grpc::ClientWriteReactor< ::dtproto::nav_msgs::OdomTimeStamped>* reactor) = 0;
      virtual void SubscribeLocalGridmap(::grpc::ClientContext* context, ::dtproto::std_msgs::Response* response, ::grpc::ClientWriteReactor< ::dtproto::nav_msgs::GridTimeStamped>* reactor) = 0;
      virtual void SubscribeSteppableArea(::grpc::ClientContext* context, ::dtproto::std_msgs::Response* response, ::grpc::ClientWriteReactor< ::dtproto::nav_msgs::SteppableAreaTimeStamped>* reactor) = 0;
      virtual void SubscribeRobotCommand(::grpc::ClientContext* context, ::dtproto::std_msgs::Response* response, ::grpc::ClientWriteReactor< ::dtproto::robot_msgs::RobotCommandTimeStamped>* reactor) = 0;
    };
    typedef class async_interface experimental_async_interface;
    virtual class async_interface* async() { return nullptr; }
    class async_interface* experimental_async() { return async(); }
   private:
    virtual ::grpc::ClientReaderInterface< ::dtproto::quadruped::OdomWithJointPosTimeStamped>* PublishOdomWithJointPosRaw(::grpc::ClientContext* context, const ::dtproto::std_msgs::Request& request) = 0;
    virtual ::grpc::ClientAsyncReaderInterface< ::dtproto::quadruped::OdomWithJointPosTimeStamped>* AsyncPublishOdomWithJointPosRaw(::grpc::ClientContext* context, const ::dtproto::std_msgs::Request& request, ::grpc::CompletionQueue* cq, void* tag) = 0;
    virtual ::grpc::ClientAsyncReaderInterface< ::dtproto::quadruped::OdomWithJointPosTimeStamped>* PrepareAsyncPublishOdomWithJointPosRaw(::grpc::ClientContext* context, const ::dtproto::std_msgs::Request& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientReaderInterface< ::dtproto::sensor_msgs::ImuTimeStamped>* PublishImuRaw(::grpc::ClientContext* context, const ::dtproto::std_msgs::Request& request) = 0;
    virtual ::grpc::ClientAsyncReaderInterface< ::dtproto::sensor_msgs::ImuTimeStamped>* AsyncPublishImuRaw(::grpc::ClientContext* context, const ::dtproto::std_msgs::Request& request, ::grpc::CompletionQueue* cq, void* tag) = 0;
    virtual ::grpc::ClientAsyncReaderInterface< ::dtproto::sensor_msgs::ImuTimeStamped>* PrepareAsyncPublishImuRaw(::grpc::ClientContext* context, const ::dtproto::std_msgs::Request& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientWriterInterface< ::dtproto::nav_msgs::OdomTimeStamped>* SubscribeVisualOdomRaw(::grpc::ClientContext* context, ::dtproto::std_msgs::Response* response) = 0;
    virtual ::grpc::ClientAsyncWriterInterface< ::dtproto::nav_msgs::OdomTimeStamped>* AsyncSubscribeVisualOdomRaw(::grpc::ClientContext* context, ::dtproto::std_msgs::Response* response, ::grpc::CompletionQueue* cq, void* tag) = 0;
    virtual ::grpc::ClientAsyncWriterInterface< ::dtproto::nav_msgs::OdomTimeStamped>* PrepareAsyncSubscribeVisualOdomRaw(::grpc::ClientContext* context, ::dtproto::std_msgs::Response* response, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientWriterInterface< ::dtproto::nav_msgs::GridTimeStamped>* SubscribeLocalGridmapRaw(::grpc::ClientContext* context, ::dtproto::std_msgs::Response* response) = 0;
    virtual ::grpc::ClientAsyncWriterInterface< ::dtproto::nav_msgs::GridTimeStamped>* AsyncSubscribeLocalGridmapRaw(::grpc::ClientContext* context, ::dtproto::std_msgs::Response* response, ::grpc::CompletionQueue* cq, void* tag) = 0;
    virtual ::grpc::ClientAsyncWriterInterface< ::dtproto::nav_msgs::GridTimeStamped>* PrepareAsyncSubscribeLocalGridmapRaw(::grpc::ClientContext* context, ::dtproto::std_msgs::Response* response, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientWriterInterface< ::dtproto::nav_msgs::SteppableAreaTimeStamped>* SubscribeSteppableAreaRaw(::grpc::ClientContext* context, ::dtproto::std_msgs::Response* response) = 0;
    virtual ::grpc::ClientAsyncWriterInterface< ::dtproto::nav_msgs::SteppableAreaTimeStamped>* AsyncSubscribeSteppableAreaRaw(::grpc::ClientContext* context, ::dtproto::std_msgs::Response* response, ::grpc::CompletionQueue* cq, void* tag) = 0;
    virtual ::grpc::ClientAsyncWriterInterface< ::dtproto::nav_msgs::SteppableAreaTimeStamped>* PrepareAsyncSubscribeSteppableAreaRaw(::grpc::ClientContext* context, ::dtproto::std_msgs::Response* response, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientWriterInterface< ::dtproto::robot_msgs::RobotCommandTimeStamped>* SubscribeRobotCommandRaw(::grpc::ClientContext* context, ::dtproto::std_msgs::Response* response) = 0;
    virtual ::grpc::ClientAsyncWriterInterface< ::dtproto::robot_msgs::RobotCommandTimeStamped>* AsyncSubscribeRobotCommandRaw(::grpc::ClientContext* context, ::dtproto::std_msgs::Response* response, ::grpc::CompletionQueue* cq, void* tag) = 0;
    virtual ::grpc::ClientAsyncWriterInterface< ::dtproto::robot_msgs::RobotCommandTimeStamped>* PrepareAsyncSubscribeRobotCommandRaw(::grpc::ClientContext* context, ::dtproto::std_msgs::Response* response, ::grpc::CompletionQueue* cq) = 0;
  };
  class Stub final : public StubInterface {
   public:
    Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());
    std::unique_ptr< ::grpc::ClientReader< ::dtproto::quadruped::OdomWithJointPosTimeStamped>> PublishOdomWithJointPos(::grpc::ClientContext* context, const ::dtproto::std_msgs::Request& request) {
      return std::unique_ptr< ::grpc::ClientReader< ::dtproto::quadruped::OdomWithJointPosTimeStamped>>(PublishOdomWithJointPosRaw(context, request));
    }
    std::unique_ptr< ::grpc::ClientAsyncReader< ::dtproto::quadruped::OdomWithJointPosTimeStamped>> AsyncPublishOdomWithJointPos(::grpc::ClientContext* context, const ::dtproto::std_msgs::Request& request, ::grpc::CompletionQueue* cq, void* tag) {
      return std::unique_ptr< ::grpc::ClientAsyncReader< ::dtproto::quadruped::OdomWithJointPosTimeStamped>>(AsyncPublishOdomWithJointPosRaw(context, request, cq, tag));
    }
    std::unique_ptr< ::grpc::ClientAsyncReader< ::dtproto::quadruped::OdomWithJointPosTimeStamped>> PrepareAsyncPublishOdomWithJointPos(::grpc::ClientContext* context, const ::dtproto::std_msgs::Request& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncReader< ::dtproto::quadruped::OdomWithJointPosTimeStamped>>(PrepareAsyncPublishOdomWithJointPosRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientReader< ::dtproto::sensor_msgs::ImuTimeStamped>> PublishImu(::grpc::ClientContext* context, const ::dtproto::std_msgs::Request& request) {
      return std::unique_ptr< ::grpc::ClientReader< ::dtproto::sensor_msgs::ImuTimeStamped>>(PublishImuRaw(context, request));
    }
    std::unique_ptr< ::grpc::ClientAsyncReader< ::dtproto::sensor_msgs::ImuTimeStamped>> AsyncPublishImu(::grpc::ClientContext* context, const ::dtproto::std_msgs::Request& request, ::grpc::CompletionQueue* cq, void* tag) {
      return std::unique_ptr< ::grpc::ClientAsyncReader< ::dtproto::sensor_msgs::ImuTimeStamped>>(AsyncPublishImuRaw(context, request, cq, tag));
    }
    std::unique_ptr< ::grpc::ClientAsyncReader< ::dtproto::sensor_msgs::ImuTimeStamped>> PrepareAsyncPublishImu(::grpc::ClientContext* context, const ::dtproto::std_msgs::Request& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncReader< ::dtproto::sensor_msgs::ImuTimeStamped>>(PrepareAsyncPublishImuRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientWriter< ::dtproto::nav_msgs::OdomTimeStamped>> SubscribeVisualOdom(::grpc::ClientContext* context, ::dtproto::std_msgs::Response* response) {
      return std::unique_ptr< ::grpc::ClientWriter< ::dtproto::nav_msgs::OdomTimeStamped>>(SubscribeVisualOdomRaw(context, response));
    }
    std::unique_ptr< ::grpc::ClientAsyncWriter< ::dtproto::nav_msgs::OdomTimeStamped>> AsyncSubscribeVisualOdom(::grpc::ClientContext* context, ::dtproto::std_msgs::Response* response, ::grpc::CompletionQueue* cq, void* tag) {
      return std::unique_ptr< ::grpc::ClientAsyncWriter< ::dtproto::nav_msgs::OdomTimeStamped>>(AsyncSubscribeVisualOdomRaw(context, response, cq, tag));
    }
    std::unique_ptr< ::grpc::ClientAsyncWriter< ::dtproto::nav_msgs::OdomTimeStamped>> PrepareAsyncSubscribeVisualOdom(::grpc::ClientContext* context, ::dtproto::std_msgs::Response* response, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncWriter< ::dtproto::nav_msgs::OdomTimeStamped>>(PrepareAsyncSubscribeVisualOdomRaw(context, response, cq));
    }
    std::unique_ptr< ::grpc::ClientWriter< ::dtproto::nav_msgs::GridTimeStamped>> SubscribeLocalGridmap(::grpc::ClientContext* context, ::dtproto::std_msgs::Response* response) {
      return std::unique_ptr< ::grpc::ClientWriter< ::dtproto::nav_msgs::GridTimeStamped>>(SubscribeLocalGridmapRaw(context, response));
    }
    std::unique_ptr< ::grpc::ClientAsyncWriter< ::dtproto::nav_msgs::GridTimeStamped>> AsyncSubscribeLocalGridmap(::grpc::ClientContext* context, ::dtproto::std_msgs::Response* response, ::grpc::CompletionQueue* cq, void* tag) {
      return std::unique_ptr< ::grpc::ClientAsyncWriter< ::dtproto::nav_msgs::GridTimeStamped>>(AsyncSubscribeLocalGridmapRaw(context, response, cq, tag));
    }
    std::unique_ptr< ::grpc::ClientAsyncWriter< ::dtproto::nav_msgs::GridTimeStamped>> PrepareAsyncSubscribeLocalGridmap(::grpc::ClientContext* context, ::dtproto::std_msgs::Response* response, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncWriter< ::dtproto::nav_msgs::GridTimeStamped>>(PrepareAsyncSubscribeLocalGridmapRaw(context, response, cq));
    }
    std::unique_ptr< ::grpc::ClientWriter< ::dtproto::nav_msgs::SteppableAreaTimeStamped>> SubscribeSteppableArea(::grpc::ClientContext* context, ::dtproto::std_msgs::Response* response) {
      return std::unique_ptr< ::grpc::ClientWriter< ::dtproto::nav_msgs::SteppableAreaTimeStamped>>(SubscribeSteppableAreaRaw(context, response));
    }
    std::unique_ptr< ::grpc::ClientAsyncWriter< ::dtproto::nav_msgs::SteppableAreaTimeStamped>> AsyncSubscribeSteppableArea(::grpc::ClientContext* context, ::dtproto::std_msgs::Response* response, ::grpc::CompletionQueue* cq, void* tag) {
      return std::unique_ptr< ::grpc::ClientAsyncWriter< ::dtproto::nav_msgs::SteppableAreaTimeStamped>>(AsyncSubscribeSteppableAreaRaw(context, response, cq, tag));
    }
    std::unique_ptr< ::grpc::ClientAsyncWriter< ::dtproto::nav_msgs::SteppableAreaTimeStamped>> PrepareAsyncSubscribeSteppableArea(::grpc::ClientContext* context, ::dtproto::std_msgs::Response* response, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncWriter< ::dtproto::nav_msgs::SteppableAreaTimeStamped>>(PrepareAsyncSubscribeSteppableAreaRaw(context, response, cq));
    }
    std::unique_ptr< ::grpc::ClientWriter< ::dtproto::robot_msgs::RobotCommandTimeStamped>> SubscribeRobotCommand(::grpc::ClientContext* context, ::dtproto::std_msgs::Response* response) {
      return std::unique_ptr< ::grpc::ClientWriter< ::dtproto::robot_msgs::RobotCommandTimeStamped>>(SubscribeRobotCommandRaw(context, response));
    }
    std::unique_ptr< ::grpc::ClientAsyncWriter< ::dtproto::robot_msgs::RobotCommandTimeStamped>> AsyncSubscribeRobotCommand(::grpc::ClientContext* context, ::dtproto::std_msgs::Response* response, ::grpc::CompletionQueue* cq, void* tag) {
      return std::unique_ptr< ::grpc::ClientAsyncWriter< ::dtproto::robot_msgs::RobotCommandTimeStamped>>(AsyncSubscribeRobotCommandRaw(context, response, cq, tag));
    }
    std::unique_ptr< ::grpc::ClientAsyncWriter< ::dtproto::robot_msgs::RobotCommandTimeStamped>> PrepareAsyncSubscribeRobotCommand(::grpc::ClientContext* context, ::dtproto::std_msgs::Response* response, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncWriter< ::dtproto::robot_msgs::RobotCommandTimeStamped>>(PrepareAsyncSubscribeRobotCommandRaw(context, response, cq));
    }
    class async final :
      public StubInterface::async_interface {
     public:
      void PublishOdomWithJointPos(::grpc::ClientContext* context, const ::dtproto::std_msgs::Request* request, ::grpc::ClientReadReactor< ::dtproto::quadruped::OdomWithJointPosTimeStamped>* reactor) override;
      void PublishImu(::grpc::ClientContext* context, const ::dtproto::std_msgs::Request* request, ::grpc::ClientReadReactor< ::dtproto::sensor_msgs::ImuTimeStamped>* reactor) override;
      void SubscribeVisualOdom(::grpc::ClientContext* context, ::dtproto::std_msgs::Response* response, ::grpc::ClientWriteReactor< ::dtproto::nav_msgs::OdomTimeStamped>* reactor) override;
      void SubscribeLocalGridmap(::grpc::ClientContext* context, ::dtproto::std_msgs::Response* response, ::grpc::ClientWriteReactor< ::dtproto::nav_msgs::GridTimeStamped>* reactor) override;
      void SubscribeSteppableArea(::grpc::ClientContext* context, ::dtproto::std_msgs::Response* response, ::grpc::ClientWriteReactor< ::dtproto::nav_msgs::SteppableAreaTimeStamped>* reactor) override;
      void SubscribeRobotCommand(::grpc::ClientContext* context, ::dtproto::std_msgs::Response* response, ::grpc::ClientWriteReactor< ::dtproto::robot_msgs::RobotCommandTimeStamped>* reactor) override;
     private:
      friend class Stub;
      explicit async(Stub* stub): stub_(stub) { }
      Stub* stub() { return stub_; }
      Stub* stub_;
    };
    class async* async() override { return &async_stub_; }

   private:
    std::shared_ptr< ::grpc::ChannelInterface> channel_;
    class async async_stub_{this};
    ::grpc::ClientReader< ::dtproto::quadruped::OdomWithJointPosTimeStamped>* PublishOdomWithJointPosRaw(::grpc::ClientContext* context, const ::dtproto::std_msgs::Request& request) override;
    ::grpc::ClientAsyncReader< ::dtproto::quadruped::OdomWithJointPosTimeStamped>* AsyncPublishOdomWithJointPosRaw(::grpc::ClientContext* context, const ::dtproto::std_msgs::Request& request, ::grpc::CompletionQueue* cq, void* tag) override;
    ::grpc::ClientAsyncReader< ::dtproto::quadruped::OdomWithJointPosTimeStamped>* PrepareAsyncPublishOdomWithJointPosRaw(::grpc::ClientContext* context, const ::dtproto::std_msgs::Request& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientReader< ::dtproto::sensor_msgs::ImuTimeStamped>* PublishImuRaw(::grpc::ClientContext* context, const ::dtproto::std_msgs::Request& request) override;
    ::grpc::ClientAsyncReader< ::dtproto::sensor_msgs::ImuTimeStamped>* AsyncPublishImuRaw(::grpc::ClientContext* context, const ::dtproto::std_msgs::Request& request, ::grpc::CompletionQueue* cq, void* tag) override;
    ::grpc::ClientAsyncReader< ::dtproto::sensor_msgs::ImuTimeStamped>* PrepareAsyncPublishImuRaw(::grpc::ClientContext* context, const ::dtproto::std_msgs::Request& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientWriter< ::dtproto::nav_msgs::OdomTimeStamped>* SubscribeVisualOdomRaw(::grpc::ClientContext* context, ::dtproto::std_msgs::Response* response) override;
    ::grpc::ClientAsyncWriter< ::dtproto::nav_msgs::OdomTimeStamped>* AsyncSubscribeVisualOdomRaw(::grpc::ClientContext* context, ::dtproto::std_msgs::Response* response, ::grpc::CompletionQueue* cq, void* tag) override;
    ::grpc::ClientAsyncWriter< ::dtproto::nav_msgs::OdomTimeStamped>* PrepareAsyncSubscribeVisualOdomRaw(::grpc::ClientContext* context, ::dtproto::std_msgs::Response* response, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientWriter< ::dtproto::nav_msgs::GridTimeStamped>* SubscribeLocalGridmapRaw(::grpc::ClientContext* context, ::dtproto::std_msgs::Response* response) override;
    ::grpc::ClientAsyncWriter< ::dtproto::nav_msgs::GridTimeStamped>* AsyncSubscribeLocalGridmapRaw(::grpc::ClientContext* context, ::dtproto::std_msgs::Response* response, ::grpc::CompletionQueue* cq, void* tag) override;
    ::grpc::ClientAsyncWriter< ::dtproto::nav_msgs::GridTimeStamped>* PrepareAsyncSubscribeLocalGridmapRaw(::grpc::ClientContext* context, ::dtproto::std_msgs::Response* response, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientWriter< ::dtproto::nav_msgs::SteppableAreaTimeStamped>* SubscribeSteppableAreaRaw(::grpc::ClientContext* context, ::dtproto::std_msgs::Response* response) override;
    ::grpc::ClientAsyncWriter< ::dtproto::nav_msgs::SteppableAreaTimeStamped>* AsyncSubscribeSteppableAreaRaw(::grpc::ClientContext* context, ::dtproto::std_msgs::Response* response, ::grpc::CompletionQueue* cq, void* tag) override;
    ::grpc::ClientAsyncWriter< ::dtproto::nav_msgs::SteppableAreaTimeStamped>* PrepareAsyncSubscribeSteppableAreaRaw(::grpc::ClientContext* context, ::dtproto::std_msgs::Response* response, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientWriter< ::dtproto::robot_msgs::RobotCommandTimeStamped>* SubscribeRobotCommandRaw(::grpc::ClientContext* context, ::dtproto::std_msgs::Response* response) override;
    ::grpc::ClientAsyncWriter< ::dtproto::robot_msgs::RobotCommandTimeStamped>* AsyncSubscribeRobotCommandRaw(::grpc::ClientContext* context, ::dtproto::std_msgs::Response* response, ::grpc::CompletionQueue* cq, void* tag) override;
    ::grpc::ClientAsyncWriter< ::dtproto::robot_msgs::RobotCommandTimeStamped>* PrepareAsyncSubscribeRobotCommandRaw(::grpc::ClientContext* context, ::dtproto::std_msgs::Response* response, ::grpc::CompletionQueue* cq) override;
    const ::grpc::internal::RpcMethod rpcmethod_PublishOdomWithJointPos_;
    const ::grpc::internal::RpcMethod rpcmethod_PublishImu_;
    const ::grpc::internal::RpcMethod rpcmethod_SubscribeVisualOdom_;
    const ::grpc::internal::RpcMethod rpcmethod_SubscribeLocalGridmap_;
    const ::grpc::internal::RpcMethod rpcmethod_SubscribeSteppableArea_;
    const ::grpc::internal::RpcMethod rpcmethod_SubscribeRobotCommand_;
  };
  static std::unique_ptr<Stub> NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());

  class Service : public ::grpc::Service {
   public:
    Service();
    virtual ~Service();
    // server publishes infomation
    virtual ::grpc::Status PublishOdomWithJointPos(::grpc::ServerContext* context, const ::dtproto::std_msgs::Request* request, ::grpc::ServerWriter< ::dtproto::quadruped::OdomWithJointPosTimeStamped>* writer);
    virtual ::grpc::Status PublishImu(::grpc::ServerContext* context, const ::dtproto::std_msgs::Request* request, ::grpc::ServerWriter< ::dtproto::sensor_msgs::ImuTimeStamped>* writer);
    // client feeds information
    virtual ::grpc::Status SubscribeVisualOdom(::grpc::ServerContext* context, ::grpc::ServerReader< ::dtproto::nav_msgs::OdomTimeStamped>* reader, ::dtproto::std_msgs::Response* response);
    virtual ::grpc::Status SubscribeLocalGridmap(::grpc::ServerContext* context, ::grpc::ServerReader< ::dtproto::nav_msgs::GridTimeStamped>* reader, ::dtproto::std_msgs::Response* response);
    virtual ::grpc::Status SubscribeSteppableArea(::grpc::ServerContext* context, ::grpc::ServerReader< ::dtproto::nav_msgs::SteppableAreaTimeStamped>* reader, ::dtproto::std_msgs::Response* response);
    virtual ::grpc::Status SubscribeRobotCommand(::grpc::ServerContext* context, ::grpc::ServerReader< ::dtproto::robot_msgs::RobotCommandTimeStamped>* reader, ::dtproto::std_msgs::Response* response);
  };
  template <class BaseClass>
  class WithAsyncMethod_PublishOdomWithJointPos : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_PublishOdomWithJointPos() {
      ::grpc::Service::MarkMethodAsync(0);
    }
    ~WithAsyncMethod_PublishOdomWithJointPos() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status PublishOdomWithJointPos(::grpc::ServerContext* /*context*/, const ::dtproto::std_msgs::Request* /*request*/, ::grpc::ServerWriter< ::dtproto::quadruped::OdomWithJointPosTimeStamped>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestPublishOdomWithJointPos(::grpc::ServerContext* context, ::dtproto::std_msgs::Request* request, ::grpc::ServerAsyncWriter< ::dtproto::quadruped::OdomWithJointPosTimeStamped>* writer, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncServerStreaming(0, context, request, writer, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_PublishImu : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_PublishImu() {
      ::grpc::Service::MarkMethodAsync(1);
    }
    ~WithAsyncMethod_PublishImu() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status PublishImu(::grpc::ServerContext* /*context*/, const ::dtproto::std_msgs::Request* /*request*/, ::grpc::ServerWriter< ::dtproto::sensor_msgs::ImuTimeStamped>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestPublishImu(::grpc::ServerContext* context, ::dtproto::std_msgs::Request* request, ::grpc::ServerAsyncWriter< ::dtproto::sensor_msgs::ImuTimeStamped>* writer, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncServerStreaming(1, context, request, writer, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_SubscribeVisualOdom : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_SubscribeVisualOdom() {
      ::grpc::Service::MarkMethodAsync(2);
    }
    ~WithAsyncMethod_SubscribeVisualOdom() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SubscribeVisualOdom(::grpc::ServerContext* /*context*/, ::grpc::ServerReader< ::dtproto::nav_msgs::OdomTimeStamped>* /*reader*/, ::dtproto::std_msgs::Response* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSubscribeVisualOdom(::grpc::ServerContext* context, ::grpc::ServerAsyncReader< ::dtproto::std_msgs::Response, ::dtproto::nav_msgs::OdomTimeStamped>* reader, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncClientStreaming(2, context, reader, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_SubscribeLocalGridmap : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_SubscribeLocalGridmap() {
      ::grpc::Service::MarkMethodAsync(3);
    }
    ~WithAsyncMethod_SubscribeLocalGridmap() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SubscribeLocalGridmap(::grpc::ServerContext* /*context*/, ::grpc::ServerReader< ::dtproto::nav_msgs::GridTimeStamped>* /*reader*/, ::dtproto::std_msgs::Response* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSubscribeLocalGridmap(::grpc::ServerContext* context, ::grpc::ServerAsyncReader< ::dtproto::std_msgs::Response, ::dtproto::nav_msgs::GridTimeStamped>* reader, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncClientStreaming(3, context, reader, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_SubscribeSteppableArea : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_SubscribeSteppableArea() {
      ::grpc::Service::MarkMethodAsync(4);
    }
    ~WithAsyncMethod_SubscribeSteppableArea() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SubscribeSteppableArea(::grpc::ServerContext* /*context*/, ::grpc::ServerReader< ::dtproto::nav_msgs::SteppableAreaTimeStamped>* /*reader*/, ::dtproto::std_msgs::Response* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSubscribeSteppableArea(::grpc::ServerContext* context, ::grpc::ServerAsyncReader< ::dtproto::std_msgs::Response, ::dtproto::nav_msgs::SteppableAreaTimeStamped>* reader, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncClientStreaming(4, context, reader, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_SubscribeRobotCommand : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_SubscribeRobotCommand() {
      ::grpc::Service::MarkMethodAsync(5);
    }
    ~WithAsyncMethod_SubscribeRobotCommand() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SubscribeRobotCommand(::grpc::ServerContext* /*context*/, ::grpc::ServerReader< ::dtproto::robot_msgs::RobotCommandTimeStamped>* /*reader*/, ::dtproto::std_msgs::Response* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSubscribeRobotCommand(::grpc::ServerContext* context, ::grpc::ServerAsyncReader< ::dtproto::std_msgs::Response, ::dtproto::robot_msgs::RobotCommandTimeStamped>* reader, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncClientStreaming(5, context, reader, new_call_cq, notification_cq, tag);
    }
  };
  typedef WithAsyncMethod_PublishOdomWithJointPos<WithAsyncMethod_PublishImu<WithAsyncMethod_SubscribeVisualOdom<WithAsyncMethod_SubscribeLocalGridmap<WithAsyncMethod_SubscribeSteppableArea<WithAsyncMethod_SubscribeRobotCommand<Service > > > > > > AsyncService;
  template <class BaseClass>
  class WithCallbackMethod_PublishOdomWithJointPos : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_PublishOdomWithJointPos() {
      ::grpc::Service::MarkMethodCallback(0,
          new ::grpc::internal::CallbackServerStreamingHandler< ::dtproto::std_msgs::Request, ::dtproto::quadruped::OdomWithJointPosTimeStamped>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::dtproto::std_msgs::Request* request) { return this->PublishOdomWithJointPos(context, request); }));
    }
    ~WithCallbackMethod_PublishOdomWithJointPos() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status PublishOdomWithJointPos(::grpc::ServerContext* /*context*/, const ::dtproto::std_msgs::Request* /*request*/, ::grpc::ServerWriter< ::dtproto::quadruped::OdomWithJointPosTimeStamped>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerWriteReactor< ::dtproto::quadruped::OdomWithJointPosTimeStamped>* PublishOdomWithJointPos(
      ::grpc::CallbackServerContext* /*context*/, const ::dtproto::std_msgs::Request* /*request*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_PublishImu : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_PublishImu() {
      ::grpc::Service::MarkMethodCallback(1,
          new ::grpc::internal::CallbackServerStreamingHandler< ::dtproto::std_msgs::Request, ::dtproto::sensor_msgs::ImuTimeStamped>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::dtproto::std_msgs::Request* request) { return this->PublishImu(context, request); }));
    }
    ~WithCallbackMethod_PublishImu() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status PublishImu(::grpc::ServerContext* /*context*/, const ::dtproto::std_msgs::Request* /*request*/, ::grpc::ServerWriter< ::dtproto::sensor_msgs::ImuTimeStamped>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerWriteReactor< ::dtproto::sensor_msgs::ImuTimeStamped>* PublishImu(
      ::grpc::CallbackServerContext* /*context*/, const ::dtproto::std_msgs::Request* /*request*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_SubscribeVisualOdom : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_SubscribeVisualOdom() {
      ::grpc::Service::MarkMethodCallback(2,
          new ::grpc::internal::CallbackClientStreamingHandler< ::dtproto::nav_msgs::OdomTimeStamped, ::dtproto::std_msgs::Response>(
            [this](
                   ::grpc::CallbackServerContext* context, ::dtproto::std_msgs::Response* response) { return this->SubscribeVisualOdom(context, response); }));
    }
    ~WithCallbackMethod_SubscribeVisualOdom() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SubscribeVisualOdom(::grpc::ServerContext* /*context*/, ::grpc::ServerReader< ::dtproto::nav_msgs::OdomTimeStamped>* /*reader*/, ::dtproto::std_msgs::Response* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerReadReactor< ::dtproto::nav_msgs::OdomTimeStamped>* SubscribeVisualOdom(
      ::grpc::CallbackServerContext* /*context*/, ::dtproto::std_msgs::Response* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_SubscribeLocalGridmap : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_SubscribeLocalGridmap() {
      ::grpc::Service::MarkMethodCallback(3,
          new ::grpc::internal::CallbackClientStreamingHandler< ::dtproto::nav_msgs::GridTimeStamped, ::dtproto::std_msgs::Response>(
            [this](
                   ::grpc::CallbackServerContext* context, ::dtproto::std_msgs::Response* response) { return this->SubscribeLocalGridmap(context, response); }));
    }
    ~WithCallbackMethod_SubscribeLocalGridmap() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SubscribeLocalGridmap(::grpc::ServerContext* /*context*/, ::grpc::ServerReader< ::dtproto::nav_msgs::GridTimeStamped>* /*reader*/, ::dtproto::std_msgs::Response* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerReadReactor< ::dtproto::nav_msgs::GridTimeStamped>* SubscribeLocalGridmap(
      ::grpc::CallbackServerContext* /*context*/, ::dtproto::std_msgs::Response* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_SubscribeSteppableArea : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_SubscribeSteppableArea() {
      ::grpc::Service::MarkMethodCallback(4,
          new ::grpc::internal::CallbackClientStreamingHandler< ::dtproto::nav_msgs::SteppableAreaTimeStamped, ::dtproto::std_msgs::Response>(
            [this](
                   ::grpc::CallbackServerContext* context, ::dtproto::std_msgs::Response* response) { return this->SubscribeSteppableArea(context, response); }));
    }
    ~WithCallbackMethod_SubscribeSteppableArea() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SubscribeSteppableArea(::grpc::ServerContext* /*context*/, ::grpc::ServerReader< ::dtproto::nav_msgs::SteppableAreaTimeStamped>* /*reader*/, ::dtproto::std_msgs::Response* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerReadReactor< ::dtproto::nav_msgs::SteppableAreaTimeStamped>* SubscribeSteppableArea(
      ::grpc::CallbackServerContext* /*context*/, ::dtproto::std_msgs::Response* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_SubscribeRobotCommand : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_SubscribeRobotCommand() {
      ::grpc::Service::MarkMethodCallback(5,
          new ::grpc::internal::CallbackClientStreamingHandler< ::dtproto::robot_msgs::RobotCommandTimeStamped, ::dtproto::std_msgs::Response>(
            [this](
                   ::grpc::CallbackServerContext* context, ::dtproto::std_msgs::Response* response) { return this->SubscribeRobotCommand(context, response); }));
    }
    ~WithCallbackMethod_SubscribeRobotCommand() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SubscribeRobotCommand(::grpc::ServerContext* /*context*/, ::grpc::ServerReader< ::dtproto::robot_msgs::RobotCommandTimeStamped>* /*reader*/, ::dtproto::std_msgs::Response* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerReadReactor< ::dtproto::robot_msgs::RobotCommandTimeStamped>* SubscribeRobotCommand(
      ::grpc::CallbackServerContext* /*context*/, ::dtproto::std_msgs::Response* /*response*/)  { return nullptr; }
  };
  typedef WithCallbackMethod_PublishOdomWithJointPos<WithCallbackMethod_PublishImu<WithCallbackMethod_SubscribeVisualOdom<WithCallbackMethod_SubscribeLocalGridmap<WithCallbackMethod_SubscribeSteppableArea<WithCallbackMethod_SubscribeRobotCommand<Service > > > > > > CallbackService;
  typedef CallbackService ExperimentalCallbackService;
  template <class BaseClass>
  class WithGenericMethod_PublishOdomWithJointPos : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_PublishOdomWithJointPos() {
      ::grpc::Service::MarkMethodGeneric(0);
    }
    ~WithGenericMethod_PublishOdomWithJointPos() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status PublishOdomWithJointPos(::grpc::ServerContext* /*context*/, const ::dtproto::std_msgs::Request* /*request*/, ::grpc::ServerWriter< ::dtproto::quadruped::OdomWithJointPosTimeStamped>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_PublishImu : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_PublishImu() {
      ::grpc::Service::MarkMethodGeneric(1);
    }
    ~WithGenericMethod_PublishImu() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status PublishImu(::grpc::ServerContext* /*context*/, const ::dtproto::std_msgs::Request* /*request*/, ::grpc::ServerWriter< ::dtproto::sensor_msgs::ImuTimeStamped>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_SubscribeVisualOdom : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_SubscribeVisualOdom() {
      ::grpc::Service::MarkMethodGeneric(2);
    }
    ~WithGenericMethod_SubscribeVisualOdom() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SubscribeVisualOdom(::grpc::ServerContext* /*context*/, ::grpc::ServerReader< ::dtproto::nav_msgs::OdomTimeStamped>* /*reader*/, ::dtproto::std_msgs::Response* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_SubscribeLocalGridmap : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_SubscribeLocalGridmap() {
      ::grpc::Service::MarkMethodGeneric(3);
    }
    ~WithGenericMethod_SubscribeLocalGridmap() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SubscribeLocalGridmap(::grpc::ServerContext* /*context*/, ::grpc::ServerReader< ::dtproto::nav_msgs::GridTimeStamped>* /*reader*/, ::dtproto::std_msgs::Response* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_SubscribeSteppableArea : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_SubscribeSteppableArea() {
      ::grpc::Service::MarkMethodGeneric(4);
    }
    ~WithGenericMethod_SubscribeSteppableArea() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SubscribeSteppableArea(::grpc::ServerContext* /*context*/, ::grpc::ServerReader< ::dtproto::nav_msgs::SteppableAreaTimeStamped>* /*reader*/, ::dtproto::std_msgs::Response* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_SubscribeRobotCommand : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_SubscribeRobotCommand() {
      ::grpc::Service::MarkMethodGeneric(5);
    }
    ~WithGenericMethod_SubscribeRobotCommand() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SubscribeRobotCommand(::grpc::ServerContext* /*context*/, ::grpc::ServerReader< ::dtproto::robot_msgs::RobotCommandTimeStamped>* /*reader*/, ::dtproto::std_msgs::Response* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithRawMethod_PublishOdomWithJointPos : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_PublishOdomWithJointPos() {
      ::grpc::Service::MarkMethodRaw(0);
    }
    ~WithRawMethod_PublishOdomWithJointPos() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status PublishOdomWithJointPos(::grpc::ServerContext* /*context*/, const ::dtproto::std_msgs::Request* /*request*/, ::grpc::ServerWriter< ::dtproto::quadruped::OdomWithJointPosTimeStamped>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestPublishOdomWithJointPos(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncWriter< ::grpc::ByteBuffer>* writer, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncServerStreaming(0, context, request, writer, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_PublishImu : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_PublishImu() {
      ::grpc::Service::MarkMethodRaw(1);
    }
    ~WithRawMethod_PublishImu() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status PublishImu(::grpc::ServerContext* /*context*/, const ::dtproto::std_msgs::Request* /*request*/, ::grpc::ServerWriter< ::dtproto::sensor_msgs::ImuTimeStamped>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestPublishImu(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncWriter< ::grpc::ByteBuffer>* writer, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncServerStreaming(1, context, request, writer, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_SubscribeVisualOdom : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_SubscribeVisualOdom() {
      ::grpc::Service::MarkMethodRaw(2);
    }
    ~WithRawMethod_SubscribeVisualOdom() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SubscribeVisualOdom(::grpc::ServerContext* /*context*/, ::grpc::ServerReader< ::dtproto::nav_msgs::OdomTimeStamped>* /*reader*/, ::dtproto::std_msgs::Response* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSubscribeVisualOdom(::grpc::ServerContext* context, ::grpc::ServerAsyncReader< ::grpc::ByteBuffer, ::grpc::ByteBuffer>* reader, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncClientStreaming(2, context, reader, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_SubscribeLocalGridmap : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_SubscribeLocalGridmap() {
      ::grpc::Service::MarkMethodRaw(3);
    }
    ~WithRawMethod_SubscribeLocalGridmap() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SubscribeLocalGridmap(::grpc::ServerContext* /*context*/, ::grpc::ServerReader< ::dtproto::nav_msgs::GridTimeStamped>* /*reader*/, ::dtproto::std_msgs::Response* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSubscribeLocalGridmap(::grpc::ServerContext* context, ::grpc::ServerAsyncReader< ::grpc::ByteBuffer, ::grpc::ByteBuffer>* reader, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncClientStreaming(3, context, reader, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_SubscribeSteppableArea : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_SubscribeSteppableArea() {
      ::grpc::Service::MarkMethodRaw(4);
    }
    ~WithRawMethod_SubscribeSteppableArea() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SubscribeSteppableArea(::grpc::ServerContext* /*context*/, ::grpc::ServerReader< ::dtproto::nav_msgs::SteppableAreaTimeStamped>* /*reader*/, ::dtproto::std_msgs::Response* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSubscribeSteppableArea(::grpc::ServerContext* context, ::grpc::ServerAsyncReader< ::grpc::ByteBuffer, ::grpc::ByteBuffer>* reader, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncClientStreaming(4, context, reader, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_SubscribeRobotCommand : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_SubscribeRobotCommand() {
      ::grpc::Service::MarkMethodRaw(5);
    }
    ~WithRawMethod_SubscribeRobotCommand() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SubscribeRobotCommand(::grpc::ServerContext* /*context*/, ::grpc::ServerReader< ::dtproto::robot_msgs::RobotCommandTimeStamped>* /*reader*/, ::dtproto::std_msgs::Response* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSubscribeRobotCommand(::grpc::ServerContext* context, ::grpc::ServerAsyncReader< ::grpc::ByteBuffer, ::grpc::ByteBuffer>* reader, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncClientStreaming(5, context, reader, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_PublishOdomWithJointPos : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_PublishOdomWithJointPos() {
      ::grpc::Service::MarkMethodRawCallback(0,
          new ::grpc::internal::CallbackServerStreamingHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const::grpc::ByteBuffer* request) { return this->PublishOdomWithJointPos(context, request); }));
    }
    ~WithRawCallbackMethod_PublishOdomWithJointPos() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status PublishOdomWithJointPos(::grpc::ServerContext* /*context*/, const ::dtproto::std_msgs::Request* /*request*/, ::grpc::ServerWriter< ::dtproto::quadruped::OdomWithJointPosTimeStamped>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerWriteReactor< ::grpc::ByteBuffer>* PublishOdomWithJointPos(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_PublishImu : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_PublishImu() {
      ::grpc::Service::MarkMethodRawCallback(1,
          new ::grpc::internal::CallbackServerStreamingHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const::grpc::ByteBuffer* request) { return this->PublishImu(context, request); }));
    }
    ~WithRawCallbackMethod_PublishImu() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status PublishImu(::grpc::ServerContext* /*context*/, const ::dtproto::std_msgs::Request* /*request*/, ::grpc::ServerWriter< ::dtproto::sensor_msgs::ImuTimeStamped>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerWriteReactor< ::grpc::ByteBuffer>* PublishImu(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_SubscribeVisualOdom : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_SubscribeVisualOdom() {
      ::grpc::Service::MarkMethodRawCallback(2,
          new ::grpc::internal::CallbackClientStreamingHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, ::grpc::ByteBuffer* response) { return this->SubscribeVisualOdom(context, response); }));
    }
    ~WithRawCallbackMethod_SubscribeVisualOdom() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SubscribeVisualOdom(::grpc::ServerContext* /*context*/, ::grpc::ServerReader< ::dtproto::nav_msgs::OdomTimeStamped>* /*reader*/, ::dtproto::std_msgs::Response* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerReadReactor< ::grpc::ByteBuffer>* SubscribeVisualOdom(
      ::grpc::CallbackServerContext* /*context*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_SubscribeLocalGridmap : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_SubscribeLocalGridmap() {
      ::grpc::Service::MarkMethodRawCallback(3,
          new ::grpc::internal::CallbackClientStreamingHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, ::grpc::ByteBuffer* response) { return this->SubscribeLocalGridmap(context, response); }));
    }
    ~WithRawCallbackMethod_SubscribeLocalGridmap() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SubscribeLocalGridmap(::grpc::ServerContext* /*context*/, ::grpc::ServerReader< ::dtproto::nav_msgs::GridTimeStamped>* /*reader*/, ::dtproto::std_msgs::Response* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerReadReactor< ::grpc::ByteBuffer>* SubscribeLocalGridmap(
      ::grpc::CallbackServerContext* /*context*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_SubscribeSteppableArea : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_SubscribeSteppableArea() {
      ::grpc::Service::MarkMethodRawCallback(4,
          new ::grpc::internal::CallbackClientStreamingHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, ::grpc::ByteBuffer* response) { return this->SubscribeSteppableArea(context, response); }));
    }
    ~WithRawCallbackMethod_SubscribeSteppableArea() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SubscribeSteppableArea(::grpc::ServerContext* /*context*/, ::grpc::ServerReader< ::dtproto::nav_msgs::SteppableAreaTimeStamped>* /*reader*/, ::dtproto::std_msgs::Response* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerReadReactor< ::grpc::ByteBuffer>* SubscribeSteppableArea(
      ::grpc::CallbackServerContext* /*context*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_SubscribeRobotCommand : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_SubscribeRobotCommand() {
      ::grpc::Service::MarkMethodRawCallback(5,
          new ::grpc::internal::CallbackClientStreamingHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, ::grpc::ByteBuffer* response) { return this->SubscribeRobotCommand(context, response); }));
    }
    ~WithRawCallbackMethod_SubscribeRobotCommand() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SubscribeRobotCommand(::grpc::ServerContext* /*context*/, ::grpc::ServerReader< ::dtproto::robot_msgs::RobotCommandTimeStamped>* /*reader*/, ::dtproto::std_msgs::Response* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerReadReactor< ::grpc::ByteBuffer>* SubscribeRobotCommand(
      ::grpc::CallbackServerContext* /*context*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  typedef Service StreamedUnaryService;
  template <class BaseClass>
  class WithSplitStreamingMethod_PublishOdomWithJointPos : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithSplitStreamingMethod_PublishOdomWithJointPos() {
      ::grpc::Service::MarkMethodStreamed(0,
        new ::grpc::internal::SplitServerStreamingHandler<
          ::dtproto::std_msgs::Request, ::dtproto::quadruped::OdomWithJointPosTimeStamped>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerSplitStreamer<
                     ::dtproto::std_msgs::Request, ::dtproto::quadruped::OdomWithJointPosTimeStamped>* streamer) {
                       return this->StreamedPublishOdomWithJointPos(context,
                         streamer);
                  }));
    }
    ~WithSplitStreamingMethod_PublishOdomWithJointPos() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status PublishOdomWithJointPos(::grpc::ServerContext* /*context*/, const ::dtproto::std_msgs::Request* /*request*/, ::grpc::ServerWriter< ::dtproto::quadruped::OdomWithJointPosTimeStamped>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with split streamed
    virtual ::grpc::Status StreamedPublishOdomWithJointPos(::grpc::ServerContext* context, ::grpc::ServerSplitStreamer< ::dtproto::std_msgs::Request,::dtproto::quadruped::OdomWithJointPosTimeStamped>* server_split_streamer) = 0;
  };
  template <class BaseClass>
  class WithSplitStreamingMethod_PublishImu : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithSplitStreamingMethod_PublishImu() {
      ::grpc::Service::MarkMethodStreamed(1,
        new ::grpc::internal::SplitServerStreamingHandler<
          ::dtproto::std_msgs::Request, ::dtproto::sensor_msgs::ImuTimeStamped>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerSplitStreamer<
                     ::dtproto::std_msgs::Request, ::dtproto::sensor_msgs::ImuTimeStamped>* streamer) {
                       return this->StreamedPublishImu(context,
                         streamer);
                  }));
    }
    ~WithSplitStreamingMethod_PublishImu() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status PublishImu(::grpc::ServerContext* /*context*/, const ::dtproto::std_msgs::Request* /*request*/, ::grpc::ServerWriter< ::dtproto::sensor_msgs::ImuTimeStamped>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with split streamed
    virtual ::grpc::Status StreamedPublishImu(::grpc::ServerContext* context, ::grpc::ServerSplitStreamer< ::dtproto::std_msgs::Request,::dtproto::sensor_msgs::ImuTimeStamped>* server_split_streamer) = 0;
  };
  typedef WithSplitStreamingMethod_PublishOdomWithJointPos<WithSplitStreamingMethod_PublishImu<Service > > SplitStreamedService;
  typedef WithSplitStreamingMethod_PublishOdomWithJointPos<WithSplitStreamingMethod_PublishImu<Service > > StreamedService;
};

}  // namespace quadruped
}  // namespace dtproto


#endif  // GRPC_QuadrupedNav_2eproto__INCLUDED
