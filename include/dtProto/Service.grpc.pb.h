// Generated by the gRPC C++ plugin.
// If you make any local change, they will be lost.
// source: dtProto/Service.proto
#ifndef GRPC_dtProto_2fService_2eproto__INCLUDED
#define GRPC_dtProto_2fService_2eproto__INCLUDED

#include "dtProto/Service.pb.h"

#include <functional>
#include <grpcpp/generic/async_generic_service.h>
#include <grpcpp/support/async_stream.h>
#include <grpcpp/support/async_unary_call.h>
#include <grpcpp/support/client_callback.h>
#include <grpcpp/client_context.h>
#include <grpcpp/completion_queue.h>
#include <grpcpp/support/message_allocator.h>
#include <grpcpp/support/method_handler.h>
#include <grpcpp/impl/proto_utils.h>
#include <grpcpp/impl/rpc_method.h>
#include <grpcpp/support/server_callback.h>
#include <grpcpp/impl/server_callback_handlers.h>
#include <grpcpp/server_context.h>
#include <grpcpp/impl/service_type.h>
#include <grpcpp/support/status.h>
#include <grpcpp/support/stub_options.h>
#include <grpcpp/support/sync_stream.h>

namespace dtproto {

class dtService final {
 public:
  static constexpr char const* service_full_name() {
    return "dtproto.dtService";
  }
  class StubInterface {
   public:
    virtual ~StubInterface() {}
    virtual ::grpc::Status Version(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::google::protobuf::StringValue* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::StringValue>> AsyncVersion(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::StringValue>>(AsyncVersionRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::StringValue>> PrepareAsyncVersion(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::StringValue>>(PrepareAsyncVersionRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientReaderInterface< ::dtproto::std_msgs::State>> StreamState(::grpc::ClientContext* context, const ::dtproto::std_msgs::Request& request) {
      return std::unique_ptr< ::grpc::ClientReaderInterface< ::dtproto::std_msgs::State>>(StreamStateRaw(context, request));
    }
    std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::dtproto::std_msgs::State>> AsyncStreamState(::grpc::ClientContext* context, const ::dtproto::std_msgs::Request& request, ::grpc::CompletionQueue* cq, void* tag) {
      return std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::dtproto::std_msgs::State>>(AsyncStreamStateRaw(context, request, cq, tag));
    }
    std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::dtproto::std_msgs::State>> PrepareAsyncStreamState(::grpc::ClientContext* context, const ::dtproto::std_msgs::Request& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::dtproto::std_msgs::State>>(PrepareAsyncStreamStateRaw(context, request, cq));
    }
    virtual ::grpc::Status Move(::grpc::ClientContext* context, const ::dtproto::robot_msgs::MoveControl& request, ::dtproto::std_msgs::Response* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::dtproto::std_msgs::Response>> AsyncMove(::grpc::ClientContext* context, const ::dtproto::robot_msgs::MoveControl& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::dtproto::std_msgs::Response>>(AsyncMoveRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::dtproto::std_msgs::Response>> PrepareAsyncMove(::grpc::ClientContext* context, const ::dtproto::robot_msgs::MoveControl& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::dtproto::std_msgs::Response>>(PrepareAsyncMoveRaw(context, request, cq));
    }
    virtual ::grpc::Status MoveJoint(::grpc::ClientContext* context, const ::dtproto::robot_msgs::JointControl& request, ::dtproto::std_msgs::Response* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::dtproto::std_msgs::Response>> AsyncMoveJoint(::grpc::ClientContext* context, const ::dtproto::robot_msgs::JointControl& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::dtproto::std_msgs::Response>>(AsyncMoveJointRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::dtproto::std_msgs::Response>> PrepareAsyncMoveJoint(::grpc::ClientContext* context, const ::dtproto::robot_msgs::JointControl& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::dtproto::std_msgs::Response>>(PrepareAsyncMoveJointRaw(context, request, cq));
    }
    virtual ::grpc::Status Command(::grpc::ClientContext* context, const ::dtproto::robot_msgs::ControlCmd& request, ::dtproto::std_msgs::Response* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::dtproto::std_msgs::Response>> AsyncCommand(::grpc::ClientContext* context, const ::dtproto::robot_msgs::ControlCmd& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::dtproto::std_msgs::Response>>(AsyncCommandRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::dtproto::std_msgs::Response>> PrepareAsyncCommand(::grpc::ClientContext* context, const ::dtproto::robot_msgs::ControlCmd& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::dtproto::std_msgs::Response>>(PrepareAsyncCommandRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientReaderWriterInterface< ::dtproto::sensor_msgs::Joy, ::dtproto::std_msgs::Response>> StreamJoy(::grpc::ClientContext* context) {
      return std::unique_ptr< ::grpc::ClientReaderWriterInterface< ::dtproto::sensor_msgs::Joy, ::dtproto::std_msgs::Response>>(StreamJoyRaw(context));
    }
    std::unique_ptr< ::grpc::ClientAsyncReaderWriterInterface< ::dtproto::sensor_msgs::Joy, ::dtproto::std_msgs::Response>> AsyncStreamJoy(::grpc::ClientContext* context, ::grpc::CompletionQueue* cq, void* tag) {
      return std::unique_ptr< ::grpc::ClientAsyncReaderWriterInterface< ::dtproto::sensor_msgs::Joy, ::dtproto::std_msgs::Response>>(AsyncStreamJoyRaw(context, cq, tag));
    }
    std::unique_ptr< ::grpc::ClientAsyncReaderWriterInterface< ::dtproto::sensor_msgs::Joy, ::dtproto::std_msgs::Response>> PrepareAsyncStreamJoy(::grpc::ClientContext* context, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncReaderWriterInterface< ::dtproto::sensor_msgs::Joy, ::dtproto::std_msgs::Response>>(PrepareAsyncStreamJoyRaw(context, cq));
    }
    virtual ::grpc::Status QueryRobotInfo(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::dtproto::robot_msgs::RobotInfo* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::dtproto::robot_msgs::RobotInfo>> AsyncQueryRobotInfo(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::dtproto::robot_msgs::RobotInfo>>(AsyncQueryRobotInfoRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::dtproto::robot_msgs::RobotInfo>> PrepareAsyncQueryRobotInfo(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::dtproto::robot_msgs::RobotInfo>>(PrepareAsyncQueryRobotInfoRaw(context, request, cq));
    }
    class async_interface {
     public:
      virtual ~async_interface() {}
      virtual void Version(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::google::protobuf::StringValue* response, std::function<void(::grpc::Status)>) = 0;
      virtual void Version(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::google::protobuf::StringValue* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void StreamState(::grpc::ClientContext* context, const ::dtproto::std_msgs::Request* request, ::grpc::ClientReadReactor< ::dtproto::std_msgs::State>* reactor) = 0;
      virtual void Move(::grpc::ClientContext* context, const ::dtproto::robot_msgs::MoveControl* request, ::dtproto::std_msgs::Response* response, std::function<void(::grpc::Status)>) = 0;
      virtual void Move(::grpc::ClientContext* context, const ::dtproto::robot_msgs::MoveControl* request, ::dtproto::std_msgs::Response* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void MoveJoint(::grpc::ClientContext* context, const ::dtproto::robot_msgs::JointControl* request, ::dtproto::std_msgs::Response* response, std::function<void(::grpc::Status)>) = 0;
      virtual void MoveJoint(::grpc::ClientContext* context, const ::dtproto::robot_msgs::JointControl* request, ::dtproto::std_msgs::Response* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void Command(::grpc::ClientContext* context, const ::dtproto::robot_msgs::ControlCmd* request, ::dtproto::std_msgs::Response* response, std::function<void(::grpc::Status)>) = 0;
      virtual void Command(::grpc::ClientContext* context, const ::dtproto::robot_msgs::ControlCmd* request, ::dtproto::std_msgs::Response* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void StreamJoy(::grpc::ClientContext* context, ::grpc::ClientBidiReactor< ::dtproto::sensor_msgs::Joy,::dtproto::std_msgs::Response>* reactor) = 0;
      virtual void QueryRobotInfo(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::dtproto::robot_msgs::RobotInfo* response, std::function<void(::grpc::Status)>) = 0;
      virtual void QueryRobotInfo(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::dtproto::robot_msgs::RobotInfo* response, ::grpc::ClientUnaryReactor* reactor) = 0;
    };
    typedef class async_interface experimental_async_interface;
    virtual class async_interface* async() { return nullptr; }
    class async_interface* experimental_async() { return async(); }
   private:
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::StringValue>* AsyncVersionRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::StringValue>* PrepareAsyncVersionRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientReaderInterface< ::dtproto::std_msgs::State>* StreamStateRaw(::grpc::ClientContext* context, const ::dtproto::std_msgs::Request& request) = 0;
    virtual ::grpc::ClientAsyncReaderInterface< ::dtproto::std_msgs::State>* AsyncStreamStateRaw(::grpc::ClientContext* context, const ::dtproto::std_msgs::Request& request, ::grpc::CompletionQueue* cq, void* tag) = 0;
    virtual ::grpc::ClientAsyncReaderInterface< ::dtproto::std_msgs::State>* PrepareAsyncStreamStateRaw(::grpc::ClientContext* context, const ::dtproto::std_msgs::Request& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::dtproto::std_msgs::Response>* AsyncMoveRaw(::grpc::ClientContext* context, const ::dtproto::robot_msgs::MoveControl& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::dtproto::std_msgs::Response>* PrepareAsyncMoveRaw(::grpc::ClientContext* context, const ::dtproto::robot_msgs::MoveControl& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::dtproto::std_msgs::Response>* AsyncMoveJointRaw(::grpc::ClientContext* context, const ::dtproto::robot_msgs::JointControl& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::dtproto::std_msgs::Response>* PrepareAsyncMoveJointRaw(::grpc::ClientContext* context, const ::dtproto::robot_msgs::JointControl& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::dtproto::std_msgs::Response>* AsyncCommandRaw(::grpc::ClientContext* context, const ::dtproto::robot_msgs::ControlCmd& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::dtproto::std_msgs::Response>* PrepareAsyncCommandRaw(::grpc::ClientContext* context, const ::dtproto::robot_msgs::ControlCmd& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientReaderWriterInterface< ::dtproto::sensor_msgs::Joy, ::dtproto::std_msgs::Response>* StreamJoyRaw(::grpc::ClientContext* context) = 0;
    virtual ::grpc::ClientAsyncReaderWriterInterface< ::dtproto::sensor_msgs::Joy, ::dtproto::std_msgs::Response>* AsyncStreamJoyRaw(::grpc::ClientContext* context, ::grpc::CompletionQueue* cq, void* tag) = 0;
    virtual ::grpc::ClientAsyncReaderWriterInterface< ::dtproto::sensor_msgs::Joy, ::dtproto::std_msgs::Response>* PrepareAsyncStreamJoyRaw(::grpc::ClientContext* context, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::dtproto::robot_msgs::RobotInfo>* AsyncQueryRobotInfoRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::dtproto::robot_msgs::RobotInfo>* PrepareAsyncQueryRobotInfoRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) = 0;
  };
  class Stub final : public StubInterface {
   public:
    Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());
    ::grpc::Status Version(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::google::protobuf::StringValue* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::StringValue>> AsyncVersion(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::StringValue>>(AsyncVersionRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::StringValue>> PrepareAsyncVersion(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::StringValue>>(PrepareAsyncVersionRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientReader< ::dtproto::std_msgs::State>> StreamState(::grpc::ClientContext* context, const ::dtproto::std_msgs::Request& request) {
      return std::unique_ptr< ::grpc::ClientReader< ::dtproto::std_msgs::State>>(StreamStateRaw(context, request));
    }
    std::unique_ptr< ::grpc::ClientAsyncReader< ::dtproto::std_msgs::State>> AsyncStreamState(::grpc::ClientContext* context, const ::dtproto::std_msgs::Request& request, ::grpc::CompletionQueue* cq, void* tag) {
      return std::unique_ptr< ::grpc::ClientAsyncReader< ::dtproto::std_msgs::State>>(AsyncStreamStateRaw(context, request, cq, tag));
    }
    std::unique_ptr< ::grpc::ClientAsyncReader< ::dtproto::std_msgs::State>> PrepareAsyncStreamState(::grpc::ClientContext* context, const ::dtproto::std_msgs::Request& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncReader< ::dtproto::std_msgs::State>>(PrepareAsyncStreamStateRaw(context, request, cq));
    }
    ::grpc::Status Move(::grpc::ClientContext* context, const ::dtproto::robot_msgs::MoveControl& request, ::dtproto::std_msgs::Response* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::dtproto::std_msgs::Response>> AsyncMove(::grpc::ClientContext* context, const ::dtproto::robot_msgs::MoveControl& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::dtproto::std_msgs::Response>>(AsyncMoveRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::dtproto::std_msgs::Response>> PrepareAsyncMove(::grpc::ClientContext* context, const ::dtproto::robot_msgs::MoveControl& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::dtproto::std_msgs::Response>>(PrepareAsyncMoveRaw(context, request, cq));
    }
    ::grpc::Status MoveJoint(::grpc::ClientContext* context, const ::dtproto::robot_msgs::JointControl& request, ::dtproto::std_msgs::Response* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::dtproto::std_msgs::Response>> AsyncMoveJoint(::grpc::ClientContext* context, const ::dtproto::robot_msgs::JointControl& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::dtproto::std_msgs::Response>>(AsyncMoveJointRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::dtproto::std_msgs::Response>> PrepareAsyncMoveJoint(::grpc::ClientContext* context, const ::dtproto::robot_msgs::JointControl& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::dtproto::std_msgs::Response>>(PrepareAsyncMoveJointRaw(context, request, cq));
    }
    ::grpc::Status Command(::grpc::ClientContext* context, const ::dtproto::robot_msgs::ControlCmd& request, ::dtproto::std_msgs::Response* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::dtproto::std_msgs::Response>> AsyncCommand(::grpc::ClientContext* context, const ::dtproto::robot_msgs::ControlCmd& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::dtproto::std_msgs::Response>>(AsyncCommandRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::dtproto::std_msgs::Response>> PrepareAsyncCommand(::grpc::ClientContext* context, const ::dtproto::robot_msgs::ControlCmd& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::dtproto::std_msgs::Response>>(PrepareAsyncCommandRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientReaderWriter< ::dtproto::sensor_msgs::Joy, ::dtproto::std_msgs::Response>> StreamJoy(::grpc::ClientContext* context) {
      return std::unique_ptr< ::grpc::ClientReaderWriter< ::dtproto::sensor_msgs::Joy, ::dtproto::std_msgs::Response>>(StreamJoyRaw(context));
    }
    std::unique_ptr<  ::grpc::ClientAsyncReaderWriter< ::dtproto::sensor_msgs::Joy, ::dtproto::std_msgs::Response>> AsyncStreamJoy(::grpc::ClientContext* context, ::grpc::CompletionQueue* cq, void* tag) {
      return std::unique_ptr< ::grpc::ClientAsyncReaderWriter< ::dtproto::sensor_msgs::Joy, ::dtproto::std_msgs::Response>>(AsyncStreamJoyRaw(context, cq, tag));
    }
    std::unique_ptr<  ::grpc::ClientAsyncReaderWriter< ::dtproto::sensor_msgs::Joy, ::dtproto::std_msgs::Response>> PrepareAsyncStreamJoy(::grpc::ClientContext* context, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncReaderWriter< ::dtproto::sensor_msgs::Joy, ::dtproto::std_msgs::Response>>(PrepareAsyncStreamJoyRaw(context, cq));
    }
    ::grpc::Status QueryRobotInfo(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::dtproto::robot_msgs::RobotInfo* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::dtproto::robot_msgs::RobotInfo>> AsyncQueryRobotInfo(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::dtproto::robot_msgs::RobotInfo>>(AsyncQueryRobotInfoRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::dtproto::robot_msgs::RobotInfo>> PrepareAsyncQueryRobotInfo(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::dtproto::robot_msgs::RobotInfo>>(PrepareAsyncQueryRobotInfoRaw(context, request, cq));
    }
    class async final :
      public StubInterface::async_interface {
     public:
      void Version(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::google::protobuf::StringValue* response, std::function<void(::grpc::Status)>) override;
      void Version(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::google::protobuf::StringValue* response, ::grpc::ClientUnaryReactor* reactor) override;
      void StreamState(::grpc::ClientContext* context, const ::dtproto::std_msgs::Request* request, ::grpc::ClientReadReactor< ::dtproto::std_msgs::State>* reactor) override;
      void Move(::grpc::ClientContext* context, const ::dtproto::robot_msgs::MoveControl* request, ::dtproto::std_msgs::Response* response, std::function<void(::grpc::Status)>) override;
      void Move(::grpc::ClientContext* context, const ::dtproto::robot_msgs::MoveControl* request, ::dtproto::std_msgs::Response* response, ::grpc::ClientUnaryReactor* reactor) override;
      void MoveJoint(::grpc::ClientContext* context, const ::dtproto::robot_msgs::JointControl* request, ::dtproto::std_msgs::Response* response, std::function<void(::grpc::Status)>) override;
      void MoveJoint(::grpc::ClientContext* context, const ::dtproto::robot_msgs::JointControl* request, ::dtproto::std_msgs::Response* response, ::grpc::ClientUnaryReactor* reactor) override;
      void Command(::grpc::ClientContext* context, const ::dtproto::robot_msgs::ControlCmd* request, ::dtproto::std_msgs::Response* response, std::function<void(::grpc::Status)>) override;
      void Command(::grpc::ClientContext* context, const ::dtproto::robot_msgs::ControlCmd* request, ::dtproto::std_msgs::Response* response, ::grpc::ClientUnaryReactor* reactor) override;
      void StreamJoy(::grpc::ClientContext* context, ::grpc::ClientBidiReactor< ::dtproto::sensor_msgs::Joy,::dtproto::std_msgs::Response>* reactor) override;
      void QueryRobotInfo(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::dtproto::robot_msgs::RobotInfo* response, std::function<void(::grpc::Status)>) override;
      void QueryRobotInfo(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::dtproto::robot_msgs::RobotInfo* response, ::grpc::ClientUnaryReactor* reactor) override;
     private:
      friend class Stub;
      explicit async(Stub* stub): stub_(stub) { }
      Stub* stub() { return stub_; }
      Stub* stub_;
    };
    class async* async() override { return &async_stub_; }

   private:
    std::shared_ptr< ::grpc::ChannelInterface> channel_;
    class async async_stub_{this};
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::StringValue>* AsyncVersionRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::StringValue>* PrepareAsyncVersionRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientReader< ::dtproto::std_msgs::State>* StreamStateRaw(::grpc::ClientContext* context, const ::dtproto::std_msgs::Request& request) override;
    ::grpc::ClientAsyncReader< ::dtproto::std_msgs::State>* AsyncStreamStateRaw(::grpc::ClientContext* context, const ::dtproto::std_msgs::Request& request, ::grpc::CompletionQueue* cq, void* tag) override;
    ::grpc::ClientAsyncReader< ::dtproto::std_msgs::State>* PrepareAsyncStreamStateRaw(::grpc::ClientContext* context, const ::dtproto::std_msgs::Request& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::dtproto::std_msgs::Response>* AsyncMoveRaw(::grpc::ClientContext* context, const ::dtproto::robot_msgs::MoveControl& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::dtproto::std_msgs::Response>* PrepareAsyncMoveRaw(::grpc::ClientContext* context, const ::dtproto::robot_msgs::MoveControl& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::dtproto::std_msgs::Response>* AsyncMoveJointRaw(::grpc::ClientContext* context, const ::dtproto::robot_msgs::JointControl& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::dtproto::std_msgs::Response>* PrepareAsyncMoveJointRaw(::grpc::ClientContext* context, const ::dtproto::robot_msgs::JointControl& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::dtproto::std_msgs::Response>* AsyncCommandRaw(::grpc::ClientContext* context, const ::dtproto::robot_msgs::ControlCmd& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::dtproto::std_msgs::Response>* PrepareAsyncCommandRaw(::grpc::ClientContext* context, const ::dtproto::robot_msgs::ControlCmd& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientReaderWriter< ::dtproto::sensor_msgs::Joy, ::dtproto::std_msgs::Response>* StreamJoyRaw(::grpc::ClientContext* context) override;
    ::grpc::ClientAsyncReaderWriter< ::dtproto::sensor_msgs::Joy, ::dtproto::std_msgs::Response>* AsyncStreamJoyRaw(::grpc::ClientContext* context, ::grpc::CompletionQueue* cq, void* tag) override;
    ::grpc::ClientAsyncReaderWriter< ::dtproto::sensor_msgs::Joy, ::dtproto::std_msgs::Response>* PrepareAsyncStreamJoyRaw(::grpc::ClientContext* context, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::dtproto::robot_msgs::RobotInfo>* AsyncQueryRobotInfoRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::dtproto::robot_msgs::RobotInfo>* PrepareAsyncQueryRobotInfoRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) override;
    const ::grpc::internal::RpcMethod rpcmethod_Version_;
    const ::grpc::internal::RpcMethod rpcmethod_StreamState_;
    const ::grpc::internal::RpcMethod rpcmethod_Move_;
    const ::grpc::internal::RpcMethod rpcmethod_MoveJoint_;
    const ::grpc::internal::RpcMethod rpcmethod_Command_;
    const ::grpc::internal::RpcMethod rpcmethod_StreamJoy_;
    const ::grpc::internal::RpcMethod rpcmethod_QueryRobotInfo_;
  };
  static std::unique_ptr<Stub> NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());

  class Service : public ::grpc::Service {
   public:
    Service();
    virtual ~Service();
    virtual ::grpc::Status Version(::grpc::ServerContext* context, const ::google::protobuf::Empty* request, ::google::protobuf::StringValue* response);
    virtual ::grpc::Status StreamState(::grpc::ServerContext* context, const ::dtproto::std_msgs::Request* request, ::grpc::ServerWriter< ::dtproto::std_msgs::State>* writer);
    virtual ::grpc::Status Move(::grpc::ServerContext* context, const ::dtproto::robot_msgs::MoveControl* request, ::dtproto::std_msgs::Response* response);
    virtual ::grpc::Status MoveJoint(::grpc::ServerContext* context, const ::dtproto::robot_msgs::JointControl* request, ::dtproto::std_msgs::Response* response);
    virtual ::grpc::Status Command(::grpc::ServerContext* context, const ::dtproto::robot_msgs::ControlCmd* request, ::dtproto::std_msgs::Response* response);
    virtual ::grpc::Status StreamJoy(::grpc::ServerContext* context, ::grpc::ServerReaderWriter< ::dtproto::std_msgs::Response, ::dtproto::sensor_msgs::Joy>* stream);
    virtual ::grpc::Status QueryRobotInfo(::grpc::ServerContext* context, const ::google::protobuf::Empty* request, ::dtproto::robot_msgs::RobotInfo* response);
  };
  template <class BaseClass>
  class WithAsyncMethod_Version : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_Version() {
      ::grpc::Service::MarkMethodAsync(0);
    }
    ~WithAsyncMethod_Version() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Version(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::google::protobuf::StringValue* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestVersion(::grpc::ServerContext* context, ::google::protobuf::Empty* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::StringValue>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_StreamState : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_StreamState() {
      ::grpc::Service::MarkMethodAsync(1);
    }
    ~WithAsyncMethod_StreamState() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status StreamState(::grpc::ServerContext* /*context*/, const ::dtproto::std_msgs::Request* /*request*/, ::grpc::ServerWriter< ::dtproto::std_msgs::State>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestStreamState(::grpc::ServerContext* context, ::dtproto::std_msgs::Request* request, ::grpc::ServerAsyncWriter< ::dtproto::std_msgs::State>* writer, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncServerStreaming(1, context, request, writer, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_Move : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_Move() {
      ::grpc::Service::MarkMethodAsync(2);
    }
    ~WithAsyncMethod_Move() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Move(::grpc::ServerContext* /*context*/, const ::dtproto::robot_msgs::MoveControl* /*request*/, ::dtproto::std_msgs::Response* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestMove(::grpc::ServerContext* context, ::dtproto::robot_msgs::MoveControl* request, ::grpc::ServerAsyncResponseWriter< ::dtproto::std_msgs::Response>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_MoveJoint : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_MoveJoint() {
      ::grpc::Service::MarkMethodAsync(3);
    }
    ~WithAsyncMethod_MoveJoint() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status MoveJoint(::grpc::ServerContext* /*context*/, const ::dtproto::robot_msgs::JointControl* /*request*/, ::dtproto::std_msgs::Response* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestMoveJoint(::grpc::ServerContext* context, ::dtproto::robot_msgs::JointControl* request, ::grpc::ServerAsyncResponseWriter< ::dtproto::std_msgs::Response>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_Command : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_Command() {
      ::grpc::Service::MarkMethodAsync(4);
    }
    ~WithAsyncMethod_Command() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Command(::grpc::ServerContext* /*context*/, const ::dtproto::robot_msgs::ControlCmd* /*request*/, ::dtproto::std_msgs::Response* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCommand(::grpc::ServerContext* context, ::dtproto::robot_msgs::ControlCmd* request, ::grpc::ServerAsyncResponseWriter< ::dtproto::std_msgs::Response>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(4, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_StreamJoy : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_StreamJoy() {
      ::grpc::Service::MarkMethodAsync(5);
    }
    ~WithAsyncMethod_StreamJoy() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status StreamJoy(::grpc::ServerContext* /*context*/, ::grpc::ServerReaderWriter< ::dtproto::std_msgs::Response, ::dtproto::sensor_msgs::Joy>* /*stream*/)  override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestStreamJoy(::grpc::ServerContext* context, ::grpc::ServerAsyncReaderWriter< ::dtproto::std_msgs::Response, ::dtproto::sensor_msgs::Joy>* stream, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncBidiStreaming(5, context, stream, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_QueryRobotInfo : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_QueryRobotInfo() {
      ::grpc::Service::MarkMethodAsync(6);
    }
    ~WithAsyncMethod_QueryRobotInfo() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status QueryRobotInfo(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::dtproto::robot_msgs::RobotInfo* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestQueryRobotInfo(::grpc::ServerContext* context, ::google::protobuf::Empty* request, ::grpc::ServerAsyncResponseWriter< ::dtproto::robot_msgs::RobotInfo>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(6, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  typedef WithAsyncMethod_Version<WithAsyncMethod_StreamState<WithAsyncMethod_Move<WithAsyncMethod_MoveJoint<WithAsyncMethod_Command<WithAsyncMethod_StreamJoy<WithAsyncMethod_QueryRobotInfo<Service > > > > > > > AsyncService;
  template <class BaseClass>
  class WithCallbackMethod_Version : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_Version() {
      ::grpc::Service::MarkMethodCallback(0,
          new ::grpc::internal::CallbackUnaryHandler< ::google::protobuf::Empty, ::google::protobuf::StringValue>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::google::protobuf::Empty* request, ::google::protobuf::StringValue* response) { return this->Version(context, request, response); }));}
    void SetMessageAllocatorFor_Version(
        ::grpc::MessageAllocator< ::google::protobuf::Empty, ::google::protobuf::StringValue>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(0);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::google::protobuf::Empty, ::google::protobuf::StringValue>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_Version() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Version(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::google::protobuf::StringValue* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* Version(
      ::grpc::CallbackServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::google::protobuf::StringValue* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_StreamState : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_StreamState() {
      ::grpc::Service::MarkMethodCallback(1,
          new ::grpc::internal::CallbackServerStreamingHandler< ::dtproto::std_msgs::Request, ::dtproto::std_msgs::State>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::dtproto::std_msgs::Request* request) { return this->StreamState(context, request); }));
    }
    ~WithCallbackMethod_StreamState() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status StreamState(::grpc::ServerContext* /*context*/, const ::dtproto::std_msgs::Request* /*request*/, ::grpc::ServerWriter< ::dtproto::std_msgs::State>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerWriteReactor< ::dtproto::std_msgs::State>* StreamState(
      ::grpc::CallbackServerContext* /*context*/, const ::dtproto::std_msgs::Request* /*request*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_Move : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_Move() {
      ::grpc::Service::MarkMethodCallback(2,
          new ::grpc::internal::CallbackUnaryHandler< ::dtproto::robot_msgs::MoveControl, ::dtproto::std_msgs::Response>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::dtproto::robot_msgs::MoveControl* request, ::dtproto::std_msgs::Response* response) { return this->Move(context, request, response); }));}
    void SetMessageAllocatorFor_Move(
        ::grpc::MessageAllocator< ::dtproto::robot_msgs::MoveControl, ::dtproto::std_msgs::Response>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(2);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::dtproto::robot_msgs::MoveControl, ::dtproto::std_msgs::Response>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_Move() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Move(::grpc::ServerContext* /*context*/, const ::dtproto::robot_msgs::MoveControl* /*request*/, ::dtproto::std_msgs::Response* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* Move(
      ::grpc::CallbackServerContext* /*context*/, const ::dtproto::robot_msgs::MoveControl* /*request*/, ::dtproto::std_msgs::Response* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_MoveJoint : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_MoveJoint() {
      ::grpc::Service::MarkMethodCallback(3,
          new ::grpc::internal::CallbackUnaryHandler< ::dtproto::robot_msgs::JointControl, ::dtproto::std_msgs::Response>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::dtproto::robot_msgs::JointControl* request, ::dtproto::std_msgs::Response* response) { return this->MoveJoint(context, request, response); }));}
    void SetMessageAllocatorFor_MoveJoint(
        ::grpc::MessageAllocator< ::dtproto::robot_msgs::JointControl, ::dtproto::std_msgs::Response>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(3);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::dtproto::robot_msgs::JointControl, ::dtproto::std_msgs::Response>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_MoveJoint() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status MoveJoint(::grpc::ServerContext* /*context*/, const ::dtproto::robot_msgs::JointControl* /*request*/, ::dtproto::std_msgs::Response* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* MoveJoint(
      ::grpc::CallbackServerContext* /*context*/, const ::dtproto::robot_msgs::JointControl* /*request*/, ::dtproto::std_msgs::Response* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_Command : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_Command() {
      ::grpc::Service::MarkMethodCallback(4,
          new ::grpc::internal::CallbackUnaryHandler< ::dtproto::robot_msgs::ControlCmd, ::dtproto::std_msgs::Response>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::dtproto::robot_msgs::ControlCmd* request, ::dtproto::std_msgs::Response* response) { return this->Command(context, request, response); }));}
    void SetMessageAllocatorFor_Command(
        ::grpc::MessageAllocator< ::dtproto::robot_msgs::ControlCmd, ::dtproto::std_msgs::Response>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(4);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::dtproto::robot_msgs::ControlCmd, ::dtproto::std_msgs::Response>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_Command() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Command(::grpc::ServerContext* /*context*/, const ::dtproto::robot_msgs::ControlCmd* /*request*/, ::dtproto::std_msgs::Response* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* Command(
      ::grpc::CallbackServerContext* /*context*/, const ::dtproto::robot_msgs::ControlCmd* /*request*/, ::dtproto::std_msgs::Response* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_StreamJoy : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_StreamJoy() {
      ::grpc::Service::MarkMethodCallback(5,
          new ::grpc::internal::CallbackBidiHandler< ::dtproto::sensor_msgs::Joy, ::dtproto::std_msgs::Response>(
            [this](
                   ::grpc::CallbackServerContext* context) { return this->StreamJoy(context); }));
    }
    ~WithCallbackMethod_StreamJoy() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status StreamJoy(::grpc::ServerContext* /*context*/, ::grpc::ServerReaderWriter< ::dtproto::std_msgs::Response, ::dtproto::sensor_msgs::Joy>* /*stream*/)  override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerBidiReactor< ::dtproto::sensor_msgs::Joy, ::dtproto::std_msgs::Response>* StreamJoy(
      ::grpc::CallbackServerContext* /*context*/)
      { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_QueryRobotInfo : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_QueryRobotInfo() {
      ::grpc::Service::MarkMethodCallback(6,
          new ::grpc::internal::CallbackUnaryHandler< ::google::protobuf::Empty, ::dtproto::robot_msgs::RobotInfo>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::google::protobuf::Empty* request, ::dtproto::robot_msgs::RobotInfo* response) { return this->QueryRobotInfo(context, request, response); }));}
    void SetMessageAllocatorFor_QueryRobotInfo(
        ::grpc::MessageAllocator< ::google::protobuf::Empty, ::dtproto::robot_msgs::RobotInfo>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(6);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::google::protobuf::Empty, ::dtproto::robot_msgs::RobotInfo>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_QueryRobotInfo() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status QueryRobotInfo(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::dtproto::robot_msgs::RobotInfo* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* QueryRobotInfo(
      ::grpc::CallbackServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::dtproto::robot_msgs::RobotInfo* /*response*/)  { return nullptr; }
  };
  typedef WithCallbackMethod_Version<WithCallbackMethod_StreamState<WithCallbackMethod_Move<WithCallbackMethod_MoveJoint<WithCallbackMethod_Command<WithCallbackMethod_StreamJoy<WithCallbackMethod_QueryRobotInfo<Service > > > > > > > CallbackService;
  typedef CallbackService ExperimentalCallbackService;
  template <class BaseClass>
  class WithGenericMethod_Version : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_Version() {
      ::grpc::Service::MarkMethodGeneric(0);
    }
    ~WithGenericMethod_Version() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Version(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::google::protobuf::StringValue* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_StreamState : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_StreamState() {
      ::grpc::Service::MarkMethodGeneric(1);
    }
    ~WithGenericMethod_StreamState() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status StreamState(::grpc::ServerContext* /*context*/, const ::dtproto::std_msgs::Request* /*request*/, ::grpc::ServerWriter< ::dtproto::std_msgs::State>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_Move : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_Move() {
      ::grpc::Service::MarkMethodGeneric(2);
    }
    ~WithGenericMethod_Move() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Move(::grpc::ServerContext* /*context*/, const ::dtproto::robot_msgs::MoveControl* /*request*/, ::dtproto::std_msgs::Response* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_MoveJoint : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_MoveJoint() {
      ::grpc::Service::MarkMethodGeneric(3);
    }
    ~WithGenericMethod_MoveJoint() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status MoveJoint(::grpc::ServerContext* /*context*/, const ::dtproto::robot_msgs::JointControl* /*request*/, ::dtproto::std_msgs::Response* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_Command : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_Command() {
      ::grpc::Service::MarkMethodGeneric(4);
    }
    ~WithGenericMethod_Command() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Command(::grpc::ServerContext* /*context*/, const ::dtproto::robot_msgs::ControlCmd* /*request*/, ::dtproto::std_msgs::Response* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_StreamJoy : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_StreamJoy() {
      ::grpc::Service::MarkMethodGeneric(5);
    }
    ~WithGenericMethod_StreamJoy() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status StreamJoy(::grpc::ServerContext* /*context*/, ::grpc::ServerReaderWriter< ::dtproto::std_msgs::Response, ::dtproto::sensor_msgs::Joy>* /*stream*/)  override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_QueryRobotInfo : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_QueryRobotInfo() {
      ::grpc::Service::MarkMethodGeneric(6);
    }
    ~WithGenericMethod_QueryRobotInfo() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status QueryRobotInfo(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::dtproto::robot_msgs::RobotInfo* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithRawMethod_Version : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_Version() {
      ::grpc::Service::MarkMethodRaw(0);
    }
    ~WithRawMethod_Version() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Version(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::google::protobuf::StringValue* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestVersion(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_StreamState : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_StreamState() {
      ::grpc::Service::MarkMethodRaw(1);
    }
    ~WithRawMethod_StreamState() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status StreamState(::grpc::ServerContext* /*context*/, const ::dtproto::std_msgs::Request* /*request*/, ::grpc::ServerWriter< ::dtproto::std_msgs::State>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestStreamState(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncWriter< ::grpc::ByteBuffer>* writer, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncServerStreaming(1, context, request, writer, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_Move : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_Move() {
      ::grpc::Service::MarkMethodRaw(2);
    }
    ~WithRawMethod_Move() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Move(::grpc::ServerContext* /*context*/, const ::dtproto::robot_msgs::MoveControl* /*request*/, ::dtproto::std_msgs::Response* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestMove(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_MoveJoint : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_MoveJoint() {
      ::grpc::Service::MarkMethodRaw(3);
    }
    ~WithRawMethod_MoveJoint() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status MoveJoint(::grpc::ServerContext* /*context*/, const ::dtproto::robot_msgs::JointControl* /*request*/, ::dtproto::std_msgs::Response* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestMoveJoint(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_Command : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_Command() {
      ::grpc::Service::MarkMethodRaw(4);
    }
    ~WithRawMethod_Command() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Command(::grpc::ServerContext* /*context*/, const ::dtproto::robot_msgs::ControlCmd* /*request*/, ::dtproto::std_msgs::Response* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCommand(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(4, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_StreamJoy : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_StreamJoy() {
      ::grpc::Service::MarkMethodRaw(5);
    }
    ~WithRawMethod_StreamJoy() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status StreamJoy(::grpc::ServerContext* /*context*/, ::grpc::ServerReaderWriter< ::dtproto::std_msgs::Response, ::dtproto::sensor_msgs::Joy>* /*stream*/)  override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestStreamJoy(::grpc::ServerContext* context, ::grpc::ServerAsyncReaderWriter< ::grpc::ByteBuffer, ::grpc::ByteBuffer>* stream, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncBidiStreaming(5, context, stream, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_QueryRobotInfo : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_QueryRobotInfo() {
      ::grpc::Service::MarkMethodRaw(6);
    }
    ~WithRawMethod_QueryRobotInfo() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status QueryRobotInfo(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::dtproto::robot_msgs::RobotInfo* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestQueryRobotInfo(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(6, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_Version : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_Version() {
      ::grpc::Service::MarkMethodRawCallback(0,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->Version(context, request, response); }));
    }
    ~WithRawCallbackMethod_Version() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Version(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::google::protobuf::StringValue* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* Version(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_StreamState : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_StreamState() {
      ::grpc::Service::MarkMethodRawCallback(1,
          new ::grpc::internal::CallbackServerStreamingHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const::grpc::ByteBuffer* request) { return this->StreamState(context, request); }));
    }
    ~WithRawCallbackMethod_StreamState() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status StreamState(::grpc::ServerContext* /*context*/, const ::dtproto::std_msgs::Request* /*request*/, ::grpc::ServerWriter< ::dtproto::std_msgs::State>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerWriteReactor< ::grpc::ByteBuffer>* StreamState(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_Move : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_Move() {
      ::grpc::Service::MarkMethodRawCallback(2,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->Move(context, request, response); }));
    }
    ~WithRawCallbackMethod_Move() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Move(::grpc::ServerContext* /*context*/, const ::dtproto::robot_msgs::MoveControl* /*request*/, ::dtproto::std_msgs::Response* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* Move(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_MoveJoint : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_MoveJoint() {
      ::grpc::Service::MarkMethodRawCallback(3,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->MoveJoint(context, request, response); }));
    }
    ~WithRawCallbackMethod_MoveJoint() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status MoveJoint(::grpc::ServerContext* /*context*/, const ::dtproto::robot_msgs::JointControl* /*request*/, ::dtproto::std_msgs::Response* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* MoveJoint(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_Command : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_Command() {
      ::grpc::Service::MarkMethodRawCallback(4,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->Command(context, request, response); }));
    }
    ~WithRawCallbackMethod_Command() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Command(::grpc::ServerContext* /*context*/, const ::dtproto::robot_msgs::ControlCmd* /*request*/, ::dtproto::std_msgs::Response* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* Command(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_StreamJoy : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_StreamJoy() {
      ::grpc::Service::MarkMethodRawCallback(5,
          new ::grpc::internal::CallbackBidiHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context) { return this->StreamJoy(context); }));
    }
    ~WithRawCallbackMethod_StreamJoy() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status StreamJoy(::grpc::ServerContext* /*context*/, ::grpc::ServerReaderWriter< ::dtproto::std_msgs::Response, ::dtproto::sensor_msgs::Joy>* /*stream*/)  override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerBidiReactor< ::grpc::ByteBuffer, ::grpc::ByteBuffer>* StreamJoy(
      ::grpc::CallbackServerContext* /*context*/)
      { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_QueryRobotInfo : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_QueryRobotInfo() {
      ::grpc::Service::MarkMethodRawCallback(6,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->QueryRobotInfo(context, request, response); }));
    }
    ~WithRawCallbackMethod_QueryRobotInfo() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status QueryRobotInfo(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::dtproto::robot_msgs::RobotInfo* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* QueryRobotInfo(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_Version : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_Version() {
      ::grpc::Service::MarkMethodStreamed(0,
        new ::grpc::internal::StreamedUnaryHandler<
          ::google::protobuf::Empty, ::google::protobuf::StringValue>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::google::protobuf::Empty, ::google::protobuf::StringValue>* streamer) {
                       return this->StreamedVersion(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_Version() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status Version(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::google::protobuf::StringValue* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedVersion(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::protobuf::Empty,::google::protobuf::StringValue>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_Move : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_Move() {
      ::grpc::Service::MarkMethodStreamed(2,
        new ::grpc::internal::StreamedUnaryHandler<
          ::dtproto::robot_msgs::MoveControl, ::dtproto::std_msgs::Response>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::dtproto::robot_msgs::MoveControl, ::dtproto::std_msgs::Response>* streamer) {
                       return this->StreamedMove(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_Move() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status Move(::grpc::ServerContext* /*context*/, const ::dtproto::robot_msgs::MoveControl* /*request*/, ::dtproto::std_msgs::Response* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedMove(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::dtproto::robot_msgs::MoveControl,::dtproto::std_msgs::Response>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_MoveJoint : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_MoveJoint() {
      ::grpc::Service::MarkMethodStreamed(3,
        new ::grpc::internal::StreamedUnaryHandler<
          ::dtproto::robot_msgs::JointControl, ::dtproto::std_msgs::Response>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::dtproto::robot_msgs::JointControl, ::dtproto::std_msgs::Response>* streamer) {
                       return this->StreamedMoveJoint(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_MoveJoint() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status MoveJoint(::grpc::ServerContext* /*context*/, const ::dtproto::robot_msgs::JointControl* /*request*/, ::dtproto::std_msgs::Response* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedMoveJoint(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::dtproto::robot_msgs::JointControl,::dtproto::std_msgs::Response>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_Command : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_Command() {
      ::grpc::Service::MarkMethodStreamed(4,
        new ::grpc::internal::StreamedUnaryHandler<
          ::dtproto::robot_msgs::ControlCmd, ::dtproto::std_msgs::Response>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::dtproto::robot_msgs::ControlCmd, ::dtproto::std_msgs::Response>* streamer) {
                       return this->StreamedCommand(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_Command() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status Command(::grpc::ServerContext* /*context*/, const ::dtproto::robot_msgs::ControlCmd* /*request*/, ::dtproto::std_msgs::Response* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedCommand(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::dtproto::robot_msgs::ControlCmd,::dtproto::std_msgs::Response>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_QueryRobotInfo : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_QueryRobotInfo() {
      ::grpc::Service::MarkMethodStreamed(6,
        new ::grpc::internal::StreamedUnaryHandler<
          ::google::protobuf::Empty, ::dtproto::robot_msgs::RobotInfo>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::google::protobuf::Empty, ::dtproto::robot_msgs::RobotInfo>* streamer) {
                       return this->StreamedQueryRobotInfo(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_QueryRobotInfo() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status QueryRobotInfo(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::dtproto::robot_msgs::RobotInfo* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedQueryRobotInfo(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::protobuf::Empty,::dtproto::robot_msgs::RobotInfo>* server_unary_streamer) = 0;
  };
  typedef WithStreamedUnaryMethod_Version<WithStreamedUnaryMethod_Move<WithStreamedUnaryMethod_MoveJoint<WithStreamedUnaryMethod_Command<WithStreamedUnaryMethod_QueryRobotInfo<Service > > > > > StreamedUnaryService;
  template <class BaseClass>
  class WithSplitStreamingMethod_StreamState : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithSplitStreamingMethod_StreamState() {
      ::grpc::Service::MarkMethodStreamed(1,
        new ::grpc::internal::SplitServerStreamingHandler<
          ::dtproto::std_msgs::Request, ::dtproto::std_msgs::State>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerSplitStreamer<
                     ::dtproto::std_msgs::Request, ::dtproto::std_msgs::State>* streamer) {
                       return this->StreamedStreamState(context,
                         streamer);
                  }));
    }
    ~WithSplitStreamingMethod_StreamState() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status StreamState(::grpc::ServerContext* /*context*/, const ::dtproto::std_msgs::Request* /*request*/, ::grpc::ServerWriter< ::dtproto::std_msgs::State>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with split streamed
    virtual ::grpc::Status StreamedStreamState(::grpc::ServerContext* context, ::grpc::ServerSplitStreamer< ::dtproto::std_msgs::Request,::dtproto::std_msgs::State>* server_split_streamer) = 0;
  };
  typedef WithSplitStreamingMethod_StreamState<Service > SplitStreamedService;
  typedef WithStreamedUnaryMethod_Version<WithSplitStreamingMethod_StreamState<WithStreamedUnaryMethod_Move<WithStreamedUnaryMethod_MoveJoint<WithStreamedUnaryMethod_Command<WithStreamedUnaryMethod_QueryRobotInfo<Service > > > > > > StreamedService;
};

}  // namespace dtproto


#endif  // GRPC_dtProto_2fService_2eproto__INCLUDED
