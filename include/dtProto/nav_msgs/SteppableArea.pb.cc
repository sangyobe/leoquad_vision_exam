// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: dtProto/nav_msgs/SteppableArea.proto

#include "dtProto/nav_msgs/SteppableArea.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace dtproto {
namespace nav_msgs {
PROTOBUF_CONSTEXPR SteppablePolygon::SteppablePolygon(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.polygon_)*/nullptr
  , /*decltype(_impl_.index_)*/0u
  , /*decltype(_impl_.properties_)*/0u
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct SteppablePolygonDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SteppablePolygonDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SteppablePolygonDefaultTypeInternal() {}
  union {
    SteppablePolygon _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SteppablePolygonDefaultTypeInternal _SteppablePolygon_default_instance_;
PROTOBUF_CONSTEXPR SteppableArea::SteppableArea(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.steppables_)*/{}
  , /*decltype(_impl_.steppables_count_)*/0u
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct SteppableAreaDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SteppableAreaDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SteppableAreaDefaultTypeInternal() {}
  union {
    SteppableArea _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SteppableAreaDefaultTypeInternal _SteppableArea_default_instance_;
PROTOBUF_CONSTEXPR SteppableAreaTimeStamped::SteppableAreaTimeStamped(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.header_)*/nullptr
  , /*decltype(_impl_.area_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct SteppableAreaTimeStampedDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SteppableAreaTimeStampedDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SteppableAreaTimeStampedDefaultTypeInternal() {}
  union {
    SteppableAreaTimeStamped _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SteppableAreaTimeStampedDefaultTypeInternal _SteppableAreaTimeStamped_default_instance_;
}  // namespace nav_msgs
}  // namespace dtproto
static ::_pb::Metadata file_level_metadata_dtProto_2fnav_5fmsgs_2fSteppableArea_2eproto[3];
static constexpr ::_pb::EnumDescriptor const** file_level_enum_descriptors_dtProto_2fnav_5fmsgs_2fSteppableArea_2eproto = nullptr;
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_dtProto_2fnav_5fmsgs_2fSteppableArea_2eproto = nullptr;

const uint32_t TableStruct_dtProto_2fnav_5fmsgs_2fSteppableArea_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::dtproto::nav_msgs::SteppablePolygon, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::dtproto::nav_msgs::SteppablePolygon, _impl_.polygon_),
  PROTOBUF_FIELD_OFFSET(::dtproto::nav_msgs::SteppablePolygon, _impl_.index_),
  PROTOBUF_FIELD_OFFSET(::dtproto::nav_msgs::SteppablePolygon, _impl_.properties_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::dtproto::nav_msgs::SteppableArea, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::dtproto::nav_msgs::SteppableArea, _impl_.steppables_),
  PROTOBUF_FIELD_OFFSET(::dtproto::nav_msgs::SteppableArea, _impl_.steppables_count_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::dtproto::nav_msgs::SteppableAreaTimeStamped, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::dtproto::nav_msgs::SteppableAreaTimeStamped, _impl_.header_),
  PROTOBUF_FIELD_OFFSET(::dtproto::nav_msgs::SteppableAreaTimeStamped, _impl_.area_),
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::dtproto::nav_msgs::SteppablePolygon)},
  { 9, -1, -1, sizeof(::dtproto::nav_msgs::SteppableArea)},
  { 17, -1, -1, sizeof(::dtproto::nav_msgs::SteppableAreaTimeStamped)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::dtproto::nav_msgs::_SteppablePolygon_default_instance_._instance,
  &::dtproto::nav_msgs::_SteppableArea_default_instance_._instance,
  &::dtproto::nav_msgs::_SteppableAreaTimeStamped_default_instance_._instance,
};

const char descriptor_table_protodef_dtProto_2fnav_5fmsgs_2fSteppableArea_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n$dtProto/nav_msgs/SteppableArea.proto\022\020"
  "dtproto.nav_msgs\032\035dtProto/std_msgs/Heade"
  "r.proto\032#dtProto/geometry_msgs/Polygon.p"
  "roto\"h\n\020SteppablePolygon\0221\n\007polygon\030\001 \001("
  "\0132 .dtproto.geometry_msgs.Polygon3d\022\r\n\005i"
  "ndex\030\002 \001(\r\022\022\n\nproperties\030\003 \001(\r\"a\n\rSteppa"
  "bleArea\0226\n\nsteppables\030\001 \003(\0132\".dtproto.na"
  "v_msgs.SteppablePolygon\022\030\n\020steppables_co"
  "unt\030\002 \001(\r\"s\n\030SteppableAreaTimeStamped\022(\n"
  "\006header\030\001 \001(\0132\030.dtproto.std_msgs.Header\022"
  "-\n\004area\030\002 \001(\0132\037.dtproto.nav_msgs.Steppab"
  "leAreab\006proto3"
  ;
static const ::_pbi::DescriptorTable* const descriptor_table_dtProto_2fnav_5fmsgs_2fSteppableArea_2eproto_deps[2] = {
  &::descriptor_table_dtProto_2fgeometry_5fmsgs_2fPolygon_2eproto,
  &::descriptor_table_dtProto_2fstd_5fmsgs_2fHeader_2eproto,
};
static ::_pbi::once_flag descriptor_table_dtProto_2fnav_5fmsgs_2fSteppableArea_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_dtProto_2fnav_5fmsgs_2fSteppableArea_2eproto = {
    false, false, 454, descriptor_table_protodef_dtProto_2fnav_5fmsgs_2fSteppableArea_2eproto,
    "dtProto/nav_msgs/SteppableArea.proto",
    &descriptor_table_dtProto_2fnav_5fmsgs_2fSteppableArea_2eproto_once, descriptor_table_dtProto_2fnav_5fmsgs_2fSteppableArea_2eproto_deps, 2, 3,
    schemas, file_default_instances, TableStruct_dtProto_2fnav_5fmsgs_2fSteppableArea_2eproto::offsets,
    file_level_metadata_dtProto_2fnav_5fmsgs_2fSteppableArea_2eproto, file_level_enum_descriptors_dtProto_2fnav_5fmsgs_2fSteppableArea_2eproto,
    file_level_service_descriptors_dtProto_2fnav_5fmsgs_2fSteppableArea_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_dtProto_2fnav_5fmsgs_2fSteppableArea_2eproto_getter() {
  return &descriptor_table_dtProto_2fnav_5fmsgs_2fSteppableArea_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_dtProto_2fnav_5fmsgs_2fSteppableArea_2eproto(&descriptor_table_dtProto_2fnav_5fmsgs_2fSteppableArea_2eproto);
namespace dtproto {
namespace nav_msgs {

// ===================================================================

class SteppablePolygon::_Internal {
 public:
  static const ::dtproto::geometry_msgs::Polygon3d& polygon(const SteppablePolygon* msg);
};

const ::dtproto::geometry_msgs::Polygon3d&
SteppablePolygon::_Internal::polygon(const SteppablePolygon* msg) {
  return *msg->_impl_.polygon_;
}
void SteppablePolygon::clear_polygon() {
  if (GetArenaForAllocation() == nullptr && _impl_.polygon_ != nullptr) {
    delete _impl_.polygon_;
  }
  _impl_.polygon_ = nullptr;
}
SteppablePolygon::SteppablePolygon(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:dtproto.nav_msgs.SteppablePolygon)
}
SteppablePolygon::SteppablePolygon(const SteppablePolygon& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SteppablePolygon* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.polygon_){nullptr}
    , decltype(_impl_.index_){}
    , decltype(_impl_.properties_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_polygon()) {
    _this->_impl_.polygon_ = new ::dtproto::geometry_msgs::Polygon3d(*from._impl_.polygon_);
  }
  ::memcpy(&_impl_.index_, &from._impl_.index_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.properties_) -
    reinterpret_cast<char*>(&_impl_.index_)) + sizeof(_impl_.properties_));
  // @@protoc_insertion_point(copy_constructor:dtproto.nav_msgs.SteppablePolygon)
}

inline void SteppablePolygon::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.polygon_){nullptr}
    , decltype(_impl_.index_){0u}
    , decltype(_impl_.properties_){0u}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

SteppablePolygon::~SteppablePolygon() {
  // @@protoc_insertion_point(destructor:dtproto.nav_msgs.SteppablePolygon)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SteppablePolygon::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.polygon_;
}

void SteppablePolygon::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SteppablePolygon::Clear() {
// @@protoc_insertion_point(message_clear_start:dtproto.nav_msgs.SteppablePolygon)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.polygon_ != nullptr) {
    delete _impl_.polygon_;
  }
  _impl_.polygon_ = nullptr;
  ::memset(&_impl_.index_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.properties_) -
      reinterpret_cast<char*>(&_impl_.index_)) + sizeof(_impl_.properties_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SteppablePolygon::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .dtproto.geometry_msgs.Polygon3d polygon = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_polygon(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 index = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.index_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 properties = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _impl_.properties_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SteppablePolygon::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:dtproto.nav_msgs.SteppablePolygon)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .dtproto.geometry_msgs.Polygon3d polygon = 1;
  if (this->_internal_has_polygon()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::polygon(this),
        _Internal::polygon(this).GetCachedSize(), target, stream);
  }

  // uint32 index = 2;
  if (this->_internal_index() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(2, this->_internal_index(), target);
  }

  // uint32 properties = 3;
  if (this->_internal_properties() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(3, this->_internal_properties(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dtproto.nav_msgs.SteppablePolygon)
  return target;
}

size_t SteppablePolygon::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dtproto.nav_msgs.SteppablePolygon)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .dtproto.geometry_msgs.Polygon3d polygon = 1;
  if (this->_internal_has_polygon()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.polygon_);
  }

  // uint32 index = 2;
  if (this->_internal_index() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_index());
  }

  // uint32 properties = 3;
  if (this->_internal_properties() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_properties());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SteppablePolygon::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SteppablePolygon::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SteppablePolygon::GetClassData() const { return &_class_data_; }


void SteppablePolygon::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SteppablePolygon*>(&to_msg);
  auto& from = static_cast<const SteppablePolygon&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:dtproto.nav_msgs.SteppablePolygon)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_polygon()) {
    _this->_internal_mutable_polygon()->::dtproto::geometry_msgs::Polygon3d::MergeFrom(
        from._internal_polygon());
  }
  if (from._internal_index() != 0) {
    _this->_internal_set_index(from._internal_index());
  }
  if (from._internal_properties() != 0) {
    _this->_internal_set_properties(from._internal_properties());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SteppablePolygon::CopyFrom(const SteppablePolygon& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dtproto.nav_msgs.SteppablePolygon)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SteppablePolygon::IsInitialized() const {
  return true;
}

void SteppablePolygon::InternalSwap(SteppablePolygon* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SteppablePolygon, _impl_.properties_)
      + sizeof(SteppablePolygon::_impl_.properties_)
      - PROTOBUF_FIELD_OFFSET(SteppablePolygon, _impl_.polygon_)>(
          reinterpret_cast<char*>(&_impl_.polygon_),
          reinterpret_cast<char*>(&other->_impl_.polygon_));
}

::PROTOBUF_NAMESPACE_ID::Metadata SteppablePolygon::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_dtProto_2fnav_5fmsgs_2fSteppableArea_2eproto_getter, &descriptor_table_dtProto_2fnav_5fmsgs_2fSteppableArea_2eproto_once,
      file_level_metadata_dtProto_2fnav_5fmsgs_2fSteppableArea_2eproto[0]);
}

// ===================================================================

class SteppableArea::_Internal {
 public:
};

SteppableArea::SteppableArea(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:dtproto.nav_msgs.SteppableArea)
}
SteppableArea::SteppableArea(const SteppableArea& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SteppableArea* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.steppables_){from._impl_.steppables_}
    , decltype(_impl_.steppables_count_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.steppables_count_ = from._impl_.steppables_count_;
  // @@protoc_insertion_point(copy_constructor:dtproto.nav_msgs.SteppableArea)
}

inline void SteppableArea::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.steppables_){arena}
    , decltype(_impl_.steppables_count_){0u}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

SteppableArea::~SteppableArea() {
  // @@protoc_insertion_point(destructor:dtproto.nav_msgs.SteppableArea)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SteppableArea::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.steppables_.~RepeatedPtrField();
}

void SteppableArea::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SteppableArea::Clear() {
// @@protoc_insertion_point(message_clear_start:dtproto.nav_msgs.SteppableArea)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.steppables_.Clear();
  _impl_.steppables_count_ = 0u;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SteppableArea::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .dtproto.nav_msgs.SteppablePolygon steppables = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_steppables(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      // uint32 steppables_count = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.steppables_count_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SteppableArea::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:dtproto.nav_msgs.SteppableArea)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .dtproto.nav_msgs.SteppablePolygon steppables = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_steppables_size()); i < n; i++) {
    const auto& repfield = this->_internal_steppables(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  // uint32 steppables_count = 2;
  if (this->_internal_steppables_count() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(2, this->_internal_steppables_count(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dtproto.nav_msgs.SteppableArea)
  return target;
}

size_t SteppableArea::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dtproto.nav_msgs.SteppableArea)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .dtproto.nav_msgs.SteppablePolygon steppables = 1;
  total_size += 1UL * this->_internal_steppables_size();
  for (const auto& msg : this->_impl_.steppables_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // uint32 steppables_count = 2;
  if (this->_internal_steppables_count() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_steppables_count());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SteppableArea::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SteppableArea::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SteppableArea::GetClassData() const { return &_class_data_; }


void SteppableArea::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SteppableArea*>(&to_msg);
  auto& from = static_cast<const SteppableArea&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:dtproto.nav_msgs.SteppableArea)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.steppables_.MergeFrom(from._impl_.steppables_);
  if (from._internal_steppables_count() != 0) {
    _this->_internal_set_steppables_count(from._internal_steppables_count());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SteppableArea::CopyFrom(const SteppableArea& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dtproto.nav_msgs.SteppableArea)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SteppableArea::IsInitialized() const {
  return true;
}

void SteppableArea::InternalSwap(SteppableArea* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.steppables_.InternalSwap(&other->_impl_.steppables_);
  swap(_impl_.steppables_count_, other->_impl_.steppables_count_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SteppableArea::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_dtProto_2fnav_5fmsgs_2fSteppableArea_2eproto_getter, &descriptor_table_dtProto_2fnav_5fmsgs_2fSteppableArea_2eproto_once,
      file_level_metadata_dtProto_2fnav_5fmsgs_2fSteppableArea_2eproto[1]);
}

// ===================================================================

class SteppableAreaTimeStamped::_Internal {
 public:
  static const ::dtproto::std_msgs::Header& header(const SteppableAreaTimeStamped* msg);
  static const ::dtproto::nav_msgs::SteppableArea& area(const SteppableAreaTimeStamped* msg);
};

const ::dtproto::std_msgs::Header&
SteppableAreaTimeStamped::_Internal::header(const SteppableAreaTimeStamped* msg) {
  return *msg->_impl_.header_;
}
const ::dtproto::nav_msgs::SteppableArea&
SteppableAreaTimeStamped::_Internal::area(const SteppableAreaTimeStamped* msg) {
  return *msg->_impl_.area_;
}
void SteppableAreaTimeStamped::clear_header() {
  if (GetArenaForAllocation() == nullptr && _impl_.header_ != nullptr) {
    delete _impl_.header_;
  }
  _impl_.header_ = nullptr;
}
SteppableAreaTimeStamped::SteppableAreaTimeStamped(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:dtproto.nav_msgs.SteppableAreaTimeStamped)
}
SteppableAreaTimeStamped::SteppableAreaTimeStamped(const SteppableAreaTimeStamped& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SteppableAreaTimeStamped* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.header_){nullptr}
    , decltype(_impl_.area_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_header()) {
    _this->_impl_.header_ = new ::dtproto::std_msgs::Header(*from._impl_.header_);
  }
  if (from._internal_has_area()) {
    _this->_impl_.area_ = new ::dtproto::nav_msgs::SteppableArea(*from._impl_.area_);
  }
  // @@protoc_insertion_point(copy_constructor:dtproto.nav_msgs.SteppableAreaTimeStamped)
}

inline void SteppableAreaTimeStamped::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.header_){nullptr}
    , decltype(_impl_.area_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

SteppableAreaTimeStamped::~SteppableAreaTimeStamped() {
  // @@protoc_insertion_point(destructor:dtproto.nav_msgs.SteppableAreaTimeStamped)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SteppableAreaTimeStamped::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.header_;
  if (this != internal_default_instance()) delete _impl_.area_;
}

void SteppableAreaTimeStamped::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SteppableAreaTimeStamped::Clear() {
// @@protoc_insertion_point(message_clear_start:dtproto.nav_msgs.SteppableAreaTimeStamped)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.header_ != nullptr) {
    delete _impl_.header_;
  }
  _impl_.header_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.area_ != nullptr) {
    delete _impl_.area_;
  }
  _impl_.area_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SteppableAreaTimeStamped::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .dtproto.std_msgs.Header header = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_header(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .dtproto.nav_msgs.SteppableArea area = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_area(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SteppableAreaTimeStamped::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:dtproto.nav_msgs.SteppableAreaTimeStamped)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .dtproto.std_msgs.Header header = 1;
  if (this->_internal_has_header()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::header(this),
        _Internal::header(this).GetCachedSize(), target, stream);
  }

  // .dtproto.nav_msgs.SteppableArea area = 2;
  if (this->_internal_has_area()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::area(this),
        _Internal::area(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dtproto.nav_msgs.SteppableAreaTimeStamped)
  return target;
}

size_t SteppableAreaTimeStamped::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dtproto.nav_msgs.SteppableAreaTimeStamped)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .dtproto.std_msgs.Header header = 1;
  if (this->_internal_has_header()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.header_);
  }

  // .dtproto.nav_msgs.SteppableArea area = 2;
  if (this->_internal_has_area()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.area_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SteppableAreaTimeStamped::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SteppableAreaTimeStamped::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SteppableAreaTimeStamped::GetClassData() const { return &_class_data_; }


void SteppableAreaTimeStamped::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SteppableAreaTimeStamped*>(&to_msg);
  auto& from = static_cast<const SteppableAreaTimeStamped&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:dtproto.nav_msgs.SteppableAreaTimeStamped)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_header()) {
    _this->_internal_mutable_header()->::dtproto::std_msgs::Header::MergeFrom(
        from._internal_header());
  }
  if (from._internal_has_area()) {
    _this->_internal_mutable_area()->::dtproto::nav_msgs::SteppableArea::MergeFrom(
        from._internal_area());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SteppableAreaTimeStamped::CopyFrom(const SteppableAreaTimeStamped& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dtproto.nav_msgs.SteppableAreaTimeStamped)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SteppableAreaTimeStamped::IsInitialized() const {
  return true;
}

void SteppableAreaTimeStamped::InternalSwap(SteppableAreaTimeStamped* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SteppableAreaTimeStamped, _impl_.area_)
      + sizeof(SteppableAreaTimeStamped::_impl_.area_)
      - PROTOBUF_FIELD_OFFSET(SteppableAreaTimeStamped, _impl_.header_)>(
          reinterpret_cast<char*>(&_impl_.header_),
          reinterpret_cast<char*>(&other->_impl_.header_));
}

::PROTOBUF_NAMESPACE_ID::Metadata SteppableAreaTimeStamped::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_dtProto_2fnav_5fmsgs_2fSteppableArea_2eproto_getter, &descriptor_table_dtProto_2fnav_5fmsgs_2fSteppableArea_2eproto_once,
      file_level_metadata_dtProto_2fnav_5fmsgs_2fSteppableArea_2eproto[2]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace nav_msgs
}  // namespace dtproto
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::dtproto::nav_msgs::SteppablePolygon*
Arena::CreateMaybeMessage< ::dtproto::nav_msgs::SteppablePolygon >(Arena* arena) {
  return Arena::CreateMessageInternal< ::dtproto::nav_msgs::SteppablePolygon >(arena);
}
template<> PROTOBUF_NOINLINE ::dtproto::nav_msgs::SteppableArea*
Arena::CreateMaybeMessage< ::dtproto::nav_msgs::SteppableArea >(Arena* arena) {
  return Arena::CreateMessageInternal< ::dtproto::nav_msgs::SteppableArea >(arena);
}
template<> PROTOBUF_NOINLINE ::dtproto::nav_msgs::SteppableAreaTimeStamped*
Arena::CreateMaybeMessage< ::dtproto::nav_msgs::SteppableAreaTimeStamped >(Arena* arena) {
  return Arena::CreateMessageInternal< ::dtproto::nav_msgs::SteppableAreaTimeStamped >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
