// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: dtProto/nav_msgs/Odom.proto

#include "dtProto/nav_msgs/Odom.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace dtproto {
namespace nav_msgs {
PROTOBUF_CONSTEXPR Odom::Odom(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.child_frame_id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.pose_)*/nullptr
  , /*decltype(_impl_.twist_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct OdomDefaultTypeInternal {
  PROTOBUF_CONSTEXPR OdomDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~OdomDefaultTypeInternal() {}
  union {
    Odom _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 OdomDefaultTypeInternal _Odom_default_instance_;
PROTOBUF_CONSTEXPR OdomTimeStamped::OdomTimeStamped(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.header_)*/nullptr
  , /*decltype(_impl_.odom_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct OdomTimeStampedDefaultTypeInternal {
  PROTOBUF_CONSTEXPR OdomTimeStampedDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~OdomTimeStampedDefaultTypeInternal() {}
  union {
    OdomTimeStamped _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 OdomTimeStampedDefaultTypeInternal _OdomTimeStamped_default_instance_;
PROTOBUF_CONSTEXPR OdomWithCov::OdomWithCov(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.child_frame_id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.pose_)*/nullptr
  , /*decltype(_impl_.twist_)*/nullptr
  , /*decltype(_impl_.pose_cov_)*/nullptr
  , /*decltype(_impl_.twist_cov_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct OdomWithCovDefaultTypeInternal {
  PROTOBUF_CONSTEXPR OdomWithCovDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~OdomWithCovDefaultTypeInternal() {}
  union {
    OdomWithCov _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 OdomWithCovDefaultTypeInternal _OdomWithCov_default_instance_;
PROTOBUF_CONSTEXPR OdomWithCovTimeStamped::OdomWithCovTimeStamped(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.header_)*/nullptr
  , /*decltype(_impl_.odom_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct OdomWithCovTimeStampedDefaultTypeInternal {
  PROTOBUF_CONSTEXPR OdomWithCovTimeStampedDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~OdomWithCovTimeStampedDefaultTypeInternal() {}
  union {
    OdomWithCovTimeStamped _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 OdomWithCovTimeStampedDefaultTypeInternal _OdomWithCovTimeStamped_default_instance_;
}  // namespace nav_msgs
}  // namespace dtproto
static ::_pb::Metadata file_level_metadata_dtProto_2fnav_5fmsgs_2fOdom_2eproto[4];
static constexpr ::_pb::EnumDescriptor const** file_level_enum_descriptors_dtProto_2fnav_5fmsgs_2fOdom_2eproto = nullptr;
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_dtProto_2fnav_5fmsgs_2fOdom_2eproto = nullptr;

const uint32_t TableStruct_dtProto_2fnav_5fmsgs_2fOdom_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::dtproto::nav_msgs::Odom, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::dtproto::nav_msgs::Odom, _impl_.pose_),
  PROTOBUF_FIELD_OFFSET(::dtproto::nav_msgs::Odom, _impl_.twist_),
  PROTOBUF_FIELD_OFFSET(::dtproto::nav_msgs::Odom, _impl_.child_frame_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::dtproto::nav_msgs::OdomTimeStamped, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::dtproto::nav_msgs::OdomTimeStamped, _impl_.header_),
  PROTOBUF_FIELD_OFFSET(::dtproto::nav_msgs::OdomTimeStamped, _impl_.odom_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::dtproto::nav_msgs::OdomWithCov, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::dtproto::nav_msgs::OdomWithCov, _impl_.pose_),
  PROTOBUF_FIELD_OFFSET(::dtproto::nav_msgs::OdomWithCov, _impl_.twist_),
  PROTOBUF_FIELD_OFFSET(::dtproto::nav_msgs::OdomWithCov, _impl_.child_frame_id_),
  PROTOBUF_FIELD_OFFSET(::dtproto::nav_msgs::OdomWithCov, _impl_.pose_cov_),
  PROTOBUF_FIELD_OFFSET(::dtproto::nav_msgs::OdomWithCov, _impl_.twist_cov_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::dtproto::nav_msgs::OdomWithCovTimeStamped, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::dtproto::nav_msgs::OdomWithCovTimeStamped, _impl_.header_),
  PROTOBUF_FIELD_OFFSET(::dtproto::nav_msgs::OdomWithCovTimeStamped, _impl_.odom_),
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::dtproto::nav_msgs::Odom)},
  { 9, -1, -1, sizeof(::dtproto::nav_msgs::OdomTimeStamped)},
  { 17, -1, -1, sizeof(::dtproto::nav_msgs::OdomWithCov)},
  { 28, -1, -1, sizeof(::dtproto::nav_msgs::OdomWithCovTimeStamped)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::dtproto::nav_msgs::_Odom_default_instance_._instance,
  &::dtproto::nav_msgs::_OdomTimeStamped_default_instance_._instance,
  &::dtproto::nav_msgs::_OdomWithCov_default_instance_._instance,
  &::dtproto::nav_msgs::_OdomWithCovTimeStamped_default_instance_._instance,
};

const char descriptor_table_protodef_dtProto_2fnav_5fmsgs_2fOdom_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\033dtProto/nav_msgs/Odom.proto\022\020dtproto.n"
  "av_msgs\032\035dtProto/std_msgs/Header.proto\032 "
  "dtProto/geometry_msgs/Pose.proto\032\'dtProt"
  "o/geometry_msgs/Orientation.proto\032!dtPro"
  "to/geometry_msgs/Twist.proto\032\"dtProto/ge"
  "ometry_msgs/Matrix.proto\"x\n\004Odom\022+\n\004pose"
  "\030\001 \001(\0132\035.dtproto.geometry_msgs.Pose3d\022+\n"
  "\005twist\030\002 \001(\0132\034.dtproto.geometry_msgs.Twi"
  "st\022\026\n\016child_frame_id\030\003 \001(\t\"a\n\017OdomTimeSt"
  "amped\022(\n\006header\030\001 \001(\0132\030.dtproto.std_msgs"
  ".Header\022$\n\004odom\030\002 \001(\0132\026.dtproto.nav_msgs"
  ".Odom\"\346\001\n\013OdomWithCov\022+\n\004pose\030\001 \001(\0132\035.dt"
  "proto.geometry_msgs.Pose3d\022+\n\005twist\030\002 \001("
  "\0132\034.dtproto.geometry_msgs.Twist\022\026\n\016child"
  "_frame_id\030\003 \001(\t\0221\n\010pose_cov\030\004 \001(\0132\037.dtpr"
  "oto.geometry_msgs.Matrix6d\0222\n\ttwist_cov\030"
  "\005 \001(\0132\037.dtproto.geometry_msgs.Matrix6d\"o"
  "\n\026OdomWithCovTimeStamped\022(\n\006header\030\001 \001(\013"
  "2\030.dtproto.std_msgs.Header\022+\n\004odom\030\002 \001(\013"
  "2\035.dtproto.nav_msgs.OdomWithCovb\006proto3"
  ;
static const ::_pbi::DescriptorTable* const descriptor_table_dtProto_2fnav_5fmsgs_2fOdom_2eproto_deps[5] = {
  &::descriptor_table_dtProto_2fgeometry_5fmsgs_2fMatrix_2eproto,
  &::descriptor_table_dtProto_2fgeometry_5fmsgs_2fOrientation_2eproto,
  &::descriptor_table_dtProto_2fgeometry_5fmsgs_2fPose_2eproto,
  &::descriptor_table_dtProto_2fgeometry_5fmsgs_2fTwist_2eproto,
  &::descriptor_table_dtProto_2fstd_5fmsgs_2fHeader_2eproto,
};
static ::_pbi::once_flag descriptor_table_dtProto_2fnav_5fmsgs_2fOdom_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_dtProto_2fnav_5fmsgs_2fOdom_2eproto = {
    false, false, 799, descriptor_table_protodef_dtProto_2fnav_5fmsgs_2fOdom_2eproto,
    "dtProto/nav_msgs/Odom.proto",
    &descriptor_table_dtProto_2fnav_5fmsgs_2fOdom_2eproto_once, descriptor_table_dtProto_2fnav_5fmsgs_2fOdom_2eproto_deps, 5, 4,
    schemas, file_default_instances, TableStruct_dtProto_2fnav_5fmsgs_2fOdom_2eproto::offsets,
    file_level_metadata_dtProto_2fnav_5fmsgs_2fOdom_2eproto, file_level_enum_descriptors_dtProto_2fnav_5fmsgs_2fOdom_2eproto,
    file_level_service_descriptors_dtProto_2fnav_5fmsgs_2fOdom_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_dtProto_2fnav_5fmsgs_2fOdom_2eproto_getter() {
  return &descriptor_table_dtProto_2fnav_5fmsgs_2fOdom_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_dtProto_2fnav_5fmsgs_2fOdom_2eproto(&descriptor_table_dtProto_2fnav_5fmsgs_2fOdom_2eproto);
namespace dtproto {
namespace nav_msgs {

// ===================================================================

class Odom::_Internal {
 public:
  static const ::dtproto::geometry_msgs::Pose3d& pose(const Odom* msg);
  static const ::dtproto::geometry_msgs::Twist& twist(const Odom* msg);
};

const ::dtproto::geometry_msgs::Pose3d&
Odom::_Internal::pose(const Odom* msg) {
  return *msg->_impl_.pose_;
}
const ::dtproto::geometry_msgs::Twist&
Odom::_Internal::twist(const Odom* msg) {
  return *msg->_impl_.twist_;
}
void Odom::clear_pose() {
  if (GetArenaForAllocation() == nullptr && _impl_.pose_ != nullptr) {
    delete _impl_.pose_;
  }
  _impl_.pose_ = nullptr;
}
void Odom::clear_twist() {
  if (GetArenaForAllocation() == nullptr && _impl_.twist_ != nullptr) {
    delete _impl_.twist_;
  }
  _impl_.twist_ = nullptr;
}
Odom::Odom(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:dtproto.nav_msgs.Odom)
}
Odom::Odom(const Odom& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  Odom* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.child_frame_id_){}
    , decltype(_impl_.pose_){nullptr}
    , decltype(_impl_.twist_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.child_frame_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.child_frame_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_child_frame_id().empty()) {
    _this->_impl_.child_frame_id_.Set(from._internal_child_frame_id(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_pose()) {
    _this->_impl_.pose_ = new ::dtproto::geometry_msgs::Pose3d(*from._impl_.pose_);
  }
  if (from._internal_has_twist()) {
    _this->_impl_.twist_ = new ::dtproto::geometry_msgs::Twist(*from._impl_.twist_);
  }
  // @@protoc_insertion_point(copy_constructor:dtproto.nav_msgs.Odom)
}

inline void Odom::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.child_frame_id_){}
    , decltype(_impl_.pose_){nullptr}
    , decltype(_impl_.twist_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.child_frame_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.child_frame_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

Odom::~Odom() {
  // @@protoc_insertion_point(destructor:dtproto.nav_msgs.Odom)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void Odom::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.child_frame_id_.Destroy();
  if (this != internal_default_instance()) delete _impl_.pose_;
  if (this != internal_default_instance()) delete _impl_.twist_;
}

void Odom::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void Odom::Clear() {
// @@protoc_insertion_point(message_clear_start:dtproto.nav_msgs.Odom)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.child_frame_id_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.pose_ != nullptr) {
    delete _impl_.pose_;
  }
  _impl_.pose_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.twist_ != nullptr) {
    delete _impl_.twist_;
  }
  _impl_.twist_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Odom::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .dtproto.geometry_msgs.Pose3d pose = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_pose(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .dtproto.geometry_msgs.Twist twist = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_twist(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string child_frame_id = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_child_frame_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "dtproto.nav_msgs.Odom.child_frame_id"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Odom::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:dtproto.nav_msgs.Odom)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .dtproto.geometry_msgs.Pose3d pose = 1;
  if (this->_internal_has_pose()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::pose(this),
        _Internal::pose(this).GetCachedSize(), target, stream);
  }

  // .dtproto.geometry_msgs.Twist twist = 2;
  if (this->_internal_has_twist()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::twist(this),
        _Internal::twist(this).GetCachedSize(), target, stream);
  }

  // string child_frame_id = 3;
  if (!this->_internal_child_frame_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_child_frame_id().data(), static_cast<int>(this->_internal_child_frame_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "dtproto.nav_msgs.Odom.child_frame_id");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_child_frame_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dtproto.nav_msgs.Odom)
  return target;
}

size_t Odom::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dtproto.nav_msgs.Odom)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string child_frame_id = 3;
  if (!this->_internal_child_frame_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_child_frame_id());
  }

  // .dtproto.geometry_msgs.Pose3d pose = 1;
  if (this->_internal_has_pose()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.pose_);
  }

  // .dtproto.geometry_msgs.Twist twist = 2;
  if (this->_internal_has_twist()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.twist_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Odom::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    Odom::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Odom::GetClassData() const { return &_class_data_; }


void Odom::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<Odom*>(&to_msg);
  auto& from = static_cast<const Odom&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:dtproto.nav_msgs.Odom)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_child_frame_id().empty()) {
    _this->_internal_set_child_frame_id(from._internal_child_frame_id());
  }
  if (from._internal_has_pose()) {
    _this->_internal_mutable_pose()->::dtproto::geometry_msgs::Pose3d::MergeFrom(
        from._internal_pose());
  }
  if (from._internal_has_twist()) {
    _this->_internal_mutable_twist()->::dtproto::geometry_msgs::Twist::MergeFrom(
        from._internal_twist());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Odom::CopyFrom(const Odom& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dtproto.nav_msgs.Odom)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Odom::IsInitialized() const {
  return true;
}

void Odom::InternalSwap(Odom* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.child_frame_id_, lhs_arena,
      &other->_impl_.child_frame_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Odom, _impl_.twist_)
      + sizeof(Odom::_impl_.twist_)
      - PROTOBUF_FIELD_OFFSET(Odom, _impl_.pose_)>(
          reinterpret_cast<char*>(&_impl_.pose_),
          reinterpret_cast<char*>(&other->_impl_.pose_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Odom::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_dtProto_2fnav_5fmsgs_2fOdom_2eproto_getter, &descriptor_table_dtProto_2fnav_5fmsgs_2fOdom_2eproto_once,
      file_level_metadata_dtProto_2fnav_5fmsgs_2fOdom_2eproto[0]);
}

// ===================================================================

class OdomTimeStamped::_Internal {
 public:
  static const ::dtproto::std_msgs::Header& header(const OdomTimeStamped* msg);
  static const ::dtproto::nav_msgs::Odom& odom(const OdomTimeStamped* msg);
};

const ::dtproto::std_msgs::Header&
OdomTimeStamped::_Internal::header(const OdomTimeStamped* msg) {
  return *msg->_impl_.header_;
}
const ::dtproto::nav_msgs::Odom&
OdomTimeStamped::_Internal::odom(const OdomTimeStamped* msg) {
  return *msg->_impl_.odom_;
}
void OdomTimeStamped::clear_header() {
  if (GetArenaForAllocation() == nullptr && _impl_.header_ != nullptr) {
    delete _impl_.header_;
  }
  _impl_.header_ = nullptr;
}
OdomTimeStamped::OdomTimeStamped(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:dtproto.nav_msgs.OdomTimeStamped)
}
OdomTimeStamped::OdomTimeStamped(const OdomTimeStamped& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  OdomTimeStamped* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.header_){nullptr}
    , decltype(_impl_.odom_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_header()) {
    _this->_impl_.header_ = new ::dtproto::std_msgs::Header(*from._impl_.header_);
  }
  if (from._internal_has_odom()) {
    _this->_impl_.odom_ = new ::dtproto::nav_msgs::Odom(*from._impl_.odom_);
  }
  // @@protoc_insertion_point(copy_constructor:dtproto.nav_msgs.OdomTimeStamped)
}

inline void OdomTimeStamped::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.header_){nullptr}
    , decltype(_impl_.odom_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

OdomTimeStamped::~OdomTimeStamped() {
  // @@protoc_insertion_point(destructor:dtproto.nav_msgs.OdomTimeStamped)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void OdomTimeStamped::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.header_;
  if (this != internal_default_instance()) delete _impl_.odom_;
}

void OdomTimeStamped::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void OdomTimeStamped::Clear() {
// @@protoc_insertion_point(message_clear_start:dtproto.nav_msgs.OdomTimeStamped)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.header_ != nullptr) {
    delete _impl_.header_;
  }
  _impl_.header_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.odom_ != nullptr) {
    delete _impl_.odom_;
  }
  _impl_.odom_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* OdomTimeStamped::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .dtproto.std_msgs.Header header = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_header(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .dtproto.nav_msgs.Odom odom = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_odom(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* OdomTimeStamped::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:dtproto.nav_msgs.OdomTimeStamped)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .dtproto.std_msgs.Header header = 1;
  if (this->_internal_has_header()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::header(this),
        _Internal::header(this).GetCachedSize(), target, stream);
  }

  // .dtproto.nav_msgs.Odom odom = 2;
  if (this->_internal_has_odom()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::odom(this),
        _Internal::odom(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dtproto.nav_msgs.OdomTimeStamped)
  return target;
}

size_t OdomTimeStamped::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dtproto.nav_msgs.OdomTimeStamped)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .dtproto.std_msgs.Header header = 1;
  if (this->_internal_has_header()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.header_);
  }

  // .dtproto.nav_msgs.Odom odom = 2;
  if (this->_internal_has_odom()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.odom_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData OdomTimeStamped::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    OdomTimeStamped::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*OdomTimeStamped::GetClassData() const { return &_class_data_; }


void OdomTimeStamped::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<OdomTimeStamped*>(&to_msg);
  auto& from = static_cast<const OdomTimeStamped&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:dtproto.nav_msgs.OdomTimeStamped)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_header()) {
    _this->_internal_mutable_header()->::dtproto::std_msgs::Header::MergeFrom(
        from._internal_header());
  }
  if (from._internal_has_odom()) {
    _this->_internal_mutable_odom()->::dtproto::nav_msgs::Odom::MergeFrom(
        from._internal_odom());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void OdomTimeStamped::CopyFrom(const OdomTimeStamped& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dtproto.nav_msgs.OdomTimeStamped)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OdomTimeStamped::IsInitialized() const {
  return true;
}

void OdomTimeStamped::InternalSwap(OdomTimeStamped* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(OdomTimeStamped, _impl_.odom_)
      + sizeof(OdomTimeStamped::_impl_.odom_)
      - PROTOBUF_FIELD_OFFSET(OdomTimeStamped, _impl_.header_)>(
          reinterpret_cast<char*>(&_impl_.header_),
          reinterpret_cast<char*>(&other->_impl_.header_));
}

::PROTOBUF_NAMESPACE_ID::Metadata OdomTimeStamped::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_dtProto_2fnav_5fmsgs_2fOdom_2eproto_getter, &descriptor_table_dtProto_2fnav_5fmsgs_2fOdom_2eproto_once,
      file_level_metadata_dtProto_2fnav_5fmsgs_2fOdom_2eproto[1]);
}

// ===================================================================

class OdomWithCov::_Internal {
 public:
  static const ::dtproto::geometry_msgs::Pose3d& pose(const OdomWithCov* msg);
  static const ::dtproto::geometry_msgs::Twist& twist(const OdomWithCov* msg);
  static const ::dtproto::geometry_msgs::Matrix6d& pose_cov(const OdomWithCov* msg);
  static const ::dtproto::geometry_msgs::Matrix6d& twist_cov(const OdomWithCov* msg);
};

const ::dtproto::geometry_msgs::Pose3d&
OdomWithCov::_Internal::pose(const OdomWithCov* msg) {
  return *msg->_impl_.pose_;
}
const ::dtproto::geometry_msgs::Twist&
OdomWithCov::_Internal::twist(const OdomWithCov* msg) {
  return *msg->_impl_.twist_;
}
const ::dtproto::geometry_msgs::Matrix6d&
OdomWithCov::_Internal::pose_cov(const OdomWithCov* msg) {
  return *msg->_impl_.pose_cov_;
}
const ::dtproto::geometry_msgs::Matrix6d&
OdomWithCov::_Internal::twist_cov(const OdomWithCov* msg) {
  return *msg->_impl_.twist_cov_;
}
void OdomWithCov::clear_pose() {
  if (GetArenaForAllocation() == nullptr && _impl_.pose_ != nullptr) {
    delete _impl_.pose_;
  }
  _impl_.pose_ = nullptr;
}
void OdomWithCov::clear_twist() {
  if (GetArenaForAllocation() == nullptr && _impl_.twist_ != nullptr) {
    delete _impl_.twist_;
  }
  _impl_.twist_ = nullptr;
}
void OdomWithCov::clear_pose_cov() {
  if (GetArenaForAllocation() == nullptr && _impl_.pose_cov_ != nullptr) {
    delete _impl_.pose_cov_;
  }
  _impl_.pose_cov_ = nullptr;
}
void OdomWithCov::clear_twist_cov() {
  if (GetArenaForAllocation() == nullptr && _impl_.twist_cov_ != nullptr) {
    delete _impl_.twist_cov_;
  }
  _impl_.twist_cov_ = nullptr;
}
OdomWithCov::OdomWithCov(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:dtproto.nav_msgs.OdomWithCov)
}
OdomWithCov::OdomWithCov(const OdomWithCov& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  OdomWithCov* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.child_frame_id_){}
    , decltype(_impl_.pose_){nullptr}
    , decltype(_impl_.twist_){nullptr}
    , decltype(_impl_.pose_cov_){nullptr}
    , decltype(_impl_.twist_cov_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.child_frame_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.child_frame_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_child_frame_id().empty()) {
    _this->_impl_.child_frame_id_.Set(from._internal_child_frame_id(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_pose()) {
    _this->_impl_.pose_ = new ::dtproto::geometry_msgs::Pose3d(*from._impl_.pose_);
  }
  if (from._internal_has_twist()) {
    _this->_impl_.twist_ = new ::dtproto::geometry_msgs::Twist(*from._impl_.twist_);
  }
  if (from._internal_has_pose_cov()) {
    _this->_impl_.pose_cov_ = new ::dtproto::geometry_msgs::Matrix6d(*from._impl_.pose_cov_);
  }
  if (from._internal_has_twist_cov()) {
    _this->_impl_.twist_cov_ = new ::dtproto::geometry_msgs::Matrix6d(*from._impl_.twist_cov_);
  }
  // @@protoc_insertion_point(copy_constructor:dtproto.nav_msgs.OdomWithCov)
}

inline void OdomWithCov::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.child_frame_id_){}
    , decltype(_impl_.pose_){nullptr}
    , decltype(_impl_.twist_){nullptr}
    , decltype(_impl_.pose_cov_){nullptr}
    , decltype(_impl_.twist_cov_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.child_frame_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.child_frame_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

OdomWithCov::~OdomWithCov() {
  // @@protoc_insertion_point(destructor:dtproto.nav_msgs.OdomWithCov)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void OdomWithCov::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.child_frame_id_.Destroy();
  if (this != internal_default_instance()) delete _impl_.pose_;
  if (this != internal_default_instance()) delete _impl_.twist_;
  if (this != internal_default_instance()) delete _impl_.pose_cov_;
  if (this != internal_default_instance()) delete _impl_.twist_cov_;
}

void OdomWithCov::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void OdomWithCov::Clear() {
// @@protoc_insertion_point(message_clear_start:dtproto.nav_msgs.OdomWithCov)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.child_frame_id_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.pose_ != nullptr) {
    delete _impl_.pose_;
  }
  _impl_.pose_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.twist_ != nullptr) {
    delete _impl_.twist_;
  }
  _impl_.twist_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.pose_cov_ != nullptr) {
    delete _impl_.pose_cov_;
  }
  _impl_.pose_cov_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.twist_cov_ != nullptr) {
    delete _impl_.twist_cov_;
  }
  _impl_.twist_cov_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* OdomWithCov::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .dtproto.geometry_msgs.Pose3d pose = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_pose(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .dtproto.geometry_msgs.Twist twist = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_twist(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string child_frame_id = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_child_frame_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "dtproto.nav_msgs.OdomWithCov.child_frame_id"));
        } else
          goto handle_unusual;
        continue;
      // .dtproto.geometry_msgs.Matrix6d pose_cov = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_pose_cov(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .dtproto.geometry_msgs.Matrix6d twist_cov = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_twist_cov(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* OdomWithCov::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:dtproto.nav_msgs.OdomWithCov)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .dtproto.geometry_msgs.Pose3d pose = 1;
  if (this->_internal_has_pose()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::pose(this),
        _Internal::pose(this).GetCachedSize(), target, stream);
  }

  // .dtproto.geometry_msgs.Twist twist = 2;
  if (this->_internal_has_twist()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::twist(this),
        _Internal::twist(this).GetCachedSize(), target, stream);
  }

  // string child_frame_id = 3;
  if (!this->_internal_child_frame_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_child_frame_id().data(), static_cast<int>(this->_internal_child_frame_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "dtproto.nav_msgs.OdomWithCov.child_frame_id");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_child_frame_id(), target);
  }

  // .dtproto.geometry_msgs.Matrix6d pose_cov = 4;
  if (this->_internal_has_pose_cov()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(4, _Internal::pose_cov(this),
        _Internal::pose_cov(this).GetCachedSize(), target, stream);
  }

  // .dtproto.geometry_msgs.Matrix6d twist_cov = 5;
  if (this->_internal_has_twist_cov()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(5, _Internal::twist_cov(this),
        _Internal::twist_cov(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dtproto.nav_msgs.OdomWithCov)
  return target;
}

size_t OdomWithCov::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dtproto.nav_msgs.OdomWithCov)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string child_frame_id = 3;
  if (!this->_internal_child_frame_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_child_frame_id());
  }

  // .dtproto.geometry_msgs.Pose3d pose = 1;
  if (this->_internal_has_pose()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.pose_);
  }

  // .dtproto.geometry_msgs.Twist twist = 2;
  if (this->_internal_has_twist()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.twist_);
  }

  // .dtproto.geometry_msgs.Matrix6d pose_cov = 4;
  if (this->_internal_has_pose_cov()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.pose_cov_);
  }

  // .dtproto.geometry_msgs.Matrix6d twist_cov = 5;
  if (this->_internal_has_twist_cov()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.twist_cov_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData OdomWithCov::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    OdomWithCov::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*OdomWithCov::GetClassData() const { return &_class_data_; }


void OdomWithCov::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<OdomWithCov*>(&to_msg);
  auto& from = static_cast<const OdomWithCov&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:dtproto.nav_msgs.OdomWithCov)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_child_frame_id().empty()) {
    _this->_internal_set_child_frame_id(from._internal_child_frame_id());
  }
  if (from._internal_has_pose()) {
    _this->_internal_mutable_pose()->::dtproto::geometry_msgs::Pose3d::MergeFrom(
        from._internal_pose());
  }
  if (from._internal_has_twist()) {
    _this->_internal_mutable_twist()->::dtproto::geometry_msgs::Twist::MergeFrom(
        from._internal_twist());
  }
  if (from._internal_has_pose_cov()) {
    _this->_internal_mutable_pose_cov()->::dtproto::geometry_msgs::Matrix6d::MergeFrom(
        from._internal_pose_cov());
  }
  if (from._internal_has_twist_cov()) {
    _this->_internal_mutable_twist_cov()->::dtproto::geometry_msgs::Matrix6d::MergeFrom(
        from._internal_twist_cov());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void OdomWithCov::CopyFrom(const OdomWithCov& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dtproto.nav_msgs.OdomWithCov)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OdomWithCov::IsInitialized() const {
  return true;
}

void OdomWithCov::InternalSwap(OdomWithCov* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.child_frame_id_, lhs_arena,
      &other->_impl_.child_frame_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(OdomWithCov, _impl_.twist_cov_)
      + sizeof(OdomWithCov::_impl_.twist_cov_)
      - PROTOBUF_FIELD_OFFSET(OdomWithCov, _impl_.pose_)>(
          reinterpret_cast<char*>(&_impl_.pose_),
          reinterpret_cast<char*>(&other->_impl_.pose_));
}

::PROTOBUF_NAMESPACE_ID::Metadata OdomWithCov::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_dtProto_2fnav_5fmsgs_2fOdom_2eproto_getter, &descriptor_table_dtProto_2fnav_5fmsgs_2fOdom_2eproto_once,
      file_level_metadata_dtProto_2fnav_5fmsgs_2fOdom_2eproto[2]);
}

// ===================================================================

class OdomWithCovTimeStamped::_Internal {
 public:
  static const ::dtproto::std_msgs::Header& header(const OdomWithCovTimeStamped* msg);
  static const ::dtproto::nav_msgs::OdomWithCov& odom(const OdomWithCovTimeStamped* msg);
};

const ::dtproto::std_msgs::Header&
OdomWithCovTimeStamped::_Internal::header(const OdomWithCovTimeStamped* msg) {
  return *msg->_impl_.header_;
}
const ::dtproto::nav_msgs::OdomWithCov&
OdomWithCovTimeStamped::_Internal::odom(const OdomWithCovTimeStamped* msg) {
  return *msg->_impl_.odom_;
}
void OdomWithCovTimeStamped::clear_header() {
  if (GetArenaForAllocation() == nullptr && _impl_.header_ != nullptr) {
    delete _impl_.header_;
  }
  _impl_.header_ = nullptr;
}
OdomWithCovTimeStamped::OdomWithCovTimeStamped(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:dtproto.nav_msgs.OdomWithCovTimeStamped)
}
OdomWithCovTimeStamped::OdomWithCovTimeStamped(const OdomWithCovTimeStamped& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  OdomWithCovTimeStamped* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.header_){nullptr}
    , decltype(_impl_.odom_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_header()) {
    _this->_impl_.header_ = new ::dtproto::std_msgs::Header(*from._impl_.header_);
  }
  if (from._internal_has_odom()) {
    _this->_impl_.odom_ = new ::dtproto::nav_msgs::OdomWithCov(*from._impl_.odom_);
  }
  // @@protoc_insertion_point(copy_constructor:dtproto.nav_msgs.OdomWithCovTimeStamped)
}

inline void OdomWithCovTimeStamped::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.header_){nullptr}
    , decltype(_impl_.odom_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

OdomWithCovTimeStamped::~OdomWithCovTimeStamped() {
  // @@protoc_insertion_point(destructor:dtproto.nav_msgs.OdomWithCovTimeStamped)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void OdomWithCovTimeStamped::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.header_;
  if (this != internal_default_instance()) delete _impl_.odom_;
}

void OdomWithCovTimeStamped::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void OdomWithCovTimeStamped::Clear() {
// @@protoc_insertion_point(message_clear_start:dtproto.nav_msgs.OdomWithCovTimeStamped)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.header_ != nullptr) {
    delete _impl_.header_;
  }
  _impl_.header_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.odom_ != nullptr) {
    delete _impl_.odom_;
  }
  _impl_.odom_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* OdomWithCovTimeStamped::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .dtproto.std_msgs.Header header = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_header(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .dtproto.nav_msgs.OdomWithCov odom = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_odom(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* OdomWithCovTimeStamped::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:dtproto.nav_msgs.OdomWithCovTimeStamped)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .dtproto.std_msgs.Header header = 1;
  if (this->_internal_has_header()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::header(this),
        _Internal::header(this).GetCachedSize(), target, stream);
  }

  // .dtproto.nav_msgs.OdomWithCov odom = 2;
  if (this->_internal_has_odom()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::odom(this),
        _Internal::odom(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dtproto.nav_msgs.OdomWithCovTimeStamped)
  return target;
}

size_t OdomWithCovTimeStamped::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dtproto.nav_msgs.OdomWithCovTimeStamped)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .dtproto.std_msgs.Header header = 1;
  if (this->_internal_has_header()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.header_);
  }

  // .dtproto.nav_msgs.OdomWithCov odom = 2;
  if (this->_internal_has_odom()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.odom_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData OdomWithCovTimeStamped::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    OdomWithCovTimeStamped::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*OdomWithCovTimeStamped::GetClassData() const { return &_class_data_; }


void OdomWithCovTimeStamped::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<OdomWithCovTimeStamped*>(&to_msg);
  auto& from = static_cast<const OdomWithCovTimeStamped&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:dtproto.nav_msgs.OdomWithCovTimeStamped)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_header()) {
    _this->_internal_mutable_header()->::dtproto::std_msgs::Header::MergeFrom(
        from._internal_header());
  }
  if (from._internal_has_odom()) {
    _this->_internal_mutable_odom()->::dtproto::nav_msgs::OdomWithCov::MergeFrom(
        from._internal_odom());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void OdomWithCovTimeStamped::CopyFrom(const OdomWithCovTimeStamped& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dtproto.nav_msgs.OdomWithCovTimeStamped)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OdomWithCovTimeStamped::IsInitialized() const {
  return true;
}

void OdomWithCovTimeStamped::InternalSwap(OdomWithCovTimeStamped* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(OdomWithCovTimeStamped, _impl_.odom_)
      + sizeof(OdomWithCovTimeStamped::_impl_.odom_)
      - PROTOBUF_FIELD_OFFSET(OdomWithCovTimeStamped, _impl_.header_)>(
          reinterpret_cast<char*>(&_impl_.header_),
          reinterpret_cast<char*>(&other->_impl_.header_));
}

::PROTOBUF_NAMESPACE_ID::Metadata OdomWithCovTimeStamped::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_dtProto_2fnav_5fmsgs_2fOdom_2eproto_getter, &descriptor_table_dtProto_2fnav_5fmsgs_2fOdom_2eproto_once,
      file_level_metadata_dtProto_2fnav_5fmsgs_2fOdom_2eproto[3]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace nav_msgs
}  // namespace dtproto
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::dtproto::nav_msgs::Odom*
Arena::CreateMaybeMessage< ::dtproto::nav_msgs::Odom >(Arena* arena) {
  return Arena::CreateMessageInternal< ::dtproto::nav_msgs::Odom >(arena);
}
template<> PROTOBUF_NOINLINE ::dtproto::nav_msgs::OdomTimeStamped*
Arena::CreateMaybeMessage< ::dtproto::nav_msgs::OdomTimeStamped >(Arena* arena) {
  return Arena::CreateMessageInternal< ::dtproto::nav_msgs::OdomTimeStamped >(arena);
}
template<> PROTOBUF_NOINLINE ::dtproto::nav_msgs::OdomWithCov*
Arena::CreateMaybeMessage< ::dtproto::nav_msgs::OdomWithCov >(Arena* arena) {
  return Arena::CreateMessageInternal< ::dtproto::nav_msgs::OdomWithCov >(arena);
}
template<> PROTOBUF_NOINLINE ::dtproto::nav_msgs::OdomWithCovTimeStamped*
Arena::CreateMaybeMessage< ::dtproto::nav_msgs::OdomWithCovTimeStamped >(Arena* arena) {
  return Arena::CreateMessageInternal< ::dtproto::nav_msgs::OdomWithCovTimeStamped >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
