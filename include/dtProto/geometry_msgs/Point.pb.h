// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: dtProto/geometry_msgs/Point.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_dtProto_2fgeometry_5fmsgs_2fPoint_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_dtProto_2fgeometry_5fmsgs_2fPoint_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3021000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3021012 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_dtProto_2fgeometry_5fmsgs_2fPoint_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_dtProto_2fgeometry_5fmsgs_2fPoint_2eproto {
  static const uint32_t offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_dtProto_2fgeometry_5fmsgs_2fPoint_2eproto;
namespace dtproto {
namespace geometry_msgs {
class Point2d;
struct Point2dDefaultTypeInternal;
extern Point2dDefaultTypeInternal _Point2d_default_instance_;
class Point2f;
struct Point2fDefaultTypeInternal;
extern Point2fDefaultTypeInternal _Point2f_default_instance_;
class Point2i32;
struct Point2i32DefaultTypeInternal;
extern Point2i32DefaultTypeInternal _Point2i32_default_instance_;
class Point3d;
struct Point3dDefaultTypeInternal;
extern Point3dDefaultTypeInternal _Point3d_default_instance_;
class Point3f;
struct Point3fDefaultTypeInternal;
extern Point3fDefaultTypeInternal _Point3f_default_instance_;
class Point3i32;
struct Point3i32DefaultTypeInternal;
extern Point3i32DefaultTypeInternal _Point3i32_default_instance_;
}  // namespace geometry_msgs
}  // namespace dtproto
PROTOBUF_NAMESPACE_OPEN
template<> ::dtproto::geometry_msgs::Point2d* Arena::CreateMaybeMessage<::dtproto::geometry_msgs::Point2d>(Arena*);
template<> ::dtproto::geometry_msgs::Point2f* Arena::CreateMaybeMessage<::dtproto::geometry_msgs::Point2f>(Arena*);
template<> ::dtproto::geometry_msgs::Point2i32* Arena::CreateMaybeMessage<::dtproto::geometry_msgs::Point2i32>(Arena*);
template<> ::dtproto::geometry_msgs::Point3d* Arena::CreateMaybeMessage<::dtproto::geometry_msgs::Point3d>(Arena*);
template<> ::dtproto::geometry_msgs::Point3f* Arena::CreateMaybeMessage<::dtproto::geometry_msgs::Point3f>(Arena*);
template<> ::dtproto::geometry_msgs::Point3i32* Arena::CreateMaybeMessage<::dtproto::geometry_msgs::Point3i32>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace dtproto {
namespace geometry_msgs {

// ===================================================================

class Point2d final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:dtproto.geometry_msgs.Point2d) */ {
 public:
  inline Point2d() : Point2d(nullptr) {}
  ~Point2d() override;
  explicit PROTOBUF_CONSTEXPR Point2d(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  Point2d(const Point2d& from);
  Point2d(Point2d&& from) noexcept
    : Point2d() {
    *this = ::std::move(from);
  }

  inline Point2d& operator=(const Point2d& from) {
    CopyFrom(from);
    return *this;
  }
  inline Point2d& operator=(Point2d&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Point2d& default_instance() {
    return *internal_default_instance();
  }
  static inline const Point2d* internal_default_instance() {
    return reinterpret_cast<const Point2d*>(
               &_Point2d_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(Point2d& a, Point2d& b) {
    a.Swap(&b);
  }
  inline void Swap(Point2d* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Point2d* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Point2d* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<Point2d>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const Point2d& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const Point2d& from) {
    Point2d::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Point2d* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "dtproto.geometry_msgs.Point2d";
  }
  protected:
  explicit Point2d(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kXFieldNumber = 1,
    kYFieldNumber = 2,
  };
  // double x = 1;
  void clear_x();
  double x() const;
  void set_x(double value);
  private:
  double _internal_x() const;
  void _internal_set_x(double value);
  public:

  // double y = 2;
  void clear_y();
  double y() const;
  void set_y(double value);
  private:
  double _internal_y() const;
  void _internal_set_y(double value);
  public:

  // @@protoc_insertion_point(class_scope:dtproto.geometry_msgs.Point2d)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    double x_;
    double y_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_dtProto_2fgeometry_5fmsgs_2fPoint_2eproto;
};
// -------------------------------------------------------------------

class Point3d final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:dtproto.geometry_msgs.Point3d) */ {
 public:
  inline Point3d() : Point3d(nullptr) {}
  ~Point3d() override;
  explicit PROTOBUF_CONSTEXPR Point3d(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  Point3d(const Point3d& from);
  Point3d(Point3d&& from) noexcept
    : Point3d() {
    *this = ::std::move(from);
  }

  inline Point3d& operator=(const Point3d& from) {
    CopyFrom(from);
    return *this;
  }
  inline Point3d& operator=(Point3d&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Point3d& default_instance() {
    return *internal_default_instance();
  }
  static inline const Point3d* internal_default_instance() {
    return reinterpret_cast<const Point3d*>(
               &_Point3d_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(Point3d& a, Point3d& b) {
    a.Swap(&b);
  }
  inline void Swap(Point3d* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Point3d* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Point3d* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<Point3d>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const Point3d& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const Point3d& from) {
    Point3d::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Point3d* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "dtproto.geometry_msgs.Point3d";
  }
  protected:
  explicit Point3d(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kXFieldNumber = 1,
    kYFieldNumber = 2,
    kZFieldNumber = 3,
  };
  // double x = 1;
  void clear_x();
  double x() const;
  void set_x(double value);
  private:
  double _internal_x() const;
  void _internal_set_x(double value);
  public:

  // double y = 2;
  void clear_y();
  double y() const;
  void set_y(double value);
  private:
  double _internal_y() const;
  void _internal_set_y(double value);
  public:

  // double z = 3;
  void clear_z();
  double z() const;
  void set_z(double value);
  private:
  double _internal_z() const;
  void _internal_set_z(double value);
  public:

  // @@protoc_insertion_point(class_scope:dtproto.geometry_msgs.Point3d)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    double x_;
    double y_;
    double z_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_dtProto_2fgeometry_5fmsgs_2fPoint_2eproto;
};
// -------------------------------------------------------------------

class Point2f final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:dtproto.geometry_msgs.Point2f) */ {
 public:
  inline Point2f() : Point2f(nullptr) {}
  ~Point2f() override;
  explicit PROTOBUF_CONSTEXPR Point2f(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  Point2f(const Point2f& from);
  Point2f(Point2f&& from) noexcept
    : Point2f() {
    *this = ::std::move(from);
  }

  inline Point2f& operator=(const Point2f& from) {
    CopyFrom(from);
    return *this;
  }
  inline Point2f& operator=(Point2f&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Point2f& default_instance() {
    return *internal_default_instance();
  }
  static inline const Point2f* internal_default_instance() {
    return reinterpret_cast<const Point2f*>(
               &_Point2f_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(Point2f& a, Point2f& b) {
    a.Swap(&b);
  }
  inline void Swap(Point2f* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Point2f* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Point2f* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<Point2f>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const Point2f& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const Point2f& from) {
    Point2f::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Point2f* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "dtproto.geometry_msgs.Point2f";
  }
  protected:
  explicit Point2f(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kXFieldNumber = 1,
    kYFieldNumber = 2,
  };
  // float x = 1;
  void clear_x();
  float x() const;
  void set_x(float value);
  private:
  float _internal_x() const;
  void _internal_set_x(float value);
  public:

  // float y = 2;
  void clear_y();
  float y() const;
  void set_y(float value);
  private:
  float _internal_y() const;
  void _internal_set_y(float value);
  public:

  // @@protoc_insertion_point(class_scope:dtproto.geometry_msgs.Point2f)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    float x_;
    float y_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_dtProto_2fgeometry_5fmsgs_2fPoint_2eproto;
};
// -------------------------------------------------------------------

class Point3f final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:dtproto.geometry_msgs.Point3f) */ {
 public:
  inline Point3f() : Point3f(nullptr) {}
  ~Point3f() override;
  explicit PROTOBUF_CONSTEXPR Point3f(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  Point3f(const Point3f& from);
  Point3f(Point3f&& from) noexcept
    : Point3f() {
    *this = ::std::move(from);
  }

  inline Point3f& operator=(const Point3f& from) {
    CopyFrom(from);
    return *this;
  }
  inline Point3f& operator=(Point3f&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Point3f& default_instance() {
    return *internal_default_instance();
  }
  static inline const Point3f* internal_default_instance() {
    return reinterpret_cast<const Point3f*>(
               &_Point3f_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(Point3f& a, Point3f& b) {
    a.Swap(&b);
  }
  inline void Swap(Point3f* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Point3f* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Point3f* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<Point3f>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const Point3f& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const Point3f& from) {
    Point3f::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Point3f* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "dtproto.geometry_msgs.Point3f";
  }
  protected:
  explicit Point3f(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kXFieldNumber = 1,
    kYFieldNumber = 2,
    kZFieldNumber = 3,
  };
  // float x = 1;
  void clear_x();
  float x() const;
  void set_x(float value);
  private:
  float _internal_x() const;
  void _internal_set_x(float value);
  public:

  // float y = 2;
  void clear_y();
  float y() const;
  void set_y(float value);
  private:
  float _internal_y() const;
  void _internal_set_y(float value);
  public:

  // float z = 3;
  void clear_z();
  float z() const;
  void set_z(float value);
  private:
  float _internal_z() const;
  void _internal_set_z(float value);
  public:

  // @@protoc_insertion_point(class_scope:dtproto.geometry_msgs.Point3f)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    float x_;
    float y_;
    float z_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_dtProto_2fgeometry_5fmsgs_2fPoint_2eproto;
};
// -------------------------------------------------------------------

class Point2i32 final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:dtproto.geometry_msgs.Point2i32) */ {
 public:
  inline Point2i32() : Point2i32(nullptr) {}
  ~Point2i32() override;
  explicit PROTOBUF_CONSTEXPR Point2i32(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  Point2i32(const Point2i32& from);
  Point2i32(Point2i32&& from) noexcept
    : Point2i32() {
    *this = ::std::move(from);
  }

  inline Point2i32& operator=(const Point2i32& from) {
    CopyFrom(from);
    return *this;
  }
  inline Point2i32& operator=(Point2i32&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Point2i32& default_instance() {
    return *internal_default_instance();
  }
  static inline const Point2i32* internal_default_instance() {
    return reinterpret_cast<const Point2i32*>(
               &_Point2i32_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(Point2i32& a, Point2i32& b) {
    a.Swap(&b);
  }
  inline void Swap(Point2i32* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Point2i32* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Point2i32* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<Point2i32>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const Point2i32& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const Point2i32& from) {
    Point2i32::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Point2i32* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "dtproto.geometry_msgs.Point2i32";
  }
  protected:
  explicit Point2i32(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kXFieldNumber = 1,
    kYFieldNumber = 2,
  };
  // int32 x = 1;
  void clear_x();
  int32_t x() const;
  void set_x(int32_t value);
  private:
  int32_t _internal_x() const;
  void _internal_set_x(int32_t value);
  public:

  // int32 y = 2;
  void clear_y();
  int32_t y() const;
  void set_y(int32_t value);
  private:
  int32_t _internal_y() const;
  void _internal_set_y(int32_t value);
  public:

  // @@protoc_insertion_point(class_scope:dtproto.geometry_msgs.Point2i32)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    int32_t x_;
    int32_t y_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_dtProto_2fgeometry_5fmsgs_2fPoint_2eproto;
};
// -------------------------------------------------------------------

class Point3i32 final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:dtproto.geometry_msgs.Point3i32) */ {
 public:
  inline Point3i32() : Point3i32(nullptr) {}
  ~Point3i32() override;
  explicit PROTOBUF_CONSTEXPR Point3i32(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  Point3i32(const Point3i32& from);
  Point3i32(Point3i32&& from) noexcept
    : Point3i32() {
    *this = ::std::move(from);
  }

  inline Point3i32& operator=(const Point3i32& from) {
    CopyFrom(from);
    return *this;
  }
  inline Point3i32& operator=(Point3i32&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Point3i32& default_instance() {
    return *internal_default_instance();
  }
  static inline const Point3i32* internal_default_instance() {
    return reinterpret_cast<const Point3i32*>(
               &_Point3i32_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(Point3i32& a, Point3i32& b) {
    a.Swap(&b);
  }
  inline void Swap(Point3i32* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Point3i32* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Point3i32* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<Point3i32>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const Point3i32& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const Point3i32& from) {
    Point3i32::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Point3i32* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "dtproto.geometry_msgs.Point3i32";
  }
  protected:
  explicit Point3i32(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kXFieldNumber = 1,
    kYFieldNumber = 2,
    kZFieldNumber = 3,
  };
  // int32 x = 1;
  void clear_x();
  int32_t x() const;
  void set_x(int32_t value);
  private:
  int32_t _internal_x() const;
  void _internal_set_x(int32_t value);
  public:

  // int32 y = 2;
  void clear_y();
  int32_t y() const;
  void set_y(int32_t value);
  private:
  int32_t _internal_y() const;
  void _internal_set_y(int32_t value);
  public:

  // int32 z = 3;
  void clear_z();
  int32_t z() const;
  void set_z(int32_t value);
  private:
  int32_t _internal_z() const;
  void _internal_set_z(int32_t value);
  public:

  // @@protoc_insertion_point(class_scope:dtproto.geometry_msgs.Point3i32)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    int32_t x_;
    int32_t y_;
    int32_t z_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_dtProto_2fgeometry_5fmsgs_2fPoint_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Point2d

// double x = 1;
inline void Point2d::clear_x() {
  _impl_.x_ = 0;
}
inline double Point2d::_internal_x() const {
  return _impl_.x_;
}
inline double Point2d::x() const {
  // @@protoc_insertion_point(field_get:dtproto.geometry_msgs.Point2d.x)
  return _internal_x();
}
inline void Point2d::_internal_set_x(double value) {
  
  _impl_.x_ = value;
}
inline void Point2d::set_x(double value) {
  _internal_set_x(value);
  // @@protoc_insertion_point(field_set:dtproto.geometry_msgs.Point2d.x)
}

// double y = 2;
inline void Point2d::clear_y() {
  _impl_.y_ = 0;
}
inline double Point2d::_internal_y() const {
  return _impl_.y_;
}
inline double Point2d::y() const {
  // @@protoc_insertion_point(field_get:dtproto.geometry_msgs.Point2d.y)
  return _internal_y();
}
inline void Point2d::_internal_set_y(double value) {
  
  _impl_.y_ = value;
}
inline void Point2d::set_y(double value) {
  _internal_set_y(value);
  // @@protoc_insertion_point(field_set:dtproto.geometry_msgs.Point2d.y)
}

// -------------------------------------------------------------------

// Point3d

// double x = 1;
inline void Point3d::clear_x() {
  _impl_.x_ = 0;
}
inline double Point3d::_internal_x() const {
  return _impl_.x_;
}
inline double Point3d::x() const {
  // @@protoc_insertion_point(field_get:dtproto.geometry_msgs.Point3d.x)
  return _internal_x();
}
inline void Point3d::_internal_set_x(double value) {
  
  _impl_.x_ = value;
}
inline void Point3d::set_x(double value) {
  _internal_set_x(value);
  // @@protoc_insertion_point(field_set:dtproto.geometry_msgs.Point3d.x)
}

// double y = 2;
inline void Point3d::clear_y() {
  _impl_.y_ = 0;
}
inline double Point3d::_internal_y() const {
  return _impl_.y_;
}
inline double Point3d::y() const {
  // @@protoc_insertion_point(field_get:dtproto.geometry_msgs.Point3d.y)
  return _internal_y();
}
inline void Point3d::_internal_set_y(double value) {
  
  _impl_.y_ = value;
}
inline void Point3d::set_y(double value) {
  _internal_set_y(value);
  // @@protoc_insertion_point(field_set:dtproto.geometry_msgs.Point3d.y)
}

// double z = 3;
inline void Point3d::clear_z() {
  _impl_.z_ = 0;
}
inline double Point3d::_internal_z() const {
  return _impl_.z_;
}
inline double Point3d::z() const {
  // @@protoc_insertion_point(field_get:dtproto.geometry_msgs.Point3d.z)
  return _internal_z();
}
inline void Point3d::_internal_set_z(double value) {
  
  _impl_.z_ = value;
}
inline void Point3d::set_z(double value) {
  _internal_set_z(value);
  // @@protoc_insertion_point(field_set:dtproto.geometry_msgs.Point3d.z)
}

// -------------------------------------------------------------------

// Point2f

// float x = 1;
inline void Point2f::clear_x() {
  _impl_.x_ = 0;
}
inline float Point2f::_internal_x() const {
  return _impl_.x_;
}
inline float Point2f::x() const {
  // @@protoc_insertion_point(field_get:dtproto.geometry_msgs.Point2f.x)
  return _internal_x();
}
inline void Point2f::_internal_set_x(float value) {
  
  _impl_.x_ = value;
}
inline void Point2f::set_x(float value) {
  _internal_set_x(value);
  // @@protoc_insertion_point(field_set:dtproto.geometry_msgs.Point2f.x)
}

// float y = 2;
inline void Point2f::clear_y() {
  _impl_.y_ = 0;
}
inline float Point2f::_internal_y() const {
  return _impl_.y_;
}
inline float Point2f::y() const {
  // @@protoc_insertion_point(field_get:dtproto.geometry_msgs.Point2f.y)
  return _internal_y();
}
inline void Point2f::_internal_set_y(float value) {
  
  _impl_.y_ = value;
}
inline void Point2f::set_y(float value) {
  _internal_set_y(value);
  // @@protoc_insertion_point(field_set:dtproto.geometry_msgs.Point2f.y)
}

// -------------------------------------------------------------------

// Point3f

// float x = 1;
inline void Point3f::clear_x() {
  _impl_.x_ = 0;
}
inline float Point3f::_internal_x() const {
  return _impl_.x_;
}
inline float Point3f::x() const {
  // @@protoc_insertion_point(field_get:dtproto.geometry_msgs.Point3f.x)
  return _internal_x();
}
inline void Point3f::_internal_set_x(float value) {
  
  _impl_.x_ = value;
}
inline void Point3f::set_x(float value) {
  _internal_set_x(value);
  // @@protoc_insertion_point(field_set:dtproto.geometry_msgs.Point3f.x)
}

// float y = 2;
inline void Point3f::clear_y() {
  _impl_.y_ = 0;
}
inline float Point3f::_internal_y() const {
  return _impl_.y_;
}
inline float Point3f::y() const {
  // @@protoc_insertion_point(field_get:dtproto.geometry_msgs.Point3f.y)
  return _internal_y();
}
inline void Point3f::_internal_set_y(float value) {
  
  _impl_.y_ = value;
}
inline void Point3f::set_y(float value) {
  _internal_set_y(value);
  // @@protoc_insertion_point(field_set:dtproto.geometry_msgs.Point3f.y)
}

// float z = 3;
inline void Point3f::clear_z() {
  _impl_.z_ = 0;
}
inline float Point3f::_internal_z() const {
  return _impl_.z_;
}
inline float Point3f::z() const {
  // @@protoc_insertion_point(field_get:dtproto.geometry_msgs.Point3f.z)
  return _internal_z();
}
inline void Point3f::_internal_set_z(float value) {
  
  _impl_.z_ = value;
}
inline void Point3f::set_z(float value) {
  _internal_set_z(value);
  // @@protoc_insertion_point(field_set:dtproto.geometry_msgs.Point3f.z)
}

// -------------------------------------------------------------------

// Point2i32

// int32 x = 1;
inline void Point2i32::clear_x() {
  _impl_.x_ = 0;
}
inline int32_t Point2i32::_internal_x() const {
  return _impl_.x_;
}
inline int32_t Point2i32::x() const {
  // @@protoc_insertion_point(field_get:dtproto.geometry_msgs.Point2i32.x)
  return _internal_x();
}
inline void Point2i32::_internal_set_x(int32_t value) {
  
  _impl_.x_ = value;
}
inline void Point2i32::set_x(int32_t value) {
  _internal_set_x(value);
  // @@protoc_insertion_point(field_set:dtproto.geometry_msgs.Point2i32.x)
}

// int32 y = 2;
inline void Point2i32::clear_y() {
  _impl_.y_ = 0;
}
inline int32_t Point2i32::_internal_y() const {
  return _impl_.y_;
}
inline int32_t Point2i32::y() const {
  // @@protoc_insertion_point(field_get:dtproto.geometry_msgs.Point2i32.y)
  return _internal_y();
}
inline void Point2i32::_internal_set_y(int32_t value) {
  
  _impl_.y_ = value;
}
inline void Point2i32::set_y(int32_t value) {
  _internal_set_y(value);
  // @@protoc_insertion_point(field_set:dtproto.geometry_msgs.Point2i32.y)
}

// -------------------------------------------------------------------

// Point3i32

// int32 x = 1;
inline void Point3i32::clear_x() {
  _impl_.x_ = 0;
}
inline int32_t Point3i32::_internal_x() const {
  return _impl_.x_;
}
inline int32_t Point3i32::x() const {
  // @@protoc_insertion_point(field_get:dtproto.geometry_msgs.Point3i32.x)
  return _internal_x();
}
inline void Point3i32::_internal_set_x(int32_t value) {
  
  _impl_.x_ = value;
}
inline void Point3i32::set_x(int32_t value) {
  _internal_set_x(value);
  // @@protoc_insertion_point(field_set:dtproto.geometry_msgs.Point3i32.x)
}

// int32 y = 2;
inline void Point3i32::clear_y() {
  _impl_.y_ = 0;
}
inline int32_t Point3i32::_internal_y() const {
  return _impl_.y_;
}
inline int32_t Point3i32::y() const {
  // @@protoc_insertion_point(field_get:dtproto.geometry_msgs.Point3i32.y)
  return _internal_y();
}
inline void Point3i32::_internal_set_y(int32_t value) {
  
  _impl_.y_ = value;
}
inline void Point3i32::set_y(int32_t value) {
  _internal_set_y(value);
  // @@protoc_insertion_point(field_set:dtproto.geometry_msgs.Point3i32.y)
}

// int32 z = 3;
inline void Point3i32::clear_z() {
  _impl_.z_ = 0;
}
inline int32_t Point3i32::_internal_z() const {
  return _impl_.z_;
}
inline int32_t Point3i32::z() const {
  // @@protoc_insertion_point(field_get:dtproto.geometry_msgs.Point3i32.z)
  return _internal_z();
}
inline void Point3i32::_internal_set_z(int32_t value) {
  
  _impl_.z_ = value;
}
inline void Point3i32::set_z(int32_t value) {
  _internal_set_z(value);
  // @@protoc_insertion_point(field_set:dtproto.geometry_msgs.Point3i32.z)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace geometry_msgs
}  // namespace dtproto

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_dtProto_2fgeometry_5fmsgs_2fPoint_2eproto
