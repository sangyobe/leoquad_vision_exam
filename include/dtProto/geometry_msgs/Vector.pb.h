// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: dtProto/geometry_msgs/Vector.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_dtProto_2fgeometry_5fmsgs_2fVector_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_dtProto_2fgeometry_5fmsgs_2fVector_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3021000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3021012 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_dtProto_2fgeometry_5fmsgs_2fVector_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_dtProto_2fgeometry_5fmsgs_2fVector_2eproto {
  static const uint32_t offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_dtProto_2fgeometry_5fmsgs_2fVector_2eproto;
namespace dtproto {
namespace geometry_msgs {
class Vector2b;
struct Vector2bDefaultTypeInternal;
extern Vector2bDefaultTypeInternal _Vector2b_default_instance_;
class Vector2d;
struct Vector2dDefaultTypeInternal;
extern Vector2dDefaultTypeInternal _Vector2d_default_instance_;
class Vector2f;
struct Vector2fDefaultTypeInternal;
extern Vector2fDefaultTypeInternal _Vector2f_default_instance_;
class Vector2i32;
struct Vector2i32DefaultTypeInternal;
extern Vector2i32DefaultTypeInternal _Vector2i32_default_instance_;
class Vector2ui32;
struct Vector2ui32DefaultTypeInternal;
extern Vector2ui32DefaultTypeInternal _Vector2ui32_default_instance_;
class Vector3b;
struct Vector3bDefaultTypeInternal;
extern Vector3bDefaultTypeInternal _Vector3b_default_instance_;
class Vector3d;
struct Vector3dDefaultTypeInternal;
extern Vector3dDefaultTypeInternal _Vector3d_default_instance_;
class Vector3f;
struct Vector3fDefaultTypeInternal;
extern Vector3fDefaultTypeInternal _Vector3f_default_instance_;
class Vector3i32;
struct Vector3i32DefaultTypeInternal;
extern Vector3i32DefaultTypeInternal _Vector3i32_default_instance_;
class Vector3ui32;
struct Vector3ui32DefaultTypeInternal;
extern Vector3ui32DefaultTypeInternal _Vector3ui32_default_instance_;
class Vector4b;
struct Vector4bDefaultTypeInternal;
extern Vector4bDefaultTypeInternal _Vector4b_default_instance_;
class Vector4d;
struct Vector4dDefaultTypeInternal;
extern Vector4dDefaultTypeInternal _Vector4d_default_instance_;
class Vector4f;
struct Vector4fDefaultTypeInternal;
extern Vector4fDefaultTypeInternal _Vector4f_default_instance_;
class Vector4i32;
struct Vector4i32DefaultTypeInternal;
extern Vector4i32DefaultTypeInternal _Vector4i32_default_instance_;
class Vector4ui32;
struct Vector4ui32DefaultTypeInternal;
extern Vector4ui32DefaultTypeInternal _Vector4ui32_default_instance_;
class Vector6b;
struct Vector6bDefaultTypeInternal;
extern Vector6bDefaultTypeInternal _Vector6b_default_instance_;
class Vector6d;
struct Vector6dDefaultTypeInternal;
extern Vector6dDefaultTypeInternal _Vector6d_default_instance_;
class Vector6f;
struct Vector6fDefaultTypeInternal;
extern Vector6fDefaultTypeInternal _Vector6f_default_instance_;
class Vector6i32;
struct Vector6i32DefaultTypeInternal;
extern Vector6i32DefaultTypeInternal _Vector6i32_default_instance_;
class Vector6ui32;
struct Vector6ui32DefaultTypeInternal;
extern Vector6ui32DefaultTypeInternal _Vector6ui32_default_instance_;
class VectorXb;
struct VectorXbDefaultTypeInternal;
extern VectorXbDefaultTypeInternal _VectorXb_default_instance_;
class VectorXd;
struct VectorXdDefaultTypeInternal;
extern VectorXdDefaultTypeInternal _VectorXd_default_instance_;
class VectorXf;
struct VectorXfDefaultTypeInternal;
extern VectorXfDefaultTypeInternal _VectorXf_default_instance_;
class VectorXi32;
struct VectorXi32DefaultTypeInternal;
extern VectorXi32DefaultTypeInternal _VectorXi32_default_instance_;
class VectorXui32;
struct VectorXui32DefaultTypeInternal;
extern VectorXui32DefaultTypeInternal _VectorXui32_default_instance_;
}  // namespace geometry_msgs
}  // namespace dtproto
PROTOBUF_NAMESPACE_OPEN
template<> ::dtproto::geometry_msgs::Vector2b* Arena::CreateMaybeMessage<::dtproto::geometry_msgs::Vector2b>(Arena*);
template<> ::dtproto::geometry_msgs::Vector2d* Arena::CreateMaybeMessage<::dtproto::geometry_msgs::Vector2d>(Arena*);
template<> ::dtproto::geometry_msgs::Vector2f* Arena::CreateMaybeMessage<::dtproto::geometry_msgs::Vector2f>(Arena*);
template<> ::dtproto::geometry_msgs::Vector2i32* Arena::CreateMaybeMessage<::dtproto::geometry_msgs::Vector2i32>(Arena*);
template<> ::dtproto::geometry_msgs::Vector2ui32* Arena::CreateMaybeMessage<::dtproto::geometry_msgs::Vector2ui32>(Arena*);
template<> ::dtproto::geometry_msgs::Vector3b* Arena::CreateMaybeMessage<::dtproto::geometry_msgs::Vector3b>(Arena*);
template<> ::dtproto::geometry_msgs::Vector3d* Arena::CreateMaybeMessage<::dtproto::geometry_msgs::Vector3d>(Arena*);
template<> ::dtproto::geometry_msgs::Vector3f* Arena::CreateMaybeMessage<::dtproto::geometry_msgs::Vector3f>(Arena*);
template<> ::dtproto::geometry_msgs::Vector3i32* Arena::CreateMaybeMessage<::dtproto::geometry_msgs::Vector3i32>(Arena*);
template<> ::dtproto::geometry_msgs::Vector3ui32* Arena::CreateMaybeMessage<::dtproto::geometry_msgs::Vector3ui32>(Arena*);
template<> ::dtproto::geometry_msgs::Vector4b* Arena::CreateMaybeMessage<::dtproto::geometry_msgs::Vector4b>(Arena*);
template<> ::dtproto::geometry_msgs::Vector4d* Arena::CreateMaybeMessage<::dtproto::geometry_msgs::Vector4d>(Arena*);
template<> ::dtproto::geometry_msgs::Vector4f* Arena::CreateMaybeMessage<::dtproto::geometry_msgs::Vector4f>(Arena*);
template<> ::dtproto::geometry_msgs::Vector4i32* Arena::CreateMaybeMessage<::dtproto::geometry_msgs::Vector4i32>(Arena*);
template<> ::dtproto::geometry_msgs::Vector4ui32* Arena::CreateMaybeMessage<::dtproto::geometry_msgs::Vector4ui32>(Arena*);
template<> ::dtproto::geometry_msgs::Vector6b* Arena::CreateMaybeMessage<::dtproto::geometry_msgs::Vector6b>(Arena*);
template<> ::dtproto::geometry_msgs::Vector6d* Arena::CreateMaybeMessage<::dtproto::geometry_msgs::Vector6d>(Arena*);
template<> ::dtproto::geometry_msgs::Vector6f* Arena::CreateMaybeMessage<::dtproto::geometry_msgs::Vector6f>(Arena*);
template<> ::dtproto::geometry_msgs::Vector6i32* Arena::CreateMaybeMessage<::dtproto::geometry_msgs::Vector6i32>(Arena*);
template<> ::dtproto::geometry_msgs::Vector6ui32* Arena::CreateMaybeMessage<::dtproto::geometry_msgs::Vector6ui32>(Arena*);
template<> ::dtproto::geometry_msgs::VectorXb* Arena::CreateMaybeMessage<::dtproto::geometry_msgs::VectorXb>(Arena*);
template<> ::dtproto::geometry_msgs::VectorXd* Arena::CreateMaybeMessage<::dtproto::geometry_msgs::VectorXd>(Arena*);
template<> ::dtproto::geometry_msgs::VectorXf* Arena::CreateMaybeMessage<::dtproto::geometry_msgs::VectorXf>(Arena*);
template<> ::dtproto::geometry_msgs::VectorXi32* Arena::CreateMaybeMessage<::dtproto::geometry_msgs::VectorXi32>(Arena*);
template<> ::dtproto::geometry_msgs::VectorXui32* Arena::CreateMaybeMessage<::dtproto::geometry_msgs::VectorXui32>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace dtproto {
namespace geometry_msgs {

// ===================================================================

class VectorXd final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:dtproto.geometry_msgs.VectorXd) */ {
 public:
  inline VectorXd() : VectorXd(nullptr) {}
  ~VectorXd() override;
  explicit PROTOBUF_CONSTEXPR VectorXd(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  VectorXd(const VectorXd& from);
  VectorXd(VectorXd&& from) noexcept
    : VectorXd() {
    *this = ::std::move(from);
  }

  inline VectorXd& operator=(const VectorXd& from) {
    CopyFrom(from);
    return *this;
  }
  inline VectorXd& operator=(VectorXd&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const VectorXd& default_instance() {
    return *internal_default_instance();
  }
  static inline const VectorXd* internal_default_instance() {
    return reinterpret_cast<const VectorXd*>(
               &_VectorXd_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(VectorXd& a, VectorXd& b) {
    a.Swap(&b);
  }
  inline void Swap(VectorXd* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(VectorXd* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  VectorXd* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<VectorXd>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const VectorXd& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const VectorXd& from) {
    VectorXd::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(VectorXd* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "dtproto.geometry_msgs.VectorXd";
  }
  protected:
  explicit VectorXd(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kValFieldNumber = 1,
  };
  // repeated double val = 1;
  int val_size() const;
  private:
  int _internal_val_size() const;
  public:
  void clear_val();
  private:
  double _internal_val(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >&
      _internal_val() const;
  void _internal_add_val(double value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >*
      _internal_mutable_val();
  public:
  double val(int index) const;
  void set_val(int index, double value);
  void add_val(double value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >&
      val() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >*
      mutable_val();

  // @@protoc_insertion_point(class_scope:dtproto.geometry_msgs.VectorXd)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::RepeatedField< double > val_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_dtProto_2fgeometry_5fmsgs_2fVector_2eproto;
};
// -------------------------------------------------------------------

class Vector2d final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:dtproto.geometry_msgs.Vector2d) */ {
 public:
  inline Vector2d() : Vector2d(nullptr) {}
  ~Vector2d() override;
  explicit PROTOBUF_CONSTEXPR Vector2d(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  Vector2d(const Vector2d& from);
  Vector2d(Vector2d&& from) noexcept
    : Vector2d() {
    *this = ::std::move(from);
  }

  inline Vector2d& operator=(const Vector2d& from) {
    CopyFrom(from);
    return *this;
  }
  inline Vector2d& operator=(Vector2d&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Vector2d& default_instance() {
    return *internal_default_instance();
  }
  static inline const Vector2d* internal_default_instance() {
    return reinterpret_cast<const Vector2d*>(
               &_Vector2d_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(Vector2d& a, Vector2d& b) {
    a.Swap(&b);
  }
  inline void Swap(Vector2d* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Vector2d* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Vector2d* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<Vector2d>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const Vector2d& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const Vector2d& from) {
    Vector2d::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Vector2d* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "dtproto.geometry_msgs.Vector2d";
  }
  protected:
  explicit Vector2d(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kA1FieldNumber = 1,
    kA2FieldNumber = 2,
  };
  // double a1 = 1;
  void clear_a1();
  double a1() const;
  void set_a1(double value);
  private:
  double _internal_a1() const;
  void _internal_set_a1(double value);
  public:

  // double a2 = 2;
  void clear_a2();
  double a2() const;
  void set_a2(double value);
  private:
  double _internal_a2() const;
  void _internal_set_a2(double value);
  public:

  // @@protoc_insertion_point(class_scope:dtproto.geometry_msgs.Vector2d)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    double a1_;
    double a2_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_dtProto_2fgeometry_5fmsgs_2fVector_2eproto;
};
// -------------------------------------------------------------------

class Vector3d final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:dtproto.geometry_msgs.Vector3d) */ {
 public:
  inline Vector3d() : Vector3d(nullptr) {}
  ~Vector3d() override;
  explicit PROTOBUF_CONSTEXPR Vector3d(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  Vector3d(const Vector3d& from);
  Vector3d(Vector3d&& from) noexcept
    : Vector3d() {
    *this = ::std::move(from);
  }

  inline Vector3d& operator=(const Vector3d& from) {
    CopyFrom(from);
    return *this;
  }
  inline Vector3d& operator=(Vector3d&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Vector3d& default_instance() {
    return *internal_default_instance();
  }
  static inline const Vector3d* internal_default_instance() {
    return reinterpret_cast<const Vector3d*>(
               &_Vector3d_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(Vector3d& a, Vector3d& b) {
    a.Swap(&b);
  }
  inline void Swap(Vector3d* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Vector3d* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Vector3d* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<Vector3d>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const Vector3d& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const Vector3d& from) {
    Vector3d::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Vector3d* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "dtproto.geometry_msgs.Vector3d";
  }
  protected:
  explicit Vector3d(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kA1FieldNumber = 1,
    kA2FieldNumber = 2,
    kA3FieldNumber = 3,
  };
  // double a1 = 1;
  void clear_a1();
  double a1() const;
  void set_a1(double value);
  private:
  double _internal_a1() const;
  void _internal_set_a1(double value);
  public:

  // double a2 = 2;
  void clear_a2();
  double a2() const;
  void set_a2(double value);
  private:
  double _internal_a2() const;
  void _internal_set_a2(double value);
  public:

  // double a3 = 3;
  void clear_a3();
  double a3() const;
  void set_a3(double value);
  private:
  double _internal_a3() const;
  void _internal_set_a3(double value);
  public:

  // @@protoc_insertion_point(class_scope:dtproto.geometry_msgs.Vector3d)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    double a1_;
    double a2_;
    double a3_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_dtProto_2fgeometry_5fmsgs_2fVector_2eproto;
};
// -------------------------------------------------------------------

class Vector4d final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:dtproto.geometry_msgs.Vector4d) */ {
 public:
  inline Vector4d() : Vector4d(nullptr) {}
  ~Vector4d() override;
  explicit PROTOBUF_CONSTEXPR Vector4d(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  Vector4d(const Vector4d& from);
  Vector4d(Vector4d&& from) noexcept
    : Vector4d() {
    *this = ::std::move(from);
  }

  inline Vector4d& operator=(const Vector4d& from) {
    CopyFrom(from);
    return *this;
  }
  inline Vector4d& operator=(Vector4d&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Vector4d& default_instance() {
    return *internal_default_instance();
  }
  static inline const Vector4d* internal_default_instance() {
    return reinterpret_cast<const Vector4d*>(
               &_Vector4d_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(Vector4d& a, Vector4d& b) {
    a.Swap(&b);
  }
  inline void Swap(Vector4d* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Vector4d* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Vector4d* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<Vector4d>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const Vector4d& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const Vector4d& from) {
    Vector4d::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Vector4d* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "dtproto.geometry_msgs.Vector4d";
  }
  protected:
  explicit Vector4d(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kA1FieldNumber = 1,
    kA2FieldNumber = 2,
    kA3FieldNumber = 3,
    kA4FieldNumber = 4,
  };
  // double a1 = 1;
  void clear_a1();
  double a1() const;
  void set_a1(double value);
  private:
  double _internal_a1() const;
  void _internal_set_a1(double value);
  public:

  // double a2 = 2;
  void clear_a2();
  double a2() const;
  void set_a2(double value);
  private:
  double _internal_a2() const;
  void _internal_set_a2(double value);
  public:

  // double a3 = 3;
  void clear_a3();
  double a3() const;
  void set_a3(double value);
  private:
  double _internal_a3() const;
  void _internal_set_a3(double value);
  public:

  // double a4 = 4;
  void clear_a4();
  double a4() const;
  void set_a4(double value);
  private:
  double _internal_a4() const;
  void _internal_set_a4(double value);
  public:

  // @@protoc_insertion_point(class_scope:dtproto.geometry_msgs.Vector4d)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    double a1_;
    double a2_;
    double a3_;
    double a4_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_dtProto_2fgeometry_5fmsgs_2fVector_2eproto;
};
// -------------------------------------------------------------------

class Vector6d final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:dtproto.geometry_msgs.Vector6d) */ {
 public:
  inline Vector6d() : Vector6d(nullptr) {}
  ~Vector6d() override;
  explicit PROTOBUF_CONSTEXPR Vector6d(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  Vector6d(const Vector6d& from);
  Vector6d(Vector6d&& from) noexcept
    : Vector6d() {
    *this = ::std::move(from);
  }

  inline Vector6d& operator=(const Vector6d& from) {
    CopyFrom(from);
    return *this;
  }
  inline Vector6d& operator=(Vector6d&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Vector6d& default_instance() {
    return *internal_default_instance();
  }
  static inline const Vector6d* internal_default_instance() {
    return reinterpret_cast<const Vector6d*>(
               &_Vector6d_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(Vector6d& a, Vector6d& b) {
    a.Swap(&b);
  }
  inline void Swap(Vector6d* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Vector6d* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Vector6d* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<Vector6d>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const Vector6d& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const Vector6d& from) {
    Vector6d::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Vector6d* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "dtproto.geometry_msgs.Vector6d";
  }
  protected:
  explicit Vector6d(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kA1FieldNumber = 1,
    kA2FieldNumber = 2,
    kA3FieldNumber = 3,
    kA4FieldNumber = 4,
    kA5FieldNumber = 5,
    kA6FieldNumber = 6,
  };
  // double a1 = 1;
  void clear_a1();
  double a1() const;
  void set_a1(double value);
  private:
  double _internal_a1() const;
  void _internal_set_a1(double value);
  public:

  // double a2 = 2;
  void clear_a2();
  double a2() const;
  void set_a2(double value);
  private:
  double _internal_a2() const;
  void _internal_set_a2(double value);
  public:

  // double a3 = 3;
  void clear_a3();
  double a3() const;
  void set_a3(double value);
  private:
  double _internal_a3() const;
  void _internal_set_a3(double value);
  public:

  // double a4 = 4;
  void clear_a4();
  double a4() const;
  void set_a4(double value);
  private:
  double _internal_a4() const;
  void _internal_set_a4(double value);
  public:

  // double a5 = 5;
  void clear_a5();
  double a5() const;
  void set_a5(double value);
  private:
  double _internal_a5() const;
  void _internal_set_a5(double value);
  public:

  // double a6 = 6;
  void clear_a6();
  double a6() const;
  void set_a6(double value);
  private:
  double _internal_a6() const;
  void _internal_set_a6(double value);
  public:

  // @@protoc_insertion_point(class_scope:dtproto.geometry_msgs.Vector6d)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    double a1_;
    double a2_;
    double a3_;
    double a4_;
    double a5_;
    double a6_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_dtProto_2fgeometry_5fmsgs_2fVector_2eproto;
};
// -------------------------------------------------------------------

class VectorXf final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:dtproto.geometry_msgs.VectorXf) */ {
 public:
  inline VectorXf() : VectorXf(nullptr) {}
  ~VectorXf() override;
  explicit PROTOBUF_CONSTEXPR VectorXf(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  VectorXf(const VectorXf& from);
  VectorXf(VectorXf&& from) noexcept
    : VectorXf() {
    *this = ::std::move(from);
  }

  inline VectorXf& operator=(const VectorXf& from) {
    CopyFrom(from);
    return *this;
  }
  inline VectorXf& operator=(VectorXf&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const VectorXf& default_instance() {
    return *internal_default_instance();
  }
  static inline const VectorXf* internal_default_instance() {
    return reinterpret_cast<const VectorXf*>(
               &_VectorXf_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(VectorXf& a, VectorXf& b) {
    a.Swap(&b);
  }
  inline void Swap(VectorXf* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(VectorXf* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  VectorXf* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<VectorXf>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const VectorXf& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const VectorXf& from) {
    VectorXf::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(VectorXf* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "dtproto.geometry_msgs.VectorXf";
  }
  protected:
  explicit VectorXf(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kValFieldNumber = 1,
  };
  // repeated float val = 1;
  int val_size() const;
  private:
  int _internal_val_size() const;
  public:
  void clear_val();
  private:
  float _internal_val(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
      _internal_val() const;
  void _internal_add_val(float value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
      _internal_mutable_val();
  public:
  float val(int index) const;
  void set_val(int index, float value);
  void add_val(float value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
      val() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
      mutable_val();

  // @@protoc_insertion_point(class_scope:dtproto.geometry_msgs.VectorXf)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::RepeatedField< float > val_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_dtProto_2fgeometry_5fmsgs_2fVector_2eproto;
};
// -------------------------------------------------------------------

class Vector2f final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:dtproto.geometry_msgs.Vector2f) */ {
 public:
  inline Vector2f() : Vector2f(nullptr) {}
  ~Vector2f() override;
  explicit PROTOBUF_CONSTEXPR Vector2f(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  Vector2f(const Vector2f& from);
  Vector2f(Vector2f&& from) noexcept
    : Vector2f() {
    *this = ::std::move(from);
  }

  inline Vector2f& operator=(const Vector2f& from) {
    CopyFrom(from);
    return *this;
  }
  inline Vector2f& operator=(Vector2f&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Vector2f& default_instance() {
    return *internal_default_instance();
  }
  static inline const Vector2f* internal_default_instance() {
    return reinterpret_cast<const Vector2f*>(
               &_Vector2f_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  friend void swap(Vector2f& a, Vector2f& b) {
    a.Swap(&b);
  }
  inline void Swap(Vector2f* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Vector2f* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Vector2f* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<Vector2f>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const Vector2f& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const Vector2f& from) {
    Vector2f::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Vector2f* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "dtproto.geometry_msgs.Vector2f";
  }
  protected:
  explicit Vector2f(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kA1FieldNumber = 1,
    kA2FieldNumber = 2,
  };
  // float a1 = 1;
  void clear_a1();
  float a1() const;
  void set_a1(float value);
  private:
  float _internal_a1() const;
  void _internal_set_a1(float value);
  public:

  // float a2 = 2;
  void clear_a2();
  float a2() const;
  void set_a2(float value);
  private:
  float _internal_a2() const;
  void _internal_set_a2(float value);
  public:

  // @@protoc_insertion_point(class_scope:dtproto.geometry_msgs.Vector2f)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    float a1_;
    float a2_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_dtProto_2fgeometry_5fmsgs_2fVector_2eproto;
};
// -------------------------------------------------------------------

class Vector3f final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:dtproto.geometry_msgs.Vector3f) */ {
 public:
  inline Vector3f() : Vector3f(nullptr) {}
  ~Vector3f() override;
  explicit PROTOBUF_CONSTEXPR Vector3f(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  Vector3f(const Vector3f& from);
  Vector3f(Vector3f&& from) noexcept
    : Vector3f() {
    *this = ::std::move(from);
  }

  inline Vector3f& operator=(const Vector3f& from) {
    CopyFrom(from);
    return *this;
  }
  inline Vector3f& operator=(Vector3f&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Vector3f& default_instance() {
    return *internal_default_instance();
  }
  static inline const Vector3f* internal_default_instance() {
    return reinterpret_cast<const Vector3f*>(
               &_Vector3f_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  friend void swap(Vector3f& a, Vector3f& b) {
    a.Swap(&b);
  }
  inline void Swap(Vector3f* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Vector3f* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Vector3f* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<Vector3f>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const Vector3f& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const Vector3f& from) {
    Vector3f::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Vector3f* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "dtproto.geometry_msgs.Vector3f";
  }
  protected:
  explicit Vector3f(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kA1FieldNumber = 1,
    kA2FieldNumber = 2,
    kA3FieldNumber = 3,
  };
  // float a1 = 1;
  void clear_a1();
  float a1() const;
  void set_a1(float value);
  private:
  float _internal_a1() const;
  void _internal_set_a1(float value);
  public:

  // float a2 = 2;
  void clear_a2();
  float a2() const;
  void set_a2(float value);
  private:
  float _internal_a2() const;
  void _internal_set_a2(float value);
  public:

  // float a3 = 3;
  void clear_a3();
  float a3() const;
  void set_a3(float value);
  private:
  float _internal_a3() const;
  void _internal_set_a3(float value);
  public:

  // @@protoc_insertion_point(class_scope:dtproto.geometry_msgs.Vector3f)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    float a1_;
    float a2_;
    float a3_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_dtProto_2fgeometry_5fmsgs_2fVector_2eproto;
};
// -------------------------------------------------------------------

class Vector4f final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:dtproto.geometry_msgs.Vector4f) */ {
 public:
  inline Vector4f() : Vector4f(nullptr) {}
  ~Vector4f() override;
  explicit PROTOBUF_CONSTEXPR Vector4f(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  Vector4f(const Vector4f& from);
  Vector4f(Vector4f&& from) noexcept
    : Vector4f() {
    *this = ::std::move(from);
  }

  inline Vector4f& operator=(const Vector4f& from) {
    CopyFrom(from);
    return *this;
  }
  inline Vector4f& operator=(Vector4f&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Vector4f& default_instance() {
    return *internal_default_instance();
  }
  static inline const Vector4f* internal_default_instance() {
    return reinterpret_cast<const Vector4f*>(
               &_Vector4f_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  friend void swap(Vector4f& a, Vector4f& b) {
    a.Swap(&b);
  }
  inline void Swap(Vector4f* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Vector4f* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Vector4f* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<Vector4f>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const Vector4f& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const Vector4f& from) {
    Vector4f::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Vector4f* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "dtproto.geometry_msgs.Vector4f";
  }
  protected:
  explicit Vector4f(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kA1FieldNumber = 1,
    kA2FieldNumber = 2,
    kA3FieldNumber = 3,
    kA4FieldNumber = 4,
  };
  // float a1 = 1;
  void clear_a1();
  float a1() const;
  void set_a1(float value);
  private:
  float _internal_a1() const;
  void _internal_set_a1(float value);
  public:

  // float a2 = 2;
  void clear_a2();
  float a2() const;
  void set_a2(float value);
  private:
  float _internal_a2() const;
  void _internal_set_a2(float value);
  public:

  // float a3 = 3;
  void clear_a3();
  float a3() const;
  void set_a3(float value);
  private:
  float _internal_a3() const;
  void _internal_set_a3(float value);
  public:

  // float a4 = 4;
  void clear_a4();
  float a4() const;
  void set_a4(float value);
  private:
  float _internal_a4() const;
  void _internal_set_a4(float value);
  public:

  // @@protoc_insertion_point(class_scope:dtproto.geometry_msgs.Vector4f)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    float a1_;
    float a2_;
    float a3_;
    float a4_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_dtProto_2fgeometry_5fmsgs_2fVector_2eproto;
};
// -------------------------------------------------------------------

class Vector6f final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:dtproto.geometry_msgs.Vector6f) */ {
 public:
  inline Vector6f() : Vector6f(nullptr) {}
  ~Vector6f() override;
  explicit PROTOBUF_CONSTEXPR Vector6f(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  Vector6f(const Vector6f& from);
  Vector6f(Vector6f&& from) noexcept
    : Vector6f() {
    *this = ::std::move(from);
  }

  inline Vector6f& operator=(const Vector6f& from) {
    CopyFrom(from);
    return *this;
  }
  inline Vector6f& operator=(Vector6f&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Vector6f& default_instance() {
    return *internal_default_instance();
  }
  static inline const Vector6f* internal_default_instance() {
    return reinterpret_cast<const Vector6f*>(
               &_Vector6f_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  friend void swap(Vector6f& a, Vector6f& b) {
    a.Swap(&b);
  }
  inline void Swap(Vector6f* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Vector6f* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Vector6f* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<Vector6f>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const Vector6f& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const Vector6f& from) {
    Vector6f::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Vector6f* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "dtproto.geometry_msgs.Vector6f";
  }
  protected:
  explicit Vector6f(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kA1FieldNumber = 1,
    kA2FieldNumber = 2,
    kA3FieldNumber = 3,
    kA4FieldNumber = 4,
    kA5FieldNumber = 5,
    kA6FieldNumber = 6,
  };
  // float a1 = 1;
  void clear_a1();
  float a1() const;
  void set_a1(float value);
  private:
  float _internal_a1() const;
  void _internal_set_a1(float value);
  public:

  // float a2 = 2;
  void clear_a2();
  float a2() const;
  void set_a2(float value);
  private:
  float _internal_a2() const;
  void _internal_set_a2(float value);
  public:

  // float a3 = 3;
  void clear_a3();
  float a3() const;
  void set_a3(float value);
  private:
  float _internal_a3() const;
  void _internal_set_a3(float value);
  public:

  // float a4 = 4;
  void clear_a4();
  float a4() const;
  void set_a4(float value);
  private:
  float _internal_a4() const;
  void _internal_set_a4(float value);
  public:

  // float a5 = 5;
  void clear_a5();
  float a5() const;
  void set_a5(float value);
  private:
  float _internal_a5() const;
  void _internal_set_a5(float value);
  public:

  // float a6 = 6;
  void clear_a6();
  float a6() const;
  void set_a6(float value);
  private:
  float _internal_a6() const;
  void _internal_set_a6(float value);
  public:

  // @@protoc_insertion_point(class_scope:dtproto.geometry_msgs.Vector6f)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    float a1_;
    float a2_;
    float a3_;
    float a4_;
    float a5_;
    float a6_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_dtProto_2fgeometry_5fmsgs_2fVector_2eproto;
};
// -------------------------------------------------------------------

class VectorXui32 final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:dtproto.geometry_msgs.VectorXui32) */ {
 public:
  inline VectorXui32() : VectorXui32(nullptr) {}
  ~VectorXui32() override;
  explicit PROTOBUF_CONSTEXPR VectorXui32(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  VectorXui32(const VectorXui32& from);
  VectorXui32(VectorXui32&& from) noexcept
    : VectorXui32() {
    *this = ::std::move(from);
  }

  inline VectorXui32& operator=(const VectorXui32& from) {
    CopyFrom(from);
    return *this;
  }
  inline VectorXui32& operator=(VectorXui32&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const VectorXui32& default_instance() {
    return *internal_default_instance();
  }
  static inline const VectorXui32* internal_default_instance() {
    return reinterpret_cast<const VectorXui32*>(
               &_VectorXui32_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  friend void swap(VectorXui32& a, VectorXui32& b) {
    a.Swap(&b);
  }
  inline void Swap(VectorXui32* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(VectorXui32* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  VectorXui32* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<VectorXui32>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const VectorXui32& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const VectorXui32& from) {
    VectorXui32::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(VectorXui32* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "dtproto.geometry_msgs.VectorXui32";
  }
  protected:
  explicit VectorXui32(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kValFieldNumber = 1,
  };
  // repeated uint32 val = 1;
  int val_size() const;
  private:
  int _internal_val_size() const;
  public:
  void clear_val();
  private:
  uint32_t _internal_val(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
      _internal_val() const;
  void _internal_add_val(uint32_t value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
      _internal_mutable_val();
  public:
  uint32_t val(int index) const;
  void set_val(int index, uint32_t value);
  void add_val(uint32_t value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
      val() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
      mutable_val();

  // @@protoc_insertion_point(class_scope:dtproto.geometry_msgs.VectorXui32)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t > val_;
    mutable std::atomic<int> _val_cached_byte_size_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_dtProto_2fgeometry_5fmsgs_2fVector_2eproto;
};
// -------------------------------------------------------------------

class Vector2ui32 final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:dtproto.geometry_msgs.Vector2ui32) */ {
 public:
  inline Vector2ui32() : Vector2ui32(nullptr) {}
  ~Vector2ui32() override;
  explicit PROTOBUF_CONSTEXPR Vector2ui32(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  Vector2ui32(const Vector2ui32& from);
  Vector2ui32(Vector2ui32&& from) noexcept
    : Vector2ui32() {
    *this = ::std::move(from);
  }

  inline Vector2ui32& operator=(const Vector2ui32& from) {
    CopyFrom(from);
    return *this;
  }
  inline Vector2ui32& operator=(Vector2ui32&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Vector2ui32& default_instance() {
    return *internal_default_instance();
  }
  static inline const Vector2ui32* internal_default_instance() {
    return reinterpret_cast<const Vector2ui32*>(
               &_Vector2ui32_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  friend void swap(Vector2ui32& a, Vector2ui32& b) {
    a.Swap(&b);
  }
  inline void Swap(Vector2ui32* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Vector2ui32* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Vector2ui32* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<Vector2ui32>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const Vector2ui32& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const Vector2ui32& from) {
    Vector2ui32::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Vector2ui32* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "dtproto.geometry_msgs.Vector2ui32";
  }
  protected:
  explicit Vector2ui32(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kA1FieldNumber = 1,
    kA2FieldNumber = 2,
  };
  // uint32 a1 = 1;
  void clear_a1();
  uint32_t a1() const;
  void set_a1(uint32_t value);
  private:
  uint32_t _internal_a1() const;
  void _internal_set_a1(uint32_t value);
  public:

  // uint32 a2 = 2;
  void clear_a2();
  uint32_t a2() const;
  void set_a2(uint32_t value);
  private:
  uint32_t _internal_a2() const;
  void _internal_set_a2(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:dtproto.geometry_msgs.Vector2ui32)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    uint32_t a1_;
    uint32_t a2_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_dtProto_2fgeometry_5fmsgs_2fVector_2eproto;
};
// -------------------------------------------------------------------

class Vector3ui32 final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:dtproto.geometry_msgs.Vector3ui32) */ {
 public:
  inline Vector3ui32() : Vector3ui32(nullptr) {}
  ~Vector3ui32() override;
  explicit PROTOBUF_CONSTEXPR Vector3ui32(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  Vector3ui32(const Vector3ui32& from);
  Vector3ui32(Vector3ui32&& from) noexcept
    : Vector3ui32() {
    *this = ::std::move(from);
  }

  inline Vector3ui32& operator=(const Vector3ui32& from) {
    CopyFrom(from);
    return *this;
  }
  inline Vector3ui32& operator=(Vector3ui32&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Vector3ui32& default_instance() {
    return *internal_default_instance();
  }
  static inline const Vector3ui32* internal_default_instance() {
    return reinterpret_cast<const Vector3ui32*>(
               &_Vector3ui32_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    12;

  friend void swap(Vector3ui32& a, Vector3ui32& b) {
    a.Swap(&b);
  }
  inline void Swap(Vector3ui32* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Vector3ui32* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Vector3ui32* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<Vector3ui32>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const Vector3ui32& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const Vector3ui32& from) {
    Vector3ui32::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Vector3ui32* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "dtproto.geometry_msgs.Vector3ui32";
  }
  protected:
  explicit Vector3ui32(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kA1FieldNumber = 1,
    kA2FieldNumber = 2,
    kA3FieldNumber = 3,
  };
  // uint32 a1 = 1;
  void clear_a1();
  uint32_t a1() const;
  void set_a1(uint32_t value);
  private:
  uint32_t _internal_a1() const;
  void _internal_set_a1(uint32_t value);
  public:

  // uint32 a2 = 2;
  void clear_a2();
  uint32_t a2() const;
  void set_a2(uint32_t value);
  private:
  uint32_t _internal_a2() const;
  void _internal_set_a2(uint32_t value);
  public:

  // uint32 a3 = 3;
  void clear_a3();
  uint32_t a3() const;
  void set_a3(uint32_t value);
  private:
  uint32_t _internal_a3() const;
  void _internal_set_a3(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:dtproto.geometry_msgs.Vector3ui32)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    uint32_t a1_;
    uint32_t a2_;
    uint32_t a3_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_dtProto_2fgeometry_5fmsgs_2fVector_2eproto;
};
// -------------------------------------------------------------------

class Vector4ui32 final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:dtproto.geometry_msgs.Vector4ui32) */ {
 public:
  inline Vector4ui32() : Vector4ui32(nullptr) {}
  ~Vector4ui32() override;
  explicit PROTOBUF_CONSTEXPR Vector4ui32(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  Vector4ui32(const Vector4ui32& from);
  Vector4ui32(Vector4ui32&& from) noexcept
    : Vector4ui32() {
    *this = ::std::move(from);
  }

  inline Vector4ui32& operator=(const Vector4ui32& from) {
    CopyFrom(from);
    return *this;
  }
  inline Vector4ui32& operator=(Vector4ui32&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Vector4ui32& default_instance() {
    return *internal_default_instance();
  }
  static inline const Vector4ui32* internal_default_instance() {
    return reinterpret_cast<const Vector4ui32*>(
               &_Vector4ui32_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    13;

  friend void swap(Vector4ui32& a, Vector4ui32& b) {
    a.Swap(&b);
  }
  inline void Swap(Vector4ui32* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Vector4ui32* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Vector4ui32* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<Vector4ui32>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const Vector4ui32& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const Vector4ui32& from) {
    Vector4ui32::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Vector4ui32* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "dtproto.geometry_msgs.Vector4ui32";
  }
  protected:
  explicit Vector4ui32(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kA1FieldNumber = 1,
    kA2FieldNumber = 2,
    kA3FieldNumber = 3,
    kA4FieldNumber = 4,
  };
  // uint32 a1 = 1;
  void clear_a1();
  uint32_t a1() const;
  void set_a1(uint32_t value);
  private:
  uint32_t _internal_a1() const;
  void _internal_set_a1(uint32_t value);
  public:

  // uint32 a2 = 2;
  void clear_a2();
  uint32_t a2() const;
  void set_a2(uint32_t value);
  private:
  uint32_t _internal_a2() const;
  void _internal_set_a2(uint32_t value);
  public:

  // uint32 a3 = 3;
  void clear_a3();
  uint32_t a3() const;
  void set_a3(uint32_t value);
  private:
  uint32_t _internal_a3() const;
  void _internal_set_a3(uint32_t value);
  public:

  // uint32 a4 = 4;
  void clear_a4();
  uint32_t a4() const;
  void set_a4(uint32_t value);
  private:
  uint32_t _internal_a4() const;
  void _internal_set_a4(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:dtproto.geometry_msgs.Vector4ui32)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    uint32_t a1_;
    uint32_t a2_;
    uint32_t a3_;
    uint32_t a4_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_dtProto_2fgeometry_5fmsgs_2fVector_2eproto;
};
// -------------------------------------------------------------------

class Vector6ui32 final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:dtproto.geometry_msgs.Vector6ui32) */ {
 public:
  inline Vector6ui32() : Vector6ui32(nullptr) {}
  ~Vector6ui32() override;
  explicit PROTOBUF_CONSTEXPR Vector6ui32(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  Vector6ui32(const Vector6ui32& from);
  Vector6ui32(Vector6ui32&& from) noexcept
    : Vector6ui32() {
    *this = ::std::move(from);
  }

  inline Vector6ui32& operator=(const Vector6ui32& from) {
    CopyFrom(from);
    return *this;
  }
  inline Vector6ui32& operator=(Vector6ui32&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Vector6ui32& default_instance() {
    return *internal_default_instance();
  }
  static inline const Vector6ui32* internal_default_instance() {
    return reinterpret_cast<const Vector6ui32*>(
               &_Vector6ui32_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    14;

  friend void swap(Vector6ui32& a, Vector6ui32& b) {
    a.Swap(&b);
  }
  inline void Swap(Vector6ui32* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Vector6ui32* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Vector6ui32* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<Vector6ui32>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const Vector6ui32& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const Vector6ui32& from) {
    Vector6ui32::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Vector6ui32* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "dtproto.geometry_msgs.Vector6ui32";
  }
  protected:
  explicit Vector6ui32(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kA1FieldNumber = 1,
    kA2FieldNumber = 2,
    kA3FieldNumber = 3,
    kA4FieldNumber = 4,
    kA5FieldNumber = 5,
    kA6FieldNumber = 6,
  };
  // uint32 a1 = 1;
  void clear_a1();
  uint32_t a1() const;
  void set_a1(uint32_t value);
  private:
  uint32_t _internal_a1() const;
  void _internal_set_a1(uint32_t value);
  public:

  // uint32 a2 = 2;
  void clear_a2();
  uint32_t a2() const;
  void set_a2(uint32_t value);
  private:
  uint32_t _internal_a2() const;
  void _internal_set_a2(uint32_t value);
  public:

  // uint32 a3 = 3;
  void clear_a3();
  uint32_t a3() const;
  void set_a3(uint32_t value);
  private:
  uint32_t _internal_a3() const;
  void _internal_set_a3(uint32_t value);
  public:

  // uint32 a4 = 4;
  void clear_a4();
  uint32_t a4() const;
  void set_a4(uint32_t value);
  private:
  uint32_t _internal_a4() const;
  void _internal_set_a4(uint32_t value);
  public:

  // uint32 a5 = 5;
  void clear_a5();
  uint32_t a5() const;
  void set_a5(uint32_t value);
  private:
  uint32_t _internal_a5() const;
  void _internal_set_a5(uint32_t value);
  public:

  // uint32 a6 = 6;
  void clear_a6();
  uint32_t a6() const;
  void set_a6(uint32_t value);
  private:
  uint32_t _internal_a6() const;
  void _internal_set_a6(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:dtproto.geometry_msgs.Vector6ui32)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    uint32_t a1_;
    uint32_t a2_;
    uint32_t a3_;
    uint32_t a4_;
    uint32_t a5_;
    uint32_t a6_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_dtProto_2fgeometry_5fmsgs_2fVector_2eproto;
};
// -------------------------------------------------------------------

class VectorXi32 final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:dtproto.geometry_msgs.VectorXi32) */ {
 public:
  inline VectorXi32() : VectorXi32(nullptr) {}
  ~VectorXi32() override;
  explicit PROTOBUF_CONSTEXPR VectorXi32(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  VectorXi32(const VectorXi32& from);
  VectorXi32(VectorXi32&& from) noexcept
    : VectorXi32() {
    *this = ::std::move(from);
  }

  inline VectorXi32& operator=(const VectorXi32& from) {
    CopyFrom(from);
    return *this;
  }
  inline VectorXi32& operator=(VectorXi32&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const VectorXi32& default_instance() {
    return *internal_default_instance();
  }
  static inline const VectorXi32* internal_default_instance() {
    return reinterpret_cast<const VectorXi32*>(
               &_VectorXi32_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    15;

  friend void swap(VectorXi32& a, VectorXi32& b) {
    a.Swap(&b);
  }
  inline void Swap(VectorXi32* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(VectorXi32* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  VectorXi32* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<VectorXi32>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const VectorXi32& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const VectorXi32& from) {
    VectorXi32::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(VectorXi32* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "dtproto.geometry_msgs.VectorXi32";
  }
  protected:
  explicit VectorXi32(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kValFieldNumber = 1,
  };
  // repeated int32 val = 1;
  int val_size() const;
  private:
  int _internal_val_size() const;
  public:
  void clear_val();
  private:
  int32_t _internal_val(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >&
      _internal_val() const;
  void _internal_add_val(int32_t value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >*
      _internal_mutable_val();
  public:
  int32_t val(int index) const;
  void set_val(int index, int32_t value);
  void add_val(int32_t value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >&
      val() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >*
      mutable_val();

  // @@protoc_insertion_point(class_scope:dtproto.geometry_msgs.VectorXi32)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t > val_;
    mutable std::atomic<int> _val_cached_byte_size_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_dtProto_2fgeometry_5fmsgs_2fVector_2eproto;
};
// -------------------------------------------------------------------

class Vector2i32 final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:dtproto.geometry_msgs.Vector2i32) */ {
 public:
  inline Vector2i32() : Vector2i32(nullptr) {}
  ~Vector2i32() override;
  explicit PROTOBUF_CONSTEXPR Vector2i32(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  Vector2i32(const Vector2i32& from);
  Vector2i32(Vector2i32&& from) noexcept
    : Vector2i32() {
    *this = ::std::move(from);
  }

  inline Vector2i32& operator=(const Vector2i32& from) {
    CopyFrom(from);
    return *this;
  }
  inline Vector2i32& operator=(Vector2i32&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Vector2i32& default_instance() {
    return *internal_default_instance();
  }
  static inline const Vector2i32* internal_default_instance() {
    return reinterpret_cast<const Vector2i32*>(
               &_Vector2i32_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    16;

  friend void swap(Vector2i32& a, Vector2i32& b) {
    a.Swap(&b);
  }
  inline void Swap(Vector2i32* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Vector2i32* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Vector2i32* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<Vector2i32>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const Vector2i32& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const Vector2i32& from) {
    Vector2i32::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Vector2i32* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "dtproto.geometry_msgs.Vector2i32";
  }
  protected:
  explicit Vector2i32(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kA1FieldNumber = 1,
    kA2FieldNumber = 2,
  };
  // int32 a1 = 1;
  void clear_a1();
  int32_t a1() const;
  void set_a1(int32_t value);
  private:
  int32_t _internal_a1() const;
  void _internal_set_a1(int32_t value);
  public:

  // int32 a2 = 2;
  void clear_a2();
  int32_t a2() const;
  void set_a2(int32_t value);
  private:
  int32_t _internal_a2() const;
  void _internal_set_a2(int32_t value);
  public:

  // @@protoc_insertion_point(class_scope:dtproto.geometry_msgs.Vector2i32)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    int32_t a1_;
    int32_t a2_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_dtProto_2fgeometry_5fmsgs_2fVector_2eproto;
};
// -------------------------------------------------------------------

class Vector3i32 final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:dtproto.geometry_msgs.Vector3i32) */ {
 public:
  inline Vector3i32() : Vector3i32(nullptr) {}
  ~Vector3i32() override;
  explicit PROTOBUF_CONSTEXPR Vector3i32(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  Vector3i32(const Vector3i32& from);
  Vector3i32(Vector3i32&& from) noexcept
    : Vector3i32() {
    *this = ::std::move(from);
  }

  inline Vector3i32& operator=(const Vector3i32& from) {
    CopyFrom(from);
    return *this;
  }
  inline Vector3i32& operator=(Vector3i32&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Vector3i32& default_instance() {
    return *internal_default_instance();
  }
  static inline const Vector3i32* internal_default_instance() {
    return reinterpret_cast<const Vector3i32*>(
               &_Vector3i32_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    17;

  friend void swap(Vector3i32& a, Vector3i32& b) {
    a.Swap(&b);
  }
  inline void Swap(Vector3i32* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Vector3i32* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Vector3i32* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<Vector3i32>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const Vector3i32& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const Vector3i32& from) {
    Vector3i32::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Vector3i32* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "dtproto.geometry_msgs.Vector3i32";
  }
  protected:
  explicit Vector3i32(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kA1FieldNumber = 1,
    kA2FieldNumber = 2,
    kA3FieldNumber = 3,
  };
  // int32 a1 = 1;
  void clear_a1();
  int32_t a1() const;
  void set_a1(int32_t value);
  private:
  int32_t _internal_a1() const;
  void _internal_set_a1(int32_t value);
  public:

  // int32 a2 = 2;
  void clear_a2();
  int32_t a2() const;
  void set_a2(int32_t value);
  private:
  int32_t _internal_a2() const;
  void _internal_set_a2(int32_t value);
  public:

  // int32 a3 = 3;
  void clear_a3();
  int32_t a3() const;
  void set_a3(int32_t value);
  private:
  int32_t _internal_a3() const;
  void _internal_set_a3(int32_t value);
  public:

  // @@protoc_insertion_point(class_scope:dtproto.geometry_msgs.Vector3i32)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    int32_t a1_;
    int32_t a2_;
    int32_t a3_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_dtProto_2fgeometry_5fmsgs_2fVector_2eproto;
};
// -------------------------------------------------------------------

class Vector4i32 final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:dtproto.geometry_msgs.Vector4i32) */ {
 public:
  inline Vector4i32() : Vector4i32(nullptr) {}
  ~Vector4i32() override;
  explicit PROTOBUF_CONSTEXPR Vector4i32(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  Vector4i32(const Vector4i32& from);
  Vector4i32(Vector4i32&& from) noexcept
    : Vector4i32() {
    *this = ::std::move(from);
  }

  inline Vector4i32& operator=(const Vector4i32& from) {
    CopyFrom(from);
    return *this;
  }
  inline Vector4i32& operator=(Vector4i32&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Vector4i32& default_instance() {
    return *internal_default_instance();
  }
  static inline const Vector4i32* internal_default_instance() {
    return reinterpret_cast<const Vector4i32*>(
               &_Vector4i32_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    18;

  friend void swap(Vector4i32& a, Vector4i32& b) {
    a.Swap(&b);
  }
  inline void Swap(Vector4i32* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Vector4i32* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Vector4i32* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<Vector4i32>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const Vector4i32& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const Vector4i32& from) {
    Vector4i32::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Vector4i32* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "dtproto.geometry_msgs.Vector4i32";
  }
  protected:
  explicit Vector4i32(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kA1FieldNumber = 1,
    kA2FieldNumber = 2,
    kA3FieldNumber = 3,
    kA4FieldNumber = 4,
  };
  // int32 a1 = 1;
  void clear_a1();
  int32_t a1() const;
  void set_a1(int32_t value);
  private:
  int32_t _internal_a1() const;
  void _internal_set_a1(int32_t value);
  public:

  // int32 a2 = 2;
  void clear_a2();
  int32_t a2() const;
  void set_a2(int32_t value);
  private:
  int32_t _internal_a2() const;
  void _internal_set_a2(int32_t value);
  public:

  // int32 a3 = 3;
  void clear_a3();
  int32_t a3() const;
  void set_a3(int32_t value);
  private:
  int32_t _internal_a3() const;
  void _internal_set_a3(int32_t value);
  public:

  // int32 a4 = 4;
  void clear_a4();
  int32_t a4() const;
  void set_a4(int32_t value);
  private:
  int32_t _internal_a4() const;
  void _internal_set_a4(int32_t value);
  public:

  // @@protoc_insertion_point(class_scope:dtproto.geometry_msgs.Vector4i32)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    int32_t a1_;
    int32_t a2_;
    int32_t a3_;
    int32_t a4_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_dtProto_2fgeometry_5fmsgs_2fVector_2eproto;
};
// -------------------------------------------------------------------

class Vector6i32 final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:dtproto.geometry_msgs.Vector6i32) */ {
 public:
  inline Vector6i32() : Vector6i32(nullptr) {}
  ~Vector6i32() override;
  explicit PROTOBUF_CONSTEXPR Vector6i32(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  Vector6i32(const Vector6i32& from);
  Vector6i32(Vector6i32&& from) noexcept
    : Vector6i32() {
    *this = ::std::move(from);
  }

  inline Vector6i32& operator=(const Vector6i32& from) {
    CopyFrom(from);
    return *this;
  }
  inline Vector6i32& operator=(Vector6i32&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Vector6i32& default_instance() {
    return *internal_default_instance();
  }
  static inline const Vector6i32* internal_default_instance() {
    return reinterpret_cast<const Vector6i32*>(
               &_Vector6i32_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    19;

  friend void swap(Vector6i32& a, Vector6i32& b) {
    a.Swap(&b);
  }
  inline void Swap(Vector6i32* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Vector6i32* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Vector6i32* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<Vector6i32>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const Vector6i32& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const Vector6i32& from) {
    Vector6i32::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Vector6i32* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "dtproto.geometry_msgs.Vector6i32";
  }
  protected:
  explicit Vector6i32(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kA1FieldNumber = 1,
    kA2FieldNumber = 2,
    kA3FieldNumber = 3,
    kA4FieldNumber = 4,
    kA5FieldNumber = 5,
    kA6FieldNumber = 6,
  };
  // int32 a1 = 1;
  void clear_a1();
  int32_t a1() const;
  void set_a1(int32_t value);
  private:
  int32_t _internal_a1() const;
  void _internal_set_a1(int32_t value);
  public:

  // int32 a2 = 2;
  void clear_a2();
  int32_t a2() const;
  void set_a2(int32_t value);
  private:
  int32_t _internal_a2() const;
  void _internal_set_a2(int32_t value);
  public:

  // int32 a3 = 3;
  void clear_a3();
  int32_t a3() const;
  void set_a3(int32_t value);
  private:
  int32_t _internal_a3() const;
  void _internal_set_a3(int32_t value);
  public:

  // int32 a4 = 4;
  void clear_a4();
  int32_t a4() const;
  void set_a4(int32_t value);
  private:
  int32_t _internal_a4() const;
  void _internal_set_a4(int32_t value);
  public:

  // int32 a5 = 5;
  void clear_a5();
  int32_t a5() const;
  void set_a5(int32_t value);
  private:
  int32_t _internal_a5() const;
  void _internal_set_a5(int32_t value);
  public:

  // int32 a6 = 6;
  void clear_a6();
  int32_t a6() const;
  void set_a6(int32_t value);
  private:
  int32_t _internal_a6() const;
  void _internal_set_a6(int32_t value);
  public:

  // @@protoc_insertion_point(class_scope:dtproto.geometry_msgs.Vector6i32)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    int32_t a1_;
    int32_t a2_;
    int32_t a3_;
    int32_t a4_;
    int32_t a5_;
    int32_t a6_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_dtProto_2fgeometry_5fmsgs_2fVector_2eproto;
};
// -------------------------------------------------------------------

class VectorXb final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:dtproto.geometry_msgs.VectorXb) */ {
 public:
  inline VectorXb() : VectorXb(nullptr) {}
  ~VectorXb() override;
  explicit PROTOBUF_CONSTEXPR VectorXb(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  VectorXb(const VectorXb& from);
  VectorXb(VectorXb&& from) noexcept
    : VectorXb() {
    *this = ::std::move(from);
  }

  inline VectorXb& operator=(const VectorXb& from) {
    CopyFrom(from);
    return *this;
  }
  inline VectorXb& operator=(VectorXb&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const VectorXb& default_instance() {
    return *internal_default_instance();
  }
  static inline const VectorXb* internal_default_instance() {
    return reinterpret_cast<const VectorXb*>(
               &_VectorXb_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    20;

  friend void swap(VectorXb& a, VectorXb& b) {
    a.Swap(&b);
  }
  inline void Swap(VectorXb* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(VectorXb* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  VectorXb* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<VectorXb>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const VectorXb& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const VectorXb& from) {
    VectorXb::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(VectorXb* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "dtproto.geometry_msgs.VectorXb";
  }
  protected:
  explicit VectorXb(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kValFieldNumber = 1,
  };
  // repeated bool val = 1;
  int val_size() const;
  private:
  int _internal_val_size() const;
  public:
  void clear_val();
  private:
  bool _internal_val(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< bool >&
      _internal_val() const;
  void _internal_add_val(bool value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< bool >*
      _internal_mutable_val();
  public:
  bool val(int index) const;
  void set_val(int index, bool value);
  void add_val(bool value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< bool >&
      val() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< bool >*
      mutable_val();

  // @@protoc_insertion_point(class_scope:dtproto.geometry_msgs.VectorXb)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::RepeatedField< bool > val_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_dtProto_2fgeometry_5fmsgs_2fVector_2eproto;
};
// -------------------------------------------------------------------

class Vector2b final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:dtproto.geometry_msgs.Vector2b) */ {
 public:
  inline Vector2b() : Vector2b(nullptr) {}
  ~Vector2b() override;
  explicit PROTOBUF_CONSTEXPR Vector2b(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  Vector2b(const Vector2b& from);
  Vector2b(Vector2b&& from) noexcept
    : Vector2b() {
    *this = ::std::move(from);
  }

  inline Vector2b& operator=(const Vector2b& from) {
    CopyFrom(from);
    return *this;
  }
  inline Vector2b& operator=(Vector2b&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Vector2b& default_instance() {
    return *internal_default_instance();
  }
  static inline const Vector2b* internal_default_instance() {
    return reinterpret_cast<const Vector2b*>(
               &_Vector2b_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    21;

  friend void swap(Vector2b& a, Vector2b& b) {
    a.Swap(&b);
  }
  inline void Swap(Vector2b* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Vector2b* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Vector2b* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<Vector2b>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const Vector2b& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const Vector2b& from) {
    Vector2b::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Vector2b* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "dtproto.geometry_msgs.Vector2b";
  }
  protected:
  explicit Vector2b(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kA1FieldNumber = 1,
    kA2FieldNumber = 2,
  };
  // bool a1 = 1;
  void clear_a1();
  bool a1() const;
  void set_a1(bool value);
  private:
  bool _internal_a1() const;
  void _internal_set_a1(bool value);
  public:

  // bool a2 = 2;
  void clear_a2();
  bool a2() const;
  void set_a2(bool value);
  private:
  bool _internal_a2() const;
  void _internal_set_a2(bool value);
  public:

  // @@protoc_insertion_point(class_scope:dtproto.geometry_msgs.Vector2b)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    bool a1_;
    bool a2_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_dtProto_2fgeometry_5fmsgs_2fVector_2eproto;
};
// -------------------------------------------------------------------

class Vector3b final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:dtproto.geometry_msgs.Vector3b) */ {
 public:
  inline Vector3b() : Vector3b(nullptr) {}
  ~Vector3b() override;
  explicit PROTOBUF_CONSTEXPR Vector3b(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  Vector3b(const Vector3b& from);
  Vector3b(Vector3b&& from) noexcept
    : Vector3b() {
    *this = ::std::move(from);
  }

  inline Vector3b& operator=(const Vector3b& from) {
    CopyFrom(from);
    return *this;
  }
  inline Vector3b& operator=(Vector3b&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Vector3b& default_instance() {
    return *internal_default_instance();
  }
  static inline const Vector3b* internal_default_instance() {
    return reinterpret_cast<const Vector3b*>(
               &_Vector3b_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    22;

  friend void swap(Vector3b& a, Vector3b& b) {
    a.Swap(&b);
  }
  inline void Swap(Vector3b* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Vector3b* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Vector3b* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<Vector3b>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const Vector3b& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const Vector3b& from) {
    Vector3b::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Vector3b* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "dtproto.geometry_msgs.Vector3b";
  }
  protected:
  explicit Vector3b(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kA1FieldNumber = 1,
    kA2FieldNumber = 2,
    kA3FieldNumber = 3,
  };
  // bool a1 = 1;
  void clear_a1();
  bool a1() const;
  void set_a1(bool value);
  private:
  bool _internal_a1() const;
  void _internal_set_a1(bool value);
  public:

  // bool a2 = 2;
  void clear_a2();
  bool a2() const;
  void set_a2(bool value);
  private:
  bool _internal_a2() const;
  void _internal_set_a2(bool value);
  public:

  // bool a3 = 3;
  void clear_a3();
  bool a3() const;
  void set_a3(bool value);
  private:
  bool _internal_a3() const;
  void _internal_set_a3(bool value);
  public:

  // @@protoc_insertion_point(class_scope:dtproto.geometry_msgs.Vector3b)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    bool a1_;
    bool a2_;
    bool a3_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_dtProto_2fgeometry_5fmsgs_2fVector_2eproto;
};
// -------------------------------------------------------------------

class Vector4b final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:dtproto.geometry_msgs.Vector4b) */ {
 public:
  inline Vector4b() : Vector4b(nullptr) {}
  ~Vector4b() override;
  explicit PROTOBUF_CONSTEXPR Vector4b(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  Vector4b(const Vector4b& from);
  Vector4b(Vector4b&& from) noexcept
    : Vector4b() {
    *this = ::std::move(from);
  }

  inline Vector4b& operator=(const Vector4b& from) {
    CopyFrom(from);
    return *this;
  }
  inline Vector4b& operator=(Vector4b&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Vector4b& default_instance() {
    return *internal_default_instance();
  }
  static inline const Vector4b* internal_default_instance() {
    return reinterpret_cast<const Vector4b*>(
               &_Vector4b_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    23;

  friend void swap(Vector4b& a, Vector4b& b) {
    a.Swap(&b);
  }
  inline void Swap(Vector4b* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Vector4b* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Vector4b* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<Vector4b>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const Vector4b& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const Vector4b& from) {
    Vector4b::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Vector4b* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "dtproto.geometry_msgs.Vector4b";
  }
  protected:
  explicit Vector4b(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kA1FieldNumber = 1,
    kA2FieldNumber = 2,
    kA3FieldNumber = 3,
    kA4FieldNumber = 4,
  };
  // bool a1 = 1;
  void clear_a1();
  bool a1() const;
  void set_a1(bool value);
  private:
  bool _internal_a1() const;
  void _internal_set_a1(bool value);
  public:

  // bool a2 = 2;
  void clear_a2();
  bool a2() const;
  void set_a2(bool value);
  private:
  bool _internal_a2() const;
  void _internal_set_a2(bool value);
  public:

  // bool a3 = 3;
  void clear_a3();
  bool a3() const;
  void set_a3(bool value);
  private:
  bool _internal_a3() const;
  void _internal_set_a3(bool value);
  public:

  // bool a4 = 4;
  void clear_a4();
  bool a4() const;
  void set_a4(bool value);
  private:
  bool _internal_a4() const;
  void _internal_set_a4(bool value);
  public:

  // @@protoc_insertion_point(class_scope:dtproto.geometry_msgs.Vector4b)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    bool a1_;
    bool a2_;
    bool a3_;
    bool a4_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_dtProto_2fgeometry_5fmsgs_2fVector_2eproto;
};
// -------------------------------------------------------------------

class Vector6b final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:dtproto.geometry_msgs.Vector6b) */ {
 public:
  inline Vector6b() : Vector6b(nullptr) {}
  ~Vector6b() override;
  explicit PROTOBUF_CONSTEXPR Vector6b(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  Vector6b(const Vector6b& from);
  Vector6b(Vector6b&& from) noexcept
    : Vector6b() {
    *this = ::std::move(from);
  }

  inline Vector6b& operator=(const Vector6b& from) {
    CopyFrom(from);
    return *this;
  }
  inline Vector6b& operator=(Vector6b&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Vector6b& default_instance() {
    return *internal_default_instance();
  }
  static inline const Vector6b* internal_default_instance() {
    return reinterpret_cast<const Vector6b*>(
               &_Vector6b_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    24;

  friend void swap(Vector6b& a, Vector6b& b) {
    a.Swap(&b);
  }
  inline void Swap(Vector6b* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Vector6b* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Vector6b* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<Vector6b>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const Vector6b& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const Vector6b& from) {
    Vector6b::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Vector6b* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "dtproto.geometry_msgs.Vector6b";
  }
  protected:
  explicit Vector6b(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kA1FieldNumber = 1,
    kA2FieldNumber = 2,
    kA3FieldNumber = 3,
    kA4FieldNumber = 4,
    kA5FieldNumber = 5,
    kA6FieldNumber = 6,
  };
  // bool a1 = 1;
  void clear_a1();
  bool a1() const;
  void set_a1(bool value);
  private:
  bool _internal_a1() const;
  void _internal_set_a1(bool value);
  public:

  // bool a2 = 2;
  void clear_a2();
  bool a2() const;
  void set_a2(bool value);
  private:
  bool _internal_a2() const;
  void _internal_set_a2(bool value);
  public:

  // bool a3 = 3;
  void clear_a3();
  bool a3() const;
  void set_a3(bool value);
  private:
  bool _internal_a3() const;
  void _internal_set_a3(bool value);
  public:

  // bool a4 = 4;
  void clear_a4();
  bool a4() const;
  void set_a4(bool value);
  private:
  bool _internal_a4() const;
  void _internal_set_a4(bool value);
  public:

  // bool a5 = 5;
  void clear_a5();
  bool a5() const;
  void set_a5(bool value);
  private:
  bool _internal_a5() const;
  void _internal_set_a5(bool value);
  public:

  // bool a6 = 6;
  void clear_a6();
  bool a6() const;
  void set_a6(bool value);
  private:
  bool _internal_a6() const;
  void _internal_set_a6(bool value);
  public:

  // @@protoc_insertion_point(class_scope:dtproto.geometry_msgs.Vector6b)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    bool a1_;
    bool a2_;
    bool a3_;
    bool a4_;
    bool a5_;
    bool a6_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_dtProto_2fgeometry_5fmsgs_2fVector_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// VectorXd

// repeated double val = 1;
inline int VectorXd::_internal_val_size() const {
  return _impl_.val_.size();
}
inline int VectorXd::val_size() const {
  return _internal_val_size();
}
inline void VectorXd::clear_val() {
  _impl_.val_.Clear();
}
inline double VectorXd::_internal_val(int index) const {
  return _impl_.val_.Get(index);
}
inline double VectorXd::val(int index) const {
  // @@protoc_insertion_point(field_get:dtproto.geometry_msgs.VectorXd.val)
  return _internal_val(index);
}
inline void VectorXd::set_val(int index, double value) {
  _impl_.val_.Set(index, value);
  // @@protoc_insertion_point(field_set:dtproto.geometry_msgs.VectorXd.val)
}
inline void VectorXd::_internal_add_val(double value) {
  _impl_.val_.Add(value);
}
inline void VectorXd::add_val(double value) {
  _internal_add_val(value);
  // @@protoc_insertion_point(field_add:dtproto.geometry_msgs.VectorXd.val)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >&
VectorXd::_internal_val() const {
  return _impl_.val_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >&
VectorXd::val() const {
  // @@protoc_insertion_point(field_list:dtproto.geometry_msgs.VectorXd.val)
  return _internal_val();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >*
VectorXd::_internal_mutable_val() {
  return &_impl_.val_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >*
VectorXd::mutable_val() {
  // @@protoc_insertion_point(field_mutable_list:dtproto.geometry_msgs.VectorXd.val)
  return _internal_mutable_val();
}

// -------------------------------------------------------------------

// Vector2d

// double a1 = 1;
inline void Vector2d::clear_a1() {
  _impl_.a1_ = 0;
}
inline double Vector2d::_internal_a1() const {
  return _impl_.a1_;
}
inline double Vector2d::a1() const {
  // @@protoc_insertion_point(field_get:dtproto.geometry_msgs.Vector2d.a1)
  return _internal_a1();
}
inline void Vector2d::_internal_set_a1(double value) {
  
  _impl_.a1_ = value;
}
inline void Vector2d::set_a1(double value) {
  _internal_set_a1(value);
  // @@protoc_insertion_point(field_set:dtproto.geometry_msgs.Vector2d.a1)
}

// double a2 = 2;
inline void Vector2d::clear_a2() {
  _impl_.a2_ = 0;
}
inline double Vector2d::_internal_a2() const {
  return _impl_.a2_;
}
inline double Vector2d::a2() const {
  // @@protoc_insertion_point(field_get:dtproto.geometry_msgs.Vector2d.a2)
  return _internal_a2();
}
inline void Vector2d::_internal_set_a2(double value) {
  
  _impl_.a2_ = value;
}
inline void Vector2d::set_a2(double value) {
  _internal_set_a2(value);
  // @@protoc_insertion_point(field_set:dtproto.geometry_msgs.Vector2d.a2)
}

// -------------------------------------------------------------------

// Vector3d

// double a1 = 1;
inline void Vector3d::clear_a1() {
  _impl_.a1_ = 0;
}
inline double Vector3d::_internal_a1() const {
  return _impl_.a1_;
}
inline double Vector3d::a1() const {
  // @@protoc_insertion_point(field_get:dtproto.geometry_msgs.Vector3d.a1)
  return _internal_a1();
}
inline void Vector3d::_internal_set_a1(double value) {
  
  _impl_.a1_ = value;
}
inline void Vector3d::set_a1(double value) {
  _internal_set_a1(value);
  // @@protoc_insertion_point(field_set:dtproto.geometry_msgs.Vector3d.a1)
}

// double a2 = 2;
inline void Vector3d::clear_a2() {
  _impl_.a2_ = 0;
}
inline double Vector3d::_internal_a2() const {
  return _impl_.a2_;
}
inline double Vector3d::a2() const {
  // @@protoc_insertion_point(field_get:dtproto.geometry_msgs.Vector3d.a2)
  return _internal_a2();
}
inline void Vector3d::_internal_set_a2(double value) {
  
  _impl_.a2_ = value;
}
inline void Vector3d::set_a2(double value) {
  _internal_set_a2(value);
  // @@protoc_insertion_point(field_set:dtproto.geometry_msgs.Vector3d.a2)
}

// double a3 = 3;
inline void Vector3d::clear_a3() {
  _impl_.a3_ = 0;
}
inline double Vector3d::_internal_a3() const {
  return _impl_.a3_;
}
inline double Vector3d::a3() const {
  // @@protoc_insertion_point(field_get:dtproto.geometry_msgs.Vector3d.a3)
  return _internal_a3();
}
inline void Vector3d::_internal_set_a3(double value) {
  
  _impl_.a3_ = value;
}
inline void Vector3d::set_a3(double value) {
  _internal_set_a3(value);
  // @@protoc_insertion_point(field_set:dtproto.geometry_msgs.Vector3d.a3)
}

// -------------------------------------------------------------------

// Vector4d

// double a1 = 1;
inline void Vector4d::clear_a1() {
  _impl_.a1_ = 0;
}
inline double Vector4d::_internal_a1() const {
  return _impl_.a1_;
}
inline double Vector4d::a1() const {
  // @@protoc_insertion_point(field_get:dtproto.geometry_msgs.Vector4d.a1)
  return _internal_a1();
}
inline void Vector4d::_internal_set_a1(double value) {
  
  _impl_.a1_ = value;
}
inline void Vector4d::set_a1(double value) {
  _internal_set_a1(value);
  // @@protoc_insertion_point(field_set:dtproto.geometry_msgs.Vector4d.a1)
}

// double a2 = 2;
inline void Vector4d::clear_a2() {
  _impl_.a2_ = 0;
}
inline double Vector4d::_internal_a2() const {
  return _impl_.a2_;
}
inline double Vector4d::a2() const {
  // @@protoc_insertion_point(field_get:dtproto.geometry_msgs.Vector4d.a2)
  return _internal_a2();
}
inline void Vector4d::_internal_set_a2(double value) {
  
  _impl_.a2_ = value;
}
inline void Vector4d::set_a2(double value) {
  _internal_set_a2(value);
  // @@protoc_insertion_point(field_set:dtproto.geometry_msgs.Vector4d.a2)
}

// double a3 = 3;
inline void Vector4d::clear_a3() {
  _impl_.a3_ = 0;
}
inline double Vector4d::_internal_a3() const {
  return _impl_.a3_;
}
inline double Vector4d::a3() const {
  // @@protoc_insertion_point(field_get:dtproto.geometry_msgs.Vector4d.a3)
  return _internal_a3();
}
inline void Vector4d::_internal_set_a3(double value) {
  
  _impl_.a3_ = value;
}
inline void Vector4d::set_a3(double value) {
  _internal_set_a3(value);
  // @@protoc_insertion_point(field_set:dtproto.geometry_msgs.Vector4d.a3)
}

// double a4 = 4;
inline void Vector4d::clear_a4() {
  _impl_.a4_ = 0;
}
inline double Vector4d::_internal_a4() const {
  return _impl_.a4_;
}
inline double Vector4d::a4() const {
  // @@protoc_insertion_point(field_get:dtproto.geometry_msgs.Vector4d.a4)
  return _internal_a4();
}
inline void Vector4d::_internal_set_a4(double value) {
  
  _impl_.a4_ = value;
}
inline void Vector4d::set_a4(double value) {
  _internal_set_a4(value);
  // @@protoc_insertion_point(field_set:dtproto.geometry_msgs.Vector4d.a4)
}

// -------------------------------------------------------------------

// Vector6d

// double a1 = 1;
inline void Vector6d::clear_a1() {
  _impl_.a1_ = 0;
}
inline double Vector6d::_internal_a1() const {
  return _impl_.a1_;
}
inline double Vector6d::a1() const {
  // @@protoc_insertion_point(field_get:dtproto.geometry_msgs.Vector6d.a1)
  return _internal_a1();
}
inline void Vector6d::_internal_set_a1(double value) {
  
  _impl_.a1_ = value;
}
inline void Vector6d::set_a1(double value) {
  _internal_set_a1(value);
  // @@protoc_insertion_point(field_set:dtproto.geometry_msgs.Vector6d.a1)
}

// double a2 = 2;
inline void Vector6d::clear_a2() {
  _impl_.a2_ = 0;
}
inline double Vector6d::_internal_a2() const {
  return _impl_.a2_;
}
inline double Vector6d::a2() const {
  // @@protoc_insertion_point(field_get:dtproto.geometry_msgs.Vector6d.a2)
  return _internal_a2();
}
inline void Vector6d::_internal_set_a2(double value) {
  
  _impl_.a2_ = value;
}
inline void Vector6d::set_a2(double value) {
  _internal_set_a2(value);
  // @@protoc_insertion_point(field_set:dtproto.geometry_msgs.Vector6d.a2)
}

// double a3 = 3;
inline void Vector6d::clear_a3() {
  _impl_.a3_ = 0;
}
inline double Vector6d::_internal_a3() const {
  return _impl_.a3_;
}
inline double Vector6d::a3() const {
  // @@protoc_insertion_point(field_get:dtproto.geometry_msgs.Vector6d.a3)
  return _internal_a3();
}
inline void Vector6d::_internal_set_a3(double value) {
  
  _impl_.a3_ = value;
}
inline void Vector6d::set_a3(double value) {
  _internal_set_a3(value);
  // @@protoc_insertion_point(field_set:dtproto.geometry_msgs.Vector6d.a3)
}

// double a4 = 4;
inline void Vector6d::clear_a4() {
  _impl_.a4_ = 0;
}
inline double Vector6d::_internal_a4() const {
  return _impl_.a4_;
}
inline double Vector6d::a4() const {
  // @@protoc_insertion_point(field_get:dtproto.geometry_msgs.Vector6d.a4)
  return _internal_a4();
}
inline void Vector6d::_internal_set_a4(double value) {
  
  _impl_.a4_ = value;
}
inline void Vector6d::set_a4(double value) {
  _internal_set_a4(value);
  // @@protoc_insertion_point(field_set:dtproto.geometry_msgs.Vector6d.a4)
}

// double a5 = 5;
inline void Vector6d::clear_a5() {
  _impl_.a5_ = 0;
}
inline double Vector6d::_internal_a5() const {
  return _impl_.a5_;
}
inline double Vector6d::a5() const {
  // @@protoc_insertion_point(field_get:dtproto.geometry_msgs.Vector6d.a5)
  return _internal_a5();
}
inline void Vector6d::_internal_set_a5(double value) {
  
  _impl_.a5_ = value;
}
inline void Vector6d::set_a5(double value) {
  _internal_set_a5(value);
  // @@protoc_insertion_point(field_set:dtproto.geometry_msgs.Vector6d.a5)
}

// double a6 = 6;
inline void Vector6d::clear_a6() {
  _impl_.a6_ = 0;
}
inline double Vector6d::_internal_a6() const {
  return _impl_.a6_;
}
inline double Vector6d::a6() const {
  // @@protoc_insertion_point(field_get:dtproto.geometry_msgs.Vector6d.a6)
  return _internal_a6();
}
inline void Vector6d::_internal_set_a6(double value) {
  
  _impl_.a6_ = value;
}
inline void Vector6d::set_a6(double value) {
  _internal_set_a6(value);
  // @@protoc_insertion_point(field_set:dtproto.geometry_msgs.Vector6d.a6)
}

// -------------------------------------------------------------------

// VectorXf

// repeated float val = 1;
inline int VectorXf::_internal_val_size() const {
  return _impl_.val_.size();
}
inline int VectorXf::val_size() const {
  return _internal_val_size();
}
inline void VectorXf::clear_val() {
  _impl_.val_.Clear();
}
inline float VectorXf::_internal_val(int index) const {
  return _impl_.val_.Get(index);
}
inline float VectorXf::val(int index) const {
  // @@protoc_insertion_point(field_get:dtproto.geometry_msgs.VectorXf.val)
  return _internal_val(index);
}
inline void VectorXf::set_val(int index, float value) {
  _impl_.val_.Set(index, value);
  // @@protoc_insertion_point(field_set:dtproto.geometry_msgs.VectorXf.val)
}
inline void VectorXf::_internal_add_val(float value) {
  _impl_.val_.Add(value);
}
inline void VectorXf::add_val(float value) {
  _internal_add_val(value);
  // @@protoc_insertion_point(field_add:dtproto.geometry_msgs.VectorXf.val)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
VectorXf::_internal_val() const {
  return _impl_.val_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
VectorXf::val() const {
  // @@protoc_insertion_point(field_list:dtproto.geometry_msgs.VectorXf.val)
  return _internal_val();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
VectorXf::_internal_mutable_val() {
  return &_impl_.val_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
VectorXf::mutable_val() {
  // @@protoc_insertion_point(field_mutable_list:dtproto.geometry_msgs.VectorXf.val)
  return _internal_mutable_val();
}

// -------------------------------------------------------------------

// Vector2f

// float a1 = 1;
inline void Vector2f::clear_a1() {
  _impl_.a1_ = 0;
}
inline float Vector2f::_internal_a1() const {
  return _impl_.a1_;
}
inline float Vector2f::a1() const {
  // @@protoc_insertion_point(field_get:dtproto.geometry_msgs.Vector2f.a1)
  return _internal_a1();
}
inline void Vector2f::_internal_set_a1(float value) {
  
  _impl_.a1_ = value;
}
inline void Vector2f::set_a1(float value) {
  _internal_set_a1(value);
  // @@protoc_insertion_point(field_set:dtproto.geometry_msgs.Vector2f.a1)
}

// float a2 = 2;
inline void Vector2f::clear_a2() {
  _impl_.a2_ = 0;
}
inline float Vector2f::_internal_a2() const {
  return _impl_.a2_;
}
inline float Vector2f::a2() const {
  // @@protoc_insertion_point(field_get:dtproto.geometry_msgs.Vector2f.a2)
  return _internal_a2();
}
inline void Vector2f::_internal_set_a2(float value) {
  
  _impl_.a2_ = value;
}
inline void Vector2f::set_a2(float value) {
  _internal_set_a2(value);
  // @@protoc_insertion_point(field_set:dtproto.geometry_msgs.Vector2f.a2)
}

// -------------------------------------------------------------------

// Vector3f

// float a1 = 1;
inline void Vector3f::clear_a1() {
  _impl_.a1_ = 0;
}
inline float Vector3f::_internal_a1() const {
  return _impl_.a1_;
}
inline float Vector3f::a1() const {
  // @@protoc_insertion_point(field_get:dtproto.geometry_msgs.Vector3f.a1)
  return _internal_a1();
}
inline void Vector3f::_internal_set_a1(float value) {
  
  _impl_.a1_ = value;
}
inline void Vector3f::set_a1(float value) {
  _internal_set_a1(value);
  // @@protoc_insertion_point(field_set:dtproto.geometry_msgs.Vector3f.a1)
}

// float a2 = 2;
inline void Vector3f::clear_a2() {
  _impl_.a2_ = 0;
}
inline float Vector3f::_internal_a2() const {
  return _impl_.a2_;
}
inline float Vector3f::a2() const {
  // @@protoc_insertion_point(field_get:dtproto.geometry_msgs.Vector3f.a2)
  return _internal_a2();
}
inline void Vector3f::_internal_set_a2(float value) {
  
  _impl_.a2_ = value;
}
inline void Vector3f::set_a2(float value) {
  _internal_set_a2(value);
  // @@protoc_insertion_point(field_set:dtproto.geometry_msgs.Vector3f.a2)
}

// float a3 = 3;
inline void Vector3f::clear_a3() {
  _impl_.a3_ = 0;
}
inline float Vector3f::_internal_a3() const {
  return _impl_.a3_;
}
inline float Vector3f::a3() const {
  // @@protoc_insertion_point(field_get:dtproto.geometry_msgs.Vector3f.a3)
  return _internal_a3();
}
inline void Vector3f::_internal_set_a3(float value) {
  
  _impl_.a3_ = value;
}
inline void Vector3f::set_a3(float value) {
  _internal_set_a3(value);
  // @@protoc_insertion_point(field_set:dtproto.geometry_msgs.Vector3f.a3)
}

// -------------------------------------------------------------------

// Vector4f

// float a1 = 1;
inline void Vector4f::clear_a1() {
  _impl_.a1_ = 0;
}
inline float Vector4f::_internal_a1() const {
  return _impl_.a1_;
}
inline float Vector4f::a1() const {
  // @@protoc_insertion_point(field_get:dtproto.geometry_msgs.Vector4f.a1)
  return _internal_a1();
}
inline void Vector4f::_internal_set_a1(float value) {
  
  _impl_.a1_ = value;
}
inline void Vector4f::set_a1(float value) {
  _internal_set_a1(value);
  // @@protoc_insertion_point(field_set:dtproto.geometry_msgs.Vector4f.a1)
}

// float a2 = 2;
inline void Vector4f::clear_a2() {
  _impl_.a2_ = 0;
}
inline float Vector4f::_internal_a2() const {
  return _impl_.a2_;
}
inline float Vector4f::a2() const {
  // @@protoc_insertion_point(field_get:dtproto.geometry_msgs.Vector4f.a2)
  return _internal_a2();
}
inline void Vector4f::_internal_set_a2(float value) {
  
  _impl_.a2_ = value;
}
inline void Vector4f::set_a2(float value) {
  _internal_set_a2(value);
  // @@protoc_insertion_point(field_set:dtproto.geometry_msgs.Vector4f.a2)
}

// float a3 = 3;
inline void Vector4f::clear_a3() {
  _impl_.a3_ = 0;
}
inline float Vector4f::_internal_a3() const {
  return _impl_.a3_;
}
inline float Vector4f::a3() const {
  // @@protoc_insertion_point(field_get:dtproto.geometry_msgs.Vector4f.a3)
  return _internal_a3();
}
inline void Vector4f::_internal_set_a3(float value) {
  
  _impl_.a3_ = value;
}
inline void Vector4f::set_a3(float value) {
  _internal_set_a3(value);
  // @@protoc_insertion_point(field_set:dtproto.geometry_msgs.Vector4f.a3)
}

// float a4 = 4;
inline void Vector4f::clear_a4() {
  _impl_.a4_ = 0;
}
inline float Vector4f::_internal_a4() const {
  return _impl_.a4_;
}
inline float Vector4f::a4() const {
  // @@protoc_insertion_point(field_get:dtproto.geometry_msgs.Vector4f.a4)
  return _internal_a4();
}
inline void Vector4f::_internal_set_a4(float value) {
  
  _impl_.a4_ = value;
}
inline void Vector4f::set_a4(float value) {
  _internal_set_a4(value);
  // @@protoc_insertion_point(field_set:dtproto.geometry_msgs.Vector4f.a4)
}

// -------------------------------------------------------------------

// Vector6f

// float a1 = 1;
inline void Vector6f::clear_a1() {
  _impl_.a1_ = 0;
}
inline float Vector6f::_internal_a1() const {
  return _impl_.a1_;
}
inline float Vector6f::a1() const {
  // @@protoc_insertion_point(field_get:dtproto.geometry_msgs.Vector6f.a1)
  return _internal_a1();
}
inline void Vector6f::_internal_set_a1(float value) {
  
  _impl_.a1_ = value;
}
inline void Vector6f::set_a1(float value) {
  _internal_set_a1(value);
  // @@protoc_insertion_point(field_set:dtproto.geometry_msgs.Vector6f.a1)
}

// float a2 = 2;
inline void Vector6f::clear_a2() {
  _impl_.a2_ = 0;
}
inline float Vector6f::_internal_a2() const {
  return _impl_.a2_;
}
inline float Vector6f::a2() const {
  // @@protoc_insertion_point(field_get:dtproto.geometry_msgs.Vector6f.a2)
  return _internal_a2();
}
inline void Vector6f::_internal_set_a2(float value) {
  
  _impl_.a2_ = value;
}
inline void Vector6f::set_a2(float value) {
  _internal_set_a2(value);
  // @@protoc_insertion_point(field_set:dtproto.geometry_msgs.Vector6f.a2)
}

// float a3 = 3;
inline void Vector6f::clear_a3() {
  _impl_.a3_ = 0;
}
inline float Vector6f::_internal_a3() const {
  return _impl_.a3_;
}
inline float Vector6f::a3() const {
  // @@protoc_insertion_point(field_get:dtproto.geometry_msgs.Vector6f.a3)
  return _internal_a3();
}
inline void Vector6f::_internal_set_a3(float value) {
  
  _impl_.a3_ = value;
}
inline void Vector6f::set_a3(float value) {
  _internal_set_a3(value);
  // @@protoc_insertion_point(field_set:dtproto.geometry_msgs.Vector6f.a3)
}

// float a4 = 4;
inline void Vector6f::clear_a4() {
  _impl_.a4_ = 0;
}
inline float Vector6f::_internal_a4() const {
  return _impl_.a4_;
}
inline float Vector6f::a4() const {
  // @@protoc_insertion_point(field_get:dtproto.geometry_msgs.Vector6f.a4)
  return _internal_a4();
}
inline void Vector6f::_internal_set_a4(float value) {
  
  _impl_.a4_ = value;
}
inline void Vector6f::set_a4(float value) {
  _internal_set_a4(value);
  // @@protoc_insertion_point(field_set:dtproto.geometry_msgs.Vector6f.a4)
}

// float a5 = 5;
inline void Vector6f::clear_a5() {
  _impl_.a5_ = 0;
}
inline float Vector6f::_internal_a5() const {
  return _impl_.a5_;
}
inline float Vector6f::a5() const {
  // @@protoc_insertion_point(field_get:dtproto.geometry_msgs.Vector6f.a5)
  return _internal_a5();
}
inline void Vector6f::_internal_set_a5(float value) {
  
  _impl_.a5_ = value;
}
inline void Vector6f::set_a5(float value) {
  _internal_set_a5(value);
  // @@protoc_insertion_point(field_set:dtproto.geometry_msgs.Vector6f.a5)
}

// float a6 = 6;
inline void Vector6f::clear_a6() {
  _impl_.a6_ = 0;
}
inline float Vector6f::_internal_a6() const {
  return _impl_.a6_;
}
inline float Vector6f::a6() const {
  // @@protoc_insertion_point(field_get:dtproto.geometry_msgs.Vector6f.a6)
  return _internal_a6();
}
inline void Vector6f::_internal_set_a6(float value) {
  
  _impl_.a6_ = value;
}
inline void Vector6f::set_a6(float value) {
  _internal_set_a6(value);
  // @@protoc_insertion_point(field_set:dtproto.geometry_msgs.Vector6f.a6)
}

// -------------------------------------------------------------------

// VectorXui32

// repeated uint32 val = 1;
inline int VectorXui32::_internal_val_size() const {
  return _impl_.val_.size();
}
inline int VectorXui32::val_size() const {
  return _internal_val_size();
}
inline void VectorXui32::clear_val() {
  _impl_.val_.Clear();
}
inline uint32_t VectorXui32::_internal_val(int index) const {
  return _impl_.val_.Get(index);
}
inline uint32_t VectorXui32::val(int index) const {
  // @@protoc_insertion_point(field_get:dtproto.geometry_msgs.VectorXui32.val)
  return _internal_val(index);
}
inline void VectorXui32::set_val(int index, uint32_t value) {
  _impl_.val_.Set(index, value);
  // @@protoc_insertion_point(field_set:dtproto.geometry_msgs.VectorXui32.val)
}
inline void VectorXui32::_internal_add_val(uint32_t value) {
  _impl_.val_.Add(value);
}
inline void VectorXui32::add_val(uint32_t value) {
  _internal_add_val(value);
  // @@protoc_insertion_point(field_add:dtproto.geometry_msgs.VectorXui32.val)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
VectorXui32::_internal_val() const {
  return _impl_.val_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
VectorXui32::val() const {
  // @@protoc_insertion_point(field_list:dtproto.geometry_msgs.VectorXui32.val)
  return _internal_val();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
VectorXui32::_internal_mutable_val() {
  return &_impl_.val_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
VectorXui32::mutable_val() {
  // @@protoc_insertion_point(field_mutable_list:dtproto.geometry_msgs.VectorXui32.val)
  return _internal_mutable_val();
}

// -------------------------------------------------------------------

// Vector2ui32

// uint32 a1 = 1;
inline void Vector2ui32::clear_a1() {
  _impl_.a1_ = 0u;
}
inline uint32_t Vector2ui32::_internal_a1() const {
  return _impl_.a1_;
}
inline uint32_t Vector2ui32::a1() const {
  // @@protoc_insertion_point(field_get:dtproto.geometry_msgs.Vector2ui32.a1)
  return _internal_a1();
}
inline void Vector2ui32::_internal_set_a1(uint32_t value) {
  
  _impl_.a1_ = value;
}
inline void Vector2ui32::set_a1(uint32_t value) {
  _internal_set_a1(value);
  // @@protoc_insertion_point(field_set:dtproto.geometry_msgs.Vector2ui32.a1)
}

// uint32 a2 = 2;
inline void Vector2ui32::clear_a2() {
  _impl_.a2_ = 0u;
}
inline uint32_t Vector2ui32::_internal_a2() const {
  return _impl_.a2_;
}
inline uint32_t Vector2ui32::a2() const {
  // @@protoc_insertion_point(field_get:dtproto.geometry_msgs.Vector2ui32.a2)
  return _internal_a2();
}
inline void Vector2ui32::_internal_set_a2(uint32_t value) {
  
  _impl_.a2_ = value;
}
inline void Vector2ui32::set_a2(uint32_t value) {
  _internal_set_a2(value);
  // @@protoc_insertion_point(field_set:dtproto.geometry_msgs.Vector2ui32.a2)
}

// -------------------------------------------------------------------

// Vector3ui32

// uint32 a1 = 1;
inline void Vector3ui32::clear_a1() {
  _impl_.a1_ = 0u;
}
inline uint32_t Vector3ui32::_internal_a1() const {
  return _impl_.a1_;
}
inline uint32_t Vector3ui32::a1() const {
  // @@protoc_insertion_point(field_get:dtproto.geometry_msgs.Vector3ui32.a1)
  return _internal_a1();
}
inline void Vector3ui32::_internal_set_a1(uint32_t value) {
  
  _impl_.a1_ = value;
}
inline void Vector3ui32::set_a1(uint32_t value) {
  _internal_set_a1(value);
  // @@protoc_insertion_point(field_set:dtproto.geometry_msgs.Vector3ui32.a1)
}

// uint32 a2 = 2;
inline void Vector3ui32::clear_a2() {
  _impl_.a2_ = 0u;
}
inline uint32_t Vector3ui32::_internal_a2() const {
  return _impl_.a2_;
}
inline uint32_t Vector3ui32::a2() const {
  // @@protoc_insertion_point(field_get:dtproto.geometry_msgs.Vector3ui32.a2)
  return _internal_a2();
}
inline void Vector3ui32::_internal_set_a2(uint32_t value) {
  
  _impl_.a2_ = value;
}
inline void Vector3ui32::set_a2(uint32_t value) {
  _internal_set_a2(value);
  // @@protoc_insertion_point(field_set:dtproto.geometry_msgs.Vector3ui32.a2)
}

// uint32 a3 = 3;
inline void Vector3ui32::clear_a3() {
  _impl_.a3_ = 0u;
}
inline uint32_t Vector3ui32::_internal_a3() const {
  return _impl_.a3_;
}
inline uint32_t Vector3ui32::a3() const {
  // @@protoc_insertion_point(field_get:dtproto.geometry_msgs.Vector3ui32.a3)
  return _internal_a3();
}
inline void Vector3ui32::_internal_set_a3(uint32_t value) {
  
  _impl_.a3_ = value;
}
inline void Vector3ui32::set_a3(uint32_t value) {
  _internal_set_a3(value);
  // @@protoc_insertion_point(field_set:dtproto.geometry_msgs.Vector3ui32.a3)
}

// -------------------------------------------------------------------

// Vector4ui32

// uint32 a1 = 1;
inline void Vector4ui32::clear_a1() {
  _impl_.a1_ = 0u;
}
inline uint32_t Vector4ui32::_internal_a1() const {
  return _impl_.a1_;
}
inline uint32_t Vector4ui32::a1() const {
  // @@protoc_insertion_point(field_get:dtproto.geometry_msgs.Vector4ui32.a1)
  return _internal_a1();
}
inline void Vector4ui32::_internal_set_a1(uint32_t value) {
  
  _impl_.a1_ = value;
}
inline void Vector4ui32::set_a1(uint32_t value) {
  _internal_set_a1(value);
  // @@protoc_insertion_point(field_set:dtproto.geometry_msgs.Vector4ui32.a1)
}

// uint32 a2 = 2;
inline void Vector4ui32::clear_a2() {
  _impl_.a2_ = 0u;
}
inline uint32_t Vector4ui32::_internal_a2() const {
  return _impl_.a2_;
}
inline uint32_t Vector4ui32::a2() const {
  // @@protoc_insertion_point(field_get:dtproto.geometry_msgs.Vector4ui32.a2)
  return _internal_a2();
}
inline void Vector4ui32::_internal_set_a2(uint32_t value) {
  
  _impl_.a2_ = value;
}
inline void Vector4ui32::set_a2(uint32_t value) {
  _internal_set_a2(value);
  // @@protoc_insertion_point(field_set:dtproto.geometry_msgs.Vector4ui32.a2)
}

// uint32 a3 = 3;
inline void Vector4ui32::clear_a3() {
  _impl_.a3_ = 0u;
}
inline uint32_t Vector4ui32::_internal_a3() const {
  return _impl_.a3_;
}
inline uint32_t Vector4ui32::a3() const {
  // @@protoc_insertion_point(field_get:dtproto.geometry_msgs.Vector4ui32.a3)
  return _internal_a3();
}
inline void Vector4ui32::_internal_set_a3(uint32_t value) {
  
  _impl_.a3_ = value;
}
inline void Vector4ui32::set_a3(uint32_t value) {
  _internal_set_a3(value);
  // @@protoc_insertion_point(field_set:dtproto.geometry_msgs.Vector4ui32.a3)
}

// uint32 a4 = 4;
inline void Vector4ui32::clear_a4() {
  _impl_.a4_ = 0u;
}
inline uint32_t Vector4ui32::_internal_a4() const {
  return _impl_.a4_;
}
inline uint32_t Vector4ui32::a4() const {
  // @@protoc_insertion_point(field_get:dtproto.geometry_msgs.Vector4ui32.a4)
  return _internal_a4();
}
inline void Vector4ui32::_internal_set_a4(uint32_t value) {
  
  _impl_.a4_ = value;
}
inline void Vector4ui32::set_a4(uint32_t value) {
  _internal_set_a4(value);
  // @@protoc_insertion_point(field_set:dtproto.geometry_msgs.Vector4ui32.a4)
}

// -------------------------------------------------------------------

// Vector6ui32

// uint32 a1 = 1;
inline void Vector6ui32::clear_a1() {
  _impl_.a1_ = 0u;
}
inline uint32_t Vector6ui32::_internal_a1() const {
  return _impl_.a1_;
}
inline uint32_t Vector6ui32::a1() const {
  // @@protoc_insertion_point(field_get:dtproto.geometry_msgs.Vector6ui32.a1)
  return _internal_a1();
}
inline void Vector6ui32::_internal_set_a1(uint32_t value) {
  
  _impl_.a1_ = value;
}
inline void Vector6ui32::set_a1(uint32_t value) {
  _internal_set_a1(value);
  // @@protoc_insertion_point(field_set:dtproto.geometry_msgs.Vector6ui32.a1)
}

// uint32 a2 = 2;
inline void Vector6ui32::clear_a2() {
  _impl_.a2_ = 0u;
}
inline uint32_t Vector6ui32::_internal_a2() const {
  return _impl_.a2_;
}
inline uint32_t Vector6ui32::a2() const {
  // @@protoc_insertion_point(field_get:dtproto.geometry_msgs.Vector6ui32.a2)
  return _internal_a2();
}
inline void Vector6ui32::_internal_set_a2(uint32_t value) {
  
  _impl_.a2_ = value;
}
inline void Vector6ui32::set_a2(uint32_t value) {
  _internal_set_a2(value);
  // @@protoc_insertion_point(field_set:dtproto.geometry_msgs.Vector6ui32.a2)
}

// uint32 a3 = 3;
inline void Vector6ui32::clear_a3() {
  _impl_.a3_ = 0u;
}
inline uint32_t Vector6ui32::_internal_a3() const {
  return _impl_.a3_;
}
inline uint32_t Vector6ui32::a3() const {
  // @@protoc_insertion_point(field_get:dtproto.geometry_msgs.Vector6ui32.a3)
  return _internal_a3();
}
inline void Vector6ui32::_internal_set_a3(uint32_t value) {
  
  _impl_.a3_ = value;
}
inline void Vector6ui32::set_a3(uint32_t value) {
  _internal_set_a3(value);
  // @@protoc_insertion_point(field_set:dtproto.geometry_msgs.Vector6ui32.a3)
}

// uint32 a4 = 4;
inline void Vector6ui32::clear_a4() {
  _impl_.a4_ = 0u;
}
inline uint32_t Vector6ui32::_internal_a4() const {
  return _impl_.a4_;
}
inline uint32_t Vector6ui32::a4() const {
  // @@protoc_insertion_point(field_get:dtproto.geometry_msgs.Vector6ui32.a4)
  return _internal_a4();
}
inline void Vector6ui32::_internal_set_a4(uint32_t value) {
  
  _impl_.a4_ = value;
}
inline void Vector6ui32::set_a4(uint32_t value) {
  _internal_set_a4(value);
  // @@protoc_insertion_point(field_set:dtproto.geometry_msgs.Vector6ui32.a4)
}

// uint32 a5 = 5;
inline void Vector6ui32::clear_a5() {
  _impl_.a5_ = 0u;
}
inline uint32_t Vector6ui32::_internal_a5() const {
  return _impl_.a5_;
}
inline uint32_t Vector6ui32::a5() const {
  // @@protoc_insertion_point(field_get:dtproto.geometry_msgs.Vector6ui32.a5)
  return _internal_a5();
}
inline void Vector6ui32::_internal_set_a5(uint32_t value) {
  
  _impl_.a5_ = value;
}
inline void Vector6ui32::set_a5(uint32_t value) {
  _internal_set_a5(value);
  // @@protoc_insertion_point(field_set:dtproto.geometry_msgs.Vector6ui32.a5)
}

// uint32 a6 = 6;
inline void Vector6ui32::clear_a6() {
  _impl_.a6_ = 0u;
}
inline uint32_t Vector6ui32::_internal_a6() const {
  return _impl_.a6_;
}
inline uint32_t Vector6ui32::a6() const {
  // @@protoc_insertion_point(field_get:dtproto.geometry_msgs.Vector6ui32.a6)
  return _internal_a6();
}
inline void Vector6ui32::_internal_set_a6(uint32_t value) {
  
  _impl_.a6_ = value;
}
inline void Vector6ui32::set_a6(uint32_t value) {
  _internal_set_a6(value);
  // @@protoc_insertion_point(field_set:dtproto.geometry_msgs.Vector6ui32.a6)
}

// -------------------------------------------------------------------

// VectorXi32

// repeated int32 val = 1;
inline int VectorXi32::_internal_val_size() const {
  return _impl_.val_.size();
}
inline int VectorXi32::val_size() const {
  return _internal_val_size();
}
inline void VectorXi32::clear_val() {
  _impl_.val_.Clear();
}
inline int32_t VectorXi32::_internal_val(int index) const {
  return _impl_.val_.Get(index);
}
inline int32_t VectorXi32::val(int index) const {
  // @@protoc_insertion_point(field_get:dtproto.geometry_msgs.VectorXi32.val)
  return _internal_val(index);
}
inline void VectorXi32::set_val(int index, int32_t value) {
  _impl_.val_.Set(index, value);
  // @@protoc_insertion_point(field_set:dtproto.geometry_msgs.VectorXi32.val)
}
inline void VectorXi32::_internal_add_val(int32_t value) {
  _impl_.val_.Add(value);
}
inline void VectorXi32::add_val(int32_t value) {
  _internal_add_val(value);
  // @@protoc_insertion_point(field_add:dtproto.geometry_msgs.VectorXi32.val)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >&
VectorXi32::_internal_val() const {
  return _impl_.val_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >&
VectorXi32::val() const {
  // @@protoc_insertion_point(field_list:dtproto.geometry_msgs.VectorXi32.val)
  return _internal_val();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >*
VectorXi32::_internal_mutable_val() {
  return &_impl_.val_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >*
VectorXi32::mutable_val() {
  // @@protoc_insertion_point(field_mutable_list:dtproto.geometry_msgs.VectorXi32.val)
  return _internal_mutable_val();
}

// -------------------------------------------------------------------

// Vector2i32

// int32 a1 = 1;
inline void Vector2i32::clear_a1() {
  _impl_.a1_ = 0;
}
inline int32_t Vector2i32::_internal_a1() const {
  return _impl_.a1_;
}
inline int32_t Vector2i32::a1() const {
  // @@protoc_insertion_point(field_get:dtproto.geometry_msgs.Vector2i32.a1)
  return _internal_a1();
}
inline void Vector2i32::_internal_set_a1(int32_t value) {
  
  _impl_.a1_ = value;
}
inline void Vector2i32::set_a1(int32_t value) {
  _internal_set_a1(value);
  // @@protoc_insertion_point(field_set:dtproto.geometry_msgs.Vector2i32.a1)
}

// int32 a2 = 2;
inline void Vector2i32::clear_a2() {
  _impl_.a2_ = 0;
}
inline int32_t Vector2i32::_internal_a2() const {
  return _impl_.a2_;
}
inline int32_t Vector2i32::a2() const {
  // @@protoc_insertion_point(field_get:dtproto.geometry_msgs.Vector2i32.a2)
  return _internal_a2();
}
inline void Vector2i32::_internal_set_a2(int32_t value) {
  
  _impl_.a2_ = value;
}
inline void Vector2i32::set_a2(int32_t value) {
  _internal_set_a2(value);
  // @@protoc_insertion_point(field_set:dtproto.geometry_msgs.Vector2i32.a2)
}

// -------------------------------------------------------------------

// Vector3i32

// int32 a1 = 1;
inline void Vector3i32::clear_a1() {
  _impl_.a1_ = 0;
}
inline int32_t Vector3i32::_internal_a1() const {
  return _impl_.a1_;
}
inline int32_t Vector3i32::a1() const {
  // @@protoc_insertion_point(field_get:dtproto.geometry_msgs.Vector3i32.a1)
  return _internal_a1();
}
inline void Vector3i32::_internal_set_a1(int32_t value) {
  
  _impl_.a1_ = value;
}
inline void Vector3i32::set_a1(int32_t value) {
  _internal_set_a1(value);
  // @@protoc_insertion_point(field_set:dtproto.geometry_msgs.Vector3i32.a1)
}

// int32 a2 = 2;
inline void Vector3i32::clear_a2() {
  _impl_.a2_ = 0;
}
inline int32_t Vector3i32::_internal_a2() const {
  return _impl_.a2_;
}
inline int32_t Vector3i32::a2() const {
  // @@protoc_insertion_point(field_get:dtproto.geometry_msgs.Vector3i32.a2)
  return _internal_a2();
}
inline void Vector3i32::_internal_set_a2(int32_t value) {
  
  _impl_.a2_ = value;
}
inline void Vector3i32::set_a2(int32_t value) {
  _internal_set_a2(value);
  // @@protoc_insertion_point(field_set:dtproto.geometry_msgs.Vector3i32.a2)
}

// int32 a3 = 3;
inline void Vector3i32::clear_a3() {
  _impl_.a3_ = 0;
}
inline int32_t Vector3i32::_internal_a3() const {
  return _impl_.a3_;
}
inline int32_t Vector3i32::a3() const {
  // @@protoc_insertion_point(field_get:dtproto.geometry_msgs.Vector3i32.a3)
  return _internal_a3();
}
inline void Vector3i32::_internal_set_a3(int32_t value) {
  
  _impl_.a3_ = value;
}
inline void Vector3i32::set_a3(int32_t value) {
  _internal_set_a3(value);
  // @@protoc_insertion_point(field_set:dtproto.geometry_msgs.Vector3i32.a3)
}

// -------------------------------------------------------------------

// Vector4i32

// int32 a1 = 1;
inline void Vector4i32::clear_a1() {
  _impl_.a1_ = 0;
}
inline int32_t Vector4i32::_internal_a1() const {
  return _impl_.a1_;
}
inline int32_t Vector4i32::a1() const {
  // @@protoc_insertion_point(field_get:dtproto.geometry_msgs.Vector4i32.a1)
  return _internal_a1();
}
inline void Vector4i32::_internal_set_a1(int32_t value) {
  
  _impl_.a1_ = value;
}
inline void Vector4i32::set_a1(int32_t value) {
  _internal_set_a1(value);
  // @@protoc_insertion_point(field_set:dtproto.geometry_msgs.Vector4i32.a1)
}

// int32 a2 = 2;
inline void Vector4i32::clear_a2() {
  _impl_.a2_ = 0;
}
inline int32_t Vector4i32::_internal_a2() const {
  return _impl_.a2_;
}
inline int32_t Vector4i32::a2() const {
  // @@protoc_insertion_point(field_get:dtproto.geometry_msgs.Vector4i32.a2)
  return _internal_a2();
}
inline void Vector4i32::_internal_set_a2(int32_t value) {
  
  _impl_.a2_ = value;
}
inline void Vector4i32::set_a2(int32_t value) {
  _internal_set_a2(value);
  // @@protoc_insertion_point(field_set:dtproto.geometry_msgs.Vector4i32.a2)
}

// int32 a3 = 3;
inline void Vector4i32::clear_a3() {
  _impl_.a3_ = 0;
}
inline int32_t Vector4i32::_internal_a3() const {
  return _impl_.a3_;
}
inline int32_t Vector4i32::a3() const {
  // @@protoc_insertion_point(field_get:dtproto.geometry_msgs.Vector4i32.a3)
  return _internal_a3();
}
inline void Vector4i32::_internal_set_a3(int32_t value) {
  
  _impl_.a3_ = value;
}
inline void Vector4i32::set_a3(int32_t value) {
  _internal_set_a3(value);
  // @@protoc_insertion_point(field_set:dtproto.geometry_msgs.Vector4i32.a3)
}

// int32 a4 = 4;
inline void Vector4i32::clear_a4() {
  _impl_.a4_ = 0;
}
inline int32_t Vector4i32::_internal_a4() const {
  return _impl_.a4_;
}
inline int32_t Vector4i32::a4() const {
  // @@protoc_insertion_point(field_get:dtproto.geometry_msgs.Vector4i32.a4)
  return _internal_a4();
}
inline void Vector4i32::_internal_set_a4(int32_t value) {
  
  _impl_.a4_ = value;
}
inline void Vector4i32::set_a4(int32_t value) {
  _internal_set_a4(value);
  // @@protoc_insertion_point(field_set:dtproto.geometry_msgs.Vector4i32.a4)
}

// -------------------------------------------------------------------

// Vector6i32

// int32 a1 = 1;
inline void Vector6i32::clear_a1() {
  _impl_.a1_ = 0;
}
inline int32_t Vector6i32::_internal_a1() const {
  return _impl_.a1_;
}
inline int32_t Vector6i32::a1() const {
  // @@protoc_insertion_point(field_get:dtproto.geometry_msgs.Vector6i32.a1)
  return _internal_a1();
}
inline void Vector6i32::_internal_set_a1(int32_t value) {
  
  _impl_.a1_ = value;
}
inline void Vector6i32::set_a1(int32_t value) {
  _internal_set_a1(value);
  // @@protoc_insertion_point(field_set:dtproto.geometry_msgs.Vector6i32.a1)
}

// int32 a2 = 2;
inline void Vector6i32::clear_a2() {
  _impl_.a2_ = 0;
}
inline int32_t Vector6i32::_internal_a2() const {
  return _impl_.a2_;
}
inline int32_t Vector6i32::a2() const {
  // @@protoc_insertion_point(field_get:dtproto.geometry_msgs.Vector6i32.a2)
  return _internal_a2();
}
inline void Vector6i32::_internal_set_a2(int32_t value) {
  
  _impl_.a2_ = value;
}
inline void Vector6i32::set_a2(int32_t value) {
  _internal_set_a2(value);
  // @@protoc_insertion_point(field_set:dtproto.geometry_msgs.Vector6i32.a2)
}

// int32 a3 = 3;
inline void Vector6i32::clear_a3() {
  _impl_.a3_ = 0;
}
inline int32_t Vector6i32::_internal_a3() const {
  return _impl_.a3_;
}
inline int32_t Vector6i32::a3() const {
  // @@protoc_insertion_point(field_get:dtproto.geometry_msgs.Vector6i32.a3)
  return _internal_a3();
}
inline void Vector6i32::_internal_set_a3(int32_t value) {
  
  _impl_.a3_ = value;
}
inline void Vector6i32::set_a3(int32_t value) {
  _internal_set_a3(value);
  // @@protoc_insertion_point(field_set:dtproto.geometry_msgs.Vector6i32.a3)
}

// int32 a4 = 4;
inline void Vector6i32::clear_a4() {
  _impl_.a4_ = 0;
}
inline int32_t Vector6i32::_internal_a4() const {
  return _impl_.a4_;
}
inline int32_t Vector6i32::a4() const {
  // @@protoc_insertion_point(field_get:dtproto.geometry_msgs.Vector6i32.a4)
  return _internal_a4();
}
inline void Vector6i32::_internal_set_a4(int32_t value) {
  
  _impl_.a4_ = value;
}
inline void Vector6i32::set_a4(int32_t value) {
  _internal_set_a4(value);
  // @@protoc_insertion_point(field_set:dtproto.geometry_msgs.Vector6i32.a4)
}

// int32 a5 = 5;
inline void Vector6i32::clear_a5() {
  _impl_.a5_ = 0;
}
inline int32_t Vector6i32::_internal_a5() const {
  return _impl_.a5_;
}
inline int32_t Vector6i32::a5() const {
  // @@protoc_insertion_point(field_get:dtproto.geometry_msgs.Vector6i32.a5)
  return _internal_a5();
}
inline void Vector6i32::_internal_set_a5(int32_t value) {
  
  _impl_.a5_ = value;
}
inline void Vector6i32::set_a5(int32_t value) {
  _internal_set_a5(value);
  // @@protoc_insertion_point(field_set:dtproto.geometry_msgs.Vector6i32.a5)
}

// int32 a6 = 6;
inline void Vector6i32::clear_a6() {
  _impl_.a6_ = 0;
}
inline int32_t Vector6i32::_internal_a6() const {
  return _impl_.a6_;
}
inline int32_t Vector6i32::a6() const {
  // @@protoc_insertion_point(field_get:dtproto.geometry_msgs.Vector6i32.a6)
  return _internal_a6();
}
inline void Vector6i32::_internal_set_a6(int32_t value) {
  
  _impl_.a6_ = value;
}
inline void Vector6i32::set_a6(int32_t value) {
  _internal_set_a6(value);
  // @@protoc_insertion_point(field_set:dtproto.geometry_msgs.Vector6i32.a6)
}

// -------------------------------------------------------------------

// VectorXb

// repeated bool val = 1;
inline int VectorXb::_internal_val_size() const {
  return _impl_.val_.size();
}
inline int VectorXb::val_size() const {
  return _internal_val_size();
}
inline void VectorXb::clear_val() {
  _impl_.val_.Clear();
}
inline bool VectorXb::_internal_val(int index) const {
  return _impl_.val_.Get(index);
}
inline bool VectorXb::val(int index) const {
  // @@protoc_insertion_point(field_get:dtproto.geometry_msgs.VectorXb.val)
  return _internal_val(index);
}
inline void VectorXb::set_val(int index, bool value) {
  _impl_.val_.Set(index, value);
  // @@protoc_insertion_point(field_set:dtproto.geometry_msgs.VectorXb.val)
}
inline void VectorXb::_internal_add_val(bool value) {
  _impl_.val_.Add(value);
}
inline void VectorXb::add_val(bool value) {
  _internal_add_val(value);
  // @@protoc_insertion_point(field_add:dtproto.geometry_msgs.VectorXb.val)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< bool >&
VectorXb::_internal_val() const {
  return _impl_.val_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< bool >&
VectorXb::val() const {
  // @@protoc_insertion_point(field_list:dtproto.geometry_msgs.VectorXb.val)
  return _internal_val();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< bool >*
VectorXb::_internal_mutable_val() {
  return &_impl_.val_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< bool >*
VectorXb::mutable_val() {
  // @@protoc_insertion_point(field_mutable_list:dtproto.geometry_msgs.VectorXb.val)
  return _internal_mutable_val();
}

// -------------------------------------------------------------------

// Vector2b

// bool a1 = 1;
inline void Vector2b::clear_a1() {
  _impl_.a1_ = false;
}
inline bool Vector2b::_internal_a1() const {
  return _impl_.a1_;
}
inline bool Vector2b::a1() const {
  // @@protoc_insertion_point(field_get:dtproto.geometry_msgs.Vector2b.a1)
  return _internal_a1();
}
inline void Vector2b::_internal_set_a1(bool value) {
  
  _impl_.a1_ = value;
}
inline void Vector2b::set_a1(bool value) {
  _internal_set_a1(value);
  // @@protoc_insertion_point(field_set:dtproto.geometry_msgs.Vector2b.a1)
}

// bool a2 = 2;
inline void Vector2b::clear_a2() {
  _impl_.a2_ = false;
}
inline bool Vector2b::_internal_a2() const {
  return _impl_.a2_;
}
inline bool Vector2b::a2() const {
  // @@protoc_insertion_point(field_get:dtproto.geometry_msgs.Vector2b.a2)
  return _internal_a2();
}
inline void Vector2b::_internal_set_a2(bool value) {
  
  _impl_.a2_ = value;
}
inline void Vector2b::set_a2(bool value) {
  _internal_set_a2(value);
  // @@protoc_insertion_point(field_set:dtproto.geometry_msgs.Vector2b.a2)
}

// -------------------------------------------------------------------

// Vector3b

// bool a1 = 1;
inline void Vector3b::clear_a1() {
  _impl_.a1_ = false;
}
inline bool Vector3b::_internal_a1() const {
  return _impl_.a1_;
}
inline bool Vector3b::a1() const {
  // @@protoc_insertion_point(field_get:dtproto.geometry_msgs.Vector3b.a1)
  return _internal_a1();
}
inline void Vector3b::_internal_set_a1(bool value) {
  
  _impl_.a1_ = value;
}
inline void Vector3b::set_a1(bool value) {
  _internal_set_a1(value);
  // @@protoc_insertion_point(field_set:dtproto.geometry_msgs.Vector3b.a1)
}

// bool a2 = 2;
inline void Vector3b::clear_a2() {
  _impl_.a2_ = false;
}
inline bool Vector3b::_internal_a2() const {
  return _impl_.a2_;
}
inline bool Vector3b::a2() const {
  // @@protoc_insertion_point(field_get:dtproto.geometry_msgs.Vector3b.a2)
  return _internal_a2();
}
inline void Vector3b::_internal_set_a2(bool value) {
  
  _impl_.a2_ = value;
}
inline void Vector3b::set_a2(bool value) {
  _internal_set_a2(value);
  // @@protoc_insertion_point(field_set:dtproto.geometry_msgs.Vector3b.a2)
}

// bool a3 = 3;
inline void Vector3b::clear_a3() {
  _impl_.a3_ = false;
}
inline bool Vector3b::_internal_a3() const {
  return _impl_.a3_;
}
inline bool Vector3b::a3() const {
  // @@protoc_insertion_point(field_get:dtproto.geometry_msgs.Vector3b.a3)
  return _internal_a3();
}
inline void Vector3b::_internal_set_a3(bool value) {
  
  _impl_.a3_ = value;
}
inline void Vector3b::set_a3(bool value) {
  _internal_set_a3(value);
  // @@protoc_insertion_point(field_set:dtproto.geometry_msgs.Vector3b.a3)
}

// -------------------------------------------------------------------

// Vector4b

// bool a1 = 1;
inline void Vector4b::clear_a1() {
  _impl_.a1_ = false;
}
inline bool Vector4b::_internal_a1() const {
  return _impl_.a1_;
}
inline bool Vector4b::a1() const {
  // @@protoc_insertion_point(field_get:dtproto.geometry_msgs.Vector4b.a1)
  return _internal_a1();
}
inline void Vector4b::_internal_set_a1(bool value) {
  
  _impl_.a1_ = value;
}
inline void Vector4b::set_a1(bool value) {
  _internal_set_a1(value);
  // @@protoc_insertion_point(field_set:dtproto.geometry_msgs.Vector4b.a1)
}

// bool a2 = 2;
inline void Vector4b::clear_a2() {
  _impl_.a2_ = false;
}
inline bool Vector4b::_internal_a2() const {
  return _impl_.a2_;
}
inline bool Vector4b::a2() const {
  // @@protoc_insertion_point(field_get:dtproto.geometry_msgs.Vector4b.a2)
  return _internal_a2();
}
inline void Vector4b::_internal_set_a2(bool value) {
  
  _impl_.a2_ = value;
}
inline void Vector4b::set_a2(bool value) {
  _internal_set_a2(value);
  // @@protoc_insertion_point(field_set:dtproto.geometry_msgs.Vector4b.a2)
}

// bool a3 = 3;
inline void Vector4b::clear_a3() {
  _impl_.a3_ = false;
}
inline bool Vector4b::_internal_a3() const {
  return _impl_.a3_;
}
inline bool Vector4b::a3() const {
  // @@protoc_insertion_point(field_get:dtproto.geometry_msgs.Vector4b.a3)
  return _internal_a3();
}
inline void Vector4b::_internal_set_a3(bool value) {
  
  _impl_.a3_ = value;
}
inline void Vector4b::set_a3(bool value) {
  _internal_set_a3(value);
  // @@protoc_insertion_point(field_set:dtproto.geometry_msgs.Vector4b.a3)
}

// bool a4 = 4;
inline void Vector4b::clear_a4() {
  _impl_.a4_ = false;
}
inline bool Vector4b::_internal_a4() const {
  return _impl_.a4_;
}
inline bool Vector4b::a4() const {
  // @@protoc_insertion_point(field_get:dtproto.geometry_msgs.Vector4b.a4)
  return _internal_a4();
}
inline void Vector4b::_internal_set_a4(bool value) {
  
  _impl_.a4_ = value;
}
inline void Vector4b::set_a4(bool value) {
  _internal_set_a4(value);
  // @@protoc_insertion_point(field_set:dtproto.geometry_msgs.Vector4b.a4)
}

// -------------------------------------------------------------------

// Vector6b

// bool a1 = 1;
inline void Vector6b::clear_a1() {
  _impl_.a1_ = false;
}
inline bool Vector6b::_internal_a1() const {
  return _impl_.a1_;
}
inline bool Vector6b::a1() const {
  // @@protoc_insertion_point(field_get:dtproto.geometry_msgs.Vector6b.a1)
  return _internal_a1();
}
inline void Vector6b::_internal_set_a1(bool value) {
  
  _impl_.a1_ = value;
}
inline void Vector6b::set_a1(bool value) {
  _internal_set_a1(value);
  // @@protoc_insertion_point(field_set:dtproto.geometry_msgs.Vector6b.a1)
}

// bool a2 = 2;
inline void Vector6b::clear_a2() {
  _impl_.a2_ = false;
}
inline bool Vector6b::_internal_a2() const {
  return _impl_.a2_;
}
inline bool Vector6b::a2() const {
  // @@protoc_insertion_point(field_get:dtproto.geometry_msgs.Vector6b.a2)
  return _internal_a2();
}
inline void Vector6b::_internal_set_a2(bool value) {
  
  _impl_.a2_ = value;
}
inline void Vector6b::set_a2(bool value) {
  _internal_set_a2(value);
  // @@protoc_insertion_point(field_set:dtproto.geometry_msgs.Vector6b.a2)
}

// bool a3 = 3;
inline void Vector6b::clear_a3() {
  _impl_.a3_ = false;
}
inline bool Vector6b::_internal_a3() const {
  return _impl_.a3_;
}
inline bool Vector6b::a3() const {
  // @@protoc_insertion_point(field_get:dtproto.geometry_msgs.Vector6b.a3)
  return _internal_a3();
}
inline void Vector6b::_internal_set_a3(bool value) {
  
  _impl_.a3_ = value;
}
inline void Vector6b::set_a3(bool value) {
  _internal_set_a3(value);
  // @@protoc_insertion_point(field_set:dtproto.geometry_msgs.Vector6b.a3)
}

// bool a4 = 4;
inline void Vector6b::clear_a4() {
  _impl_.a4_ = false;
}
inline bool Vector6b::_internal_a4() const {
  return _impl_.a4_;
}
inline bool Vector6b::a4() const {
  // @@protoc_insertion_point(field_get:dtproto.geometry_msgs.Vector6b.a4)
  return _internal_a4();
}
inline void Vector6b::_internal_set_a4(bool value) {
  
  _impl_.a4_ = value;
}
inline void Vector6b::set_a4(bool value) {
  _internal_set_a4(value);
  // @@protoc_insertion_point(field_set:dtproto.geometry_msgs.Vector6b.a4)
}

// bool a5 = 5;
inline void Vector6b::clear_a5() {
  _impl_.a5_ = false;
}
inline bool Vector6b::_internal_a5() const {
  return _impl_.a5_;
}
inline bool Vector6b::a5() const {
  // @@protoc_insertion_point(field_get:dtproto.geometry_msgs.Vector6b.a5)
  return _internal_a5();
}
inline void Vector6b::_internal_set_a5(bool value) {
  
  _impl_.a5_ = value;
}
inline void Vector6b::set_a5(bool value) {
  _internal_set_a5(value);
  // @@protoc_insertion_point(field_set:dtproto.geometry_msgs.Vector6b.a5)
}

// bool a6 = 6;
inline void Vector6b::clear_a6() {
  _impl_.a6_ = false;
}
inline bool Vector6b::_internal_a6() const {
  return _impl_.a6_;
}
inline bool Vector6b::a6() const {
  // @@protoc_insertion_point(field_get:dtproto.geometry_msgs.Vector6b.a6)
  return _internal_a6();
}
inline void Vector6b::_internal_set_a6(bool value) {
  
  _impl_.a6_ = value;
}
inline void Vector6b::set_a6(bool value) {
  _internal_set_a6(value);
  // @@protoc_insertion_point(field_set:dtproto.geometry_msgs.Vector6b.a6)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace geometry_msgs
}  // namespace dtproto

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_dtProto_2fgeometry_5fmsgs_2fVector_2eproto
