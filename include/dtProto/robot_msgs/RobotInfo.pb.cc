// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: dtProto/robot_msgs/RobotInfo.proto

#include "dtProto/robot_msgs/RobotInfo.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace dtproto {
namespace robot_msgs {
PROTOBUF_CONSTEXPR RobotInfo::RobotInfo(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.author_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.version_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.description_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.serial_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.type_)*/0u
  , /*decltype(_impl_.id_)*/0u
  , /*decltype(_impl_.dof_)*/0u
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct RobotInfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RobotInfoDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~RobotInfoDefaultTypeInternal() {}
  union {
    RobotInfo _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RobotInfoDefaultTypeInternal _RobotInfo_default_instance_;
}  // namespace robot_msgs
}  // namespace dtproto
static ::_pb::Metadata file_level_metadata_dtProto_2frobot_5fmsgs_2fRobotInfo_2eproto[1];
static constexpr ::_pb::EnumDescriptor const** file_level_enum_descriptors_dtProto_2frobot_5fmsgs_2fRobotInfo_2eproto = nullptr;
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_dtProto_2frobot_5fmsgs_2fRobotInfo_2eproto = nullptr;

const uint32_t TableStruct_dtProto_2frobot_5fmsgs_2fRobotInfo_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::dtproto::robot_msgs::RobotInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::dtproto::robot_msgs::RobotInfo, _impl_.name_),
  PROTOBUF_FIELD_OFFSET(::dtproto::robot_msgs::RobotInfo, _impl_.author_),
  PROTOBUF_FIELD_OFFSET(::dtproto::robot_msgs::RobotInfo, _impl_.version_),
  PROTOBUF_FIELD_OFFSET(::dtproto::robot_msgs::RobotInfo, _impl_.description_),
  PROTOBUF_FIELD_OFFSET(::dtproto::robot_msgs::RobotInfo, _impl_.serial_),
  PROTOBUF_FIELD_OFFSET(::dtproto::robot_msgs::RobotInfo, _impl_.type_),
  PROTOBUF_FIELD_OFFSET(::dtproto::robot_msgs::RobotInfo, _impl_.id_),
  PROTOBUF_FIELD_OFFSET(::dtproto::robot_msgs::RobotInfo, _impl_.dof_),
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::dtproto::robot_msgs::RobotInfo)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::dtproto::robot_msgs::_RobotInfo_default_instance_._instance,
};

const char descriptor_table_protodef_dtProto_2frobot_5fmsgs_2fRobotInfo_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\"dtProto/robot_msgs/RobotInfo.proto\022\022dt"
  "proto.robot_msgs\"\206\001\n\tRobotInfo\022\014\n\004name\030\001"
  " \001(\t\022\016\n\006author\030\002 \001(\t\022\017\n\007version\030\003 \001(\t\022\023\n"
  "\013description\030\004 \001(\t\022\016\n\006serial\030\005 \001(\t\022\014\n\004ty"
  "pe\030\006 \001(\r\022\n\n\002id\030\007 \001(\r\022\013\n\003dof\030\010 \001(\rb\006proto"
  "3"
  ;
static ::_pbi::once_flag descriptor_table_dtProto_2frobot_5fmsgs_2fRobotInfo_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_dtProto_2frobot_5fmsgs_2fRobotInfo_2eproto = {
    false, false, 201, descriptor_table_protodef_dtProto_2frobot_5fmsgs_2fRobotInfo_2eproto,
    "dtProto/robot_msgs/RobotInfo.proto",
    &descriptor_table_dtProto_2frobot_5fmsgs_2fRobotInfo_2eproto_once, nullptr, 0, 1,
    schemas, file_default_instances, TableStruct_dtProto_2frobot_5fmsgs_2fRobotInfo_2eproto::offsets,
    file_level_metadata_dtProto_2frobot_5fmsgs_2fRobotInfo_2eproto, file_level_enum_descriptors_dtProto_2frobot_5fmsgs_2fRobotInfo_2eproto,
    file_level_service_descriptors_dtProto_2frobot_5fmsgs_2fRobotInfo_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_dtProto_2frobot_5fmsgs_2fRobotInfo_2eproto_getter() {
  return &descriptor_table_dtProto_2frobot_5fmsgs_2fRobotInfo_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_dtProto_2frobot_5fmsgs_2fRobotInfo_2eproto(&descriptor_table_dtProto_2frobot_5fmsgs_2fRobotInfo_2eproto);
namespace dtproto {
namespace robot_msgs {

// ===================================================================

class RobotInfo::_Internal {
 public:
};

RobotInfo::RobotInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:dtproto.robot_msgs.RobotInfo)
}
RobotInfo::RobotInfo(const RobotInfo& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  RobotInfo* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.name_){}
    , decltype(_impl_.author_){}
    , decltype(_impl_.version_){}
    , decltype(_impl_.description_){}
    , decltype(_impl_.serial_){}
    , decltype(_impl_.type_){}
    , decltype(_impl_.id_){}
    , decltype(_impl_.dof_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    _this->_impl_.name_.Set(from._internal_name(), 
      _this->GetArenaForAllocation());
  }
  _impl_.author_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.author_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_author().empty()) {
    _this->_impl_.author_.Set(from._internal_author(), 
      _this->GetArenaForAllocation());
  }
  _impl_.version_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.version_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_version().empty()) {
    _this->_impl_.version_.Set(from._internal_version(), 
      _this->GetArenaForAllocation());
  }
  _impl_.description_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.description_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_description().empty()) {
    _this->_impl_.description_.Set(from._internal_description(), 
      _this->GetArenaForAllocation());
  }
  _impl_.serial_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.serial_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_serial().empty()) {
    _this->_impl_.serial_.Set(from._internal_serial(), 
      _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.type_, &from._impl_.type_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.dof_) -
    reinterpret_cast<char*>(&_impl_.type_)) + sizeof(_impl_.dof_));
  // @@protoc_insertion_point(copy_constructor:dtproto.robot_msgs.RobotInfo)
}

inline void RobotInfo::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.name_){}
    , decltype(_impl_.author_){}
    , decltype(_impl_.version_){}
    , decltype(_impl_.description_){}
    , decltype(_impl_.serial_){}
    , decltype(_impl_.type_){0u}
    , decltype(_impl_.id_){0u}
    , decltype(_impl_.dof_){0u}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.author_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.author_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.version_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.version_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.description_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.description_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.serial_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.serial_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

RobotInfo::~RobotInfo() {
  // @@protoc_insertion_point(destructor:dtproto.robot_msgs.RobotInfo)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void RobotInfo::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.name_.Destroy();
  _impl_.author_.Destroy();
  _impl_.version_.Destroy();
  _impl_.description_.Destroy();
  _impl_.serial_.Destroy();
}

void RobotInfo::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void RobotInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:dtproto.robot_msgs.RobotInfo)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.name_.ClearToEmpty();
  _impl_.author_.ClearToEmpty();
  _impl_.version_.ClearToEmpty();
  _impl_.description_.ClearToEmpty();
  _impl_.serial_.ClearToEmpty();
  ::memset(&_impl_.type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.dof_) -
      reinterpret_cast<char*>(&_impl_.type_)) + sizeof(_impl_.dof_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RobotInfo::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "dtproto.robot_msgs.RobotInfo.name"));
        } else
          goto handle_unusual;
        continue;
      // string author = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_author();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "dtproto.robot_msgs.RobotInfo.author"));
        } else
          goto handle_unusual;
        continue;
      // string version = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_version();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "dtproto.robot_msgs.RobotInfo.version"));
        } else
          goto handle_unusual;
        continue;
      // string description = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_description();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "dtproto.robot_msgs.RobotInfo.description"));
        } else
          goto handle_unusual;
        continue;
      // string serial = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          auto str = _internal_mutable_serial();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "dtproto.robot_msgs.RobotInfo.serial"));
        } else
          goto handle_unusual;
        continue;
      // uint32 type = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 48)) {
          _impl_.type_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 id = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 56)) {
          _impl_.id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 dof = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 64)) {
          _impl_.dof_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* RobotInfo::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:dtproto.robot_msgs.RobotInfo)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "dtproto.robot_msgs.RobotInfo.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // string author = 2;
  if (!this->_internal_author().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_author().data(), static_cast<int>(this->_internal_author().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "dtproto.robot_msgs.RobotInfo.author");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_author(), target);
  }

  // string version = 3;
  if (!this->_internal_version().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_version().data(), static_cast<int>(this->_internal_version().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "dtproto.robot_msgs.RobotInfo.version");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_version(), target);
  }

  // string description = 4;
  if (!this->_internal_description().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_description().data(), static_cast<int>(this->_internal_description().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "dtproto.robot_msgs.RobotInfo.description");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_description(), target);
  }

  // string serial = 5;
  if (!this->_internal_serial().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_serial().data(), static_cast<int>(this->_internal_serial().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "dtproto.robot_msgs.RobotInfo.serial");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_serial(), target);
  }

  // uint32 type = 6;
  if (this->_internal_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(6, this->_internal_type(), target);
  }

  // uint32 id = 7;
  if (this->_internal_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(7, this->_internal_id(), target);
  }

  // uint32 dof = 8;
  if (this->_internal_dof() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(8, this->_internal_dof(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dtproto.robot_msgs.RobotInfo)
  return target;
}

size_t RobotInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dtproto.robot_msgs.RobotInfo)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string author = 2;
  if (!this->_internal_author().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_author());
  }

  // string version = 3;
  if (!this->_internal_version().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_version());
  }

  // string description = 4;
  if (!this->_internal_description().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_description());
  }

  // string serial = 5;
  if (!this->_internal_serial().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_serial());
  }

  // uint32 type = 6;
  if (this->_internal_type() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_type());
  }

  // uint32 id = 7;
  if (this->_internal_id() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_id());
  }

  // uint32 dof = 8;
  if (this->_internal_dof() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_dof());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData RobotInfo::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    RobotInfo::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*RobotInfo::GetClassData() const { return &_class_data_; }


void RobotInfo::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<RobotInfo*>(&to_msg);
  auto& from = static_cast<const RobotInfo&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:dtproto.robot_msgs.RobotInfo)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (!from._internal_author().empty()) {
    _this->_internal_set_author(from._internal_author());
  }
  if (!from._internal_version().empty()) {
    _this->_internal_set_version(from._internal_version());
  }
  if (!from._internal_description().empty()) {
    _this->_internal_set_description(from._internal_description());
  }
  if (!from._internal_serial().empty()) {
    _this->_internal_set_serial(from._internal_serial());
  }
  if (from._internal_type() != 0) {
    _this->_internal_set_type(from._internal_type());
  }
  if (from._internal_id() != 0) {
    _this->_internal_set_id(from._internal_id());
  }
  if (from._internal_dof() != 0) {
    _this->_internal_set_dof(from._internal_dof());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void RobotInfo::CopyFrom(const RobotInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dtproto.robot_msgs.RobotInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RobotInfo::IsInitialized() const {
  return true;
}

void RobotInfo::InternalSwap(RobotInfo* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.name_, lhs_arena,
      &other->_impl_.name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.author_, lhs_arena,
      &other->_impl_.author_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.version_, lhs_arena,
      &other->_impl_.version_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.description_, lhs_arena,
      &other->_impl_.description_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.serial_, lhs_arena,
      &other->_impl_.serial_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(RobotInfo, _impl_.dof_)
      + sizeof(RobotInfo::_impl_.dof_)
      - PROTOBUF_FIELD_OFFSET(RobotInfo, _impl_.type_)>(
          reinterpret_cast<char*>(&_impl_.type_),
          reinterpret_cast<char*>(&other->_impl_.type_));
}

::PROTOBUF_NAMESPACE_ID::Metadata RobotInfo::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_dtProto_2frobot_5fmsgs_2fRobotInfo_2eproto_getter, &descriptor_table_dtProto_2frobot_5fmsgs_2fRobotInfo_2eproto_once,
      file_level_metadata_dtProto_2frobot_5fmsgs_2fRobotInfo_2eproto[0]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace robot_msgs
}  // namespace dtproto
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::dtproto::robot_msgs::RobotInfo*
Arena::CreateMaybeMessage< ::dtproto::robot_msgs::RobotInfo >(Arena* arena) {
  return Arena::CreateMessageInternal< ::dtproto::robot_msgs::RobotInfo >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
