// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: dtProto/robot_msgs/RobotState.proto

#include "dtProto/robot_msgs/RobotState.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace dtproto {
namespace robot_msgs {
PROTOBUF_CONSTEXPR RobotState::RobotState(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.joint_state_)*/{}
  , /*decltype(_impl_.base_pose_)*/nullptr
  , /*decltype(_impl_.base_velocity_)*/nullptr
  , /*decltype(_impl_.battery_state_)*/nullptr
  , /*decltype(_impl_.status_)*/0u
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct RobotStateDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RobotStateDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~RobotStateDefaultTypeInternal() {}
  union {
    RobotState _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RobotStateDefaultTypeInternal _RobotState_default_instance_;
PROTOBUF_CONSTEXPR RobotStateTimeStamped::RobotStateTimeStamped(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.header_)*/nullptr
  , /*decltype(_impl_.state_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct RobotStateTimeStampedDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RobotStateTimeStampedDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~RobotStateTimeStampedDefaultTypeInternal() {}
  union {
    RobotStateTimeStamped _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RobotStateTimeStampedDefaultTypeInternal _RobotStateTimeStamped_default_instance_;
}  // namespace robot_msgs
}  // namespace dtproto
static ::_pb::Metadata file_level_metadata_dtProto_2frobot_5fmsgs_2fRobotState_2eproto[2];
static constexpr ::_pb::EnumDescriptor const** file_level_enum_descriptors_dtProto_2frobot_5fmsgs_2fRobotState_2eproto = nullptr;
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_dtProto_2frobot_5fmsgs_2fRobotState_2eproto = nullptr;

const uint32_t TableStruct_dtProto_2frobot_5fmsgs_2fRobotState_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::dtproto::robot_msgs::RobotState, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::dtproto::robot_msgs::RobotState, _impl_.base_pose_),
  PROTOBUF_FIELD_OFFSET(::dtproto::robot_msgs::RobotState, _impl_.base_velocity_),
  PROTOBUF_FIELD_OFFSET(::dtproto::robot_msgs::RobotState, _impl_.joint_state_),
  PROTOBUF_FIELD_OFFSET(::dtproto::robot_msgs::RobotState, _impl_.battery_state_),
  PROTOBUF_FIELD_OFFSET(::dtproto::robot_msgs::RobotState, _impl_.status_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::dtproto::robot_msgs::RobotStateTimeStamped, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::dtproto::robot_msgs::RobotStateTimeStamped, _impl_.header_),
  PROTOBUF_FIELD_OFFSET(::dtproto::robot_msgs::RobotStateTimeStamped, _impl_.state_),
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::dtproto::robot_msgs::RobotState)},
  { 11, -1, -1, sizeof(::dtproto::robot_msgs::RobotStateTimeStamped)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::dtproto::robot_msgs::_RobotState_default_instance_._instance,
  &::dtproto::robot_msgs::_RobotStateTimeStamped_default_instance_._instance,
};

const char descriptor_table_protodef_dtProto_2frobot_5fmsgs_2fRobotState_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n#dtProto/robot_msgs/RobotState.proto\022\022d"
  "tproto.robot_msgs\032\035dtProto/std_msgs/Head"
  "er.proto\032!dtProto/geometry_msgs/Point.pr"
  "oto\032\"dtProto/geometry_msgs/Vector.proto\032"
  "\"dtProto/geometry_msgs/Matrix.proto\032 dtP"
  "roto/geometry_msgs/Pose.proto\032!dtProto/g"
  "eometry_msgs/Twist.proto\032\'dtProto/geomet"
  "ry_msgs/Orientation.proto\032$dtProto/senso"
  "r_msgs/JointState.proto\032&dtProto/sensor_"
  "msgs/BatteryState.proto\"\363\001\n\nRobotState\0220"
  "\n\tbase_pose\030\001 \001(\0132\035.dtproto.geometry_msg"
  "s.Pose3d\0223\n\rbase_velocity\030\002 \001(\0132\034.dtprot"
  "o.geometry_msgs.Twist\0224\n\013joint_state\030\003 \003"
  "(\0132\037.dtproto.sensor_msgs.JointState\0228\n\rb"
  "attery_state\030\004 \001(\0132!.dtproto.sensor_msgs"
  ".BatteryState\022\016\n\006status\030\005 \001(\r\"p\n\025RobotSt"
  "ateTimeStamped\022(\n\006header\030\001 \001(\0132\030.dtproto"
  ".std_msgs.Header\022-\n\005state\030\002 \001(\0132\036.dtprot"
  "o.robot_msgs.RobotStateb\006proto3"
  ;
static const ::_pbi::DescriptorTable* const descriptor_table_dtProto_2frobot_5fmsgs_2fRobotState_2eproto_deps[9] = {
  &::descriptor_table_dtProto_2fgeometry_5fmsgs_2fMatrix_2eproto,
  &::descriptor_table_dtProto_2fgeometry_5fmsgs_2fOrientation_2eproto,
  &::descriptor_table_dtProto_2fgeometry_5fmsgs_2fPoint_2eproto,
  &::descriptor_table_dtProto_2fgeometry_5fmsgs_2fPose_2eproto,
  &::descriptor_table_dtProto_2fgeometry_5fmsgs_2fTwist_2eproto,
  &::descriptor_table_dtProto_2fgeometry_5fmsgs_2fVector_2eproto,
  &::descriptor_table_dtProto_2fsensor_5fmsgs_2fBatteryState_2eproto,
  &::descriptor_table_dtProto_2fsensor_5fmsgs_2fJointState_2eproto,
  &::descriptor_table_dtProto_2fstd_5fmsgs_2fHeader_2eproto,
};
static ::_pbi::once_flag descriptor_table_dtProto_2frobot_5fmsgs_2fRobotState_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_dtProto_2frobot_5fmsgs_2fRobotState_2eproto = {
    false, false, 751, descriptor_table_protodef_dtProto_2frobot_5fmsgs_2fRobotState_2eproto,
    "dtProto/robot_msgs/RobotState.proto",
    &descriptor_table_dtProto_2frobot_5fmsgs_2fRobotState_2eproto_once, descriptor_table_dtProto_2frobot_5fmsgs_2fRobotState_2eproto_deps, 9, 2,
    schemas, file_default_instances, TableStruct_dtProto_2frobot_5fmsgs_2fRobotState_2eproto::offsets,
    file_level_metadata_dtProto_2frobot_5fmsgs_2fRobotState_2eproto, file_level_enum_descriptors_dtProto_2frobot_5fmsgs_2fRobotState_2eproto,
    file_level_service_descriptors_dtProto_2frobot_5fmsgs_2fRobotState_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_dtProto_2frobot_5fmsgs_2fRobotState_2eproto_getter() {
  return &descriptor_table_dtProto_2frobot_5fmsgs_2fRobotState_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_dtProto_2frobot_5fmsgs_2fRobotState_2eproto(&descriptor_table_dtProto_2frobot_5fmsgs_2fRobotState_2eproto);
namespace dtproto {
namespace robot_msgs {

// ===================================================================

class RobotState::_Internal {
 public:
  static const ::dtproto::geometry_msgs::Pose3d& base_pose(const RobotState* msg);
  static const ::dtproto::geometry_msgs::Twist& base_velocity(const RobotState* msg);
  static const ::dtproto::sensor_msgs::BatteryState& battery_state(const RobotState* msg);
};

const ::dtproto::geometry_msgs::Pose3d&
RobotState::_Internal::base_pose(const RobotState* msg) {
  return *msg->_impl_.base_pose_;
}
const ::dtproto::geometry_msgs::Twist&
RobotState::_Internal::base_velocity(const RobotState* msg) {
  return *msg->_impl_.base_velocity_;
}
const ::dtproto::sensor_msgs::BatteryState&
RobotState::_Internal::battery_state(const RobotState* msg) {
  return *msg->_impl_.battery_state_;
}
void RobotState::clear_base_pose() {
  if (GetArenaForAllocation() == nullptr && _impl_.base_pose_ != nullptr) {
    delete _impl_.base_pose_;
  }
  _impl_.base_pose_ = nullptr;
}
void RobotState::clear_base_velocity() {
  if (GetArenaForAllocation() == nullptr && _impl_.base_velocity_ != nullptr) {
    delete _impl_.base_velocity_;
  }
  _impl_.base_velocity_ = nullptr;
}
void RobotState::clear_joint_state() {
  _impl_.joint_state_.Clear();
}
void RobotState::clear_battery_state() {
  if (GetArenaForAllocation() == nullptr && _impl_.battery_state_ != nullptr) {
    delete _impl_.battery_state_;
  }
  _impl_.battery_state_ = nullptr;
}
RobotState::RobotState(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:dtproto.robot_msgs.RobotState)
}
RobotState::RobotState(const RobotState& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  RobotState* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.joint_state_){from._impl_.joint_state_}
    , decltype(_impl_.base_pose_){nullptr}
    , decltype(_impl_.base_velocity_){nullptr}
    , decltype(_impl_.battery_state_){nullptr}
    , decltype(_impl_.status_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_base_pose()) {
    _this->_impl_.base_pose_ = new ::dtproto::geometry_msgs::Pose3d(*from._impl_.base_pose_);
  }
  if (from._internal_has_base_velocity()) {
    _this->_impl_.base_velocity_ = new ::dtproto::geometry_msgs::Twist(*from._impl_.base_velocity_);
  }
  if (from._internal_has_battery_state()) {
    _this->_impl_.battery_state_ = new ::dtproto::sensor_msgs::BatteryState(*from._impl_.battery_state_);
  }
  _this->_impl_.status_ = from._impl_.status_;
  // @@protoc_insertion_point(copy_constructor:dtproto.robot_msgs.RobotState)
}

inline void RobotState::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.joint_state_){arena}
    , decltype(_impl_.base_pose_){nullptr}
    , decltype(_impl_.base_velocity_){nullptr}
    , decltype(_impl_.battery_state_){nullptr}
    , decltype(_impl_.status_){0u}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

RobotState::~RobotState() {
  // @@protoc_insertion_point(destructor:dtproto.robot_msgs.RobotState)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void RobotState::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.joint_state_.~RepeatedPtrField();
  if (this != internal_default_instance()) delete _impl_.base_pose_;
  if (this != internal_default_instance()) delete _impl_.base_velocity_;
  if (this != internal_default_instance()) delete _impl_.battery_state_;
}

void RobotState::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void RobotState::Clear() {
// @@protoc_insertion_point(message_clear_start:dtproto.robot_msgs.RobotState)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.joint_state_.Clear();
  if (GetArenaForAllocation() == nullptr && _impl_.base_pose_ != nullptr) {
    delete _impl_.base_pose_;
  }
  _impl_.base_pose_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.base_velocity_ != nullptr) {
    delete _impl_.base_velocity_;
  }
  _impl_.base_velocity_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.battery_state_ != nullptr) {
    delete _impl_.battery_state_;
  }
  _impl_.battery_state_ = nullptr;
  _impl_.status_ = 0u;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RobotState::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .dtproto.geometry_msgs.Pose3d base_pose = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_base_pose(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .dtproto.geometry_msgs.Twist base_velocity = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_base_velocity(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated .dtproto.sensor_msgs.JointState joint_state = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_joint_state(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else
          goto handle_unusual;
        continue;
      // .dtproto.sensor_msgs.BatteryState battery_state = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_battery_state(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 status = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          _impl_.status_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* RobotState::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:dtproto.robot_msgs.RobotState)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .dtproto.geometry_msgs.Pose3d base_pose = 1;
  if (this->_internal_has_base_pose()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::base_pose(this),
        _Internal::base_pose(this).GetCachedSize(), target, stream);
  }

  // .dtproto.geometry_msgs.Twist base_velocity = 2;
  if (this->_internal_has_base_velocity()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::base_velocity(this),
        _Internal::base_velocity(this).GetCachedSize(), target, stream);
  }

  // repeated .dtproto.sensor_msgs.JointState joint_state = 3;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_joint_state_size()); i < n; i++) {
    const auto& repfield = this->_internal_joint_state(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(3, repfield, repfield.GetCachedSize(), target, stream);
  }

  // .dtproto.sensor_msgs.BatteryState battery_state = 4;
  if (this->_internal_has_battery_state()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(4, _Internal::battery_state(this),
        _Internal::battery_state(this).GetCachedSize(), target, stream);
  }

  // uint32 status = 5;
  if (this->_internal_status() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(5, this->_internal_status(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dtproto.robot_msgs.RobotState)
  return target;
}

size_t RobotState::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dtproto.robot_msgs.RobotState)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .dtproto.sensor_msgs.JointState joint_state = 3;
  total_size += 1UL * this->_internal_joint_state_size();
  for (const auto& msg : this->_impl_.joint_state_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // .dtproto.geometry_msgs.Pose3d base_pose = 1;
  if (this->_internal_has_base_pose()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.base_pose_);
  }

  // .dtproto.geometry_msgs.Twist base_velocity = 2;
  if (this->_internal_has_base_velocity()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.base_velocity_);
  }

  // .dtproto.sensor_msgs.BatteryState battery_state = 4;
  if (this->_internal_has_battery_state()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.battery_state_);
  }

  // uint32 status = 5;
  if (this->_internal_status() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_status());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData RobotState::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    RobotState::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*RobotState::GetClassData() const { return &_class_data_; }


void RobotState::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<RobotState*>(&to_msg);
  auto& from = static_cast<const RobotState&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:dtproto.robot_msgs.RobotState)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.joint_state_.MergeFrom(from._impl_.joint_state_);
  if (from._internal_has_base_pose()) {
    _this->_internal_mutable_base_pose()->::dtproto::geometry_msgs::Pose3d::MergeFrom(
        from._internal_base_pose());
  }
  if (from._internal_has_base_velocity()) {
    _this->_internal_mutable_base_velocity()->::dtproto::geometry_msgs::Twist::MergeFrom(
        from._internal_base_velocity());
  }
  if (from._internal_has_battery_state()) {
    _this->_internal_mutable_battery_state()->::dtproto::sensor_msgs::BatteryState::MergeFrom(
        from._internal_battery_state());
  }
  if (from._internal_status() != 0) {
    _this->_internal_set_status(from._internal_status());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void RobotState::CopyFrom(const RobotState& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dtproto.robot_msgs.RobotState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RobotState::IsInitialized() const {
  return true;
}

void RobotState::InternalSwap(RobotState* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.joint_state_.InternalSwap(&other->_impl_.joint_state_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(RobotState, _impl_.status_)
      + sizeof(RobotState::_impl_.status_)
      - PROTOBUF_FIELD_OFFSET(RobotState, _impl_.base_pose_)>(
          reinterpret_cast<char*>(&_impl_.base_pose_),
          reinterpret_cast<char*>(&other->_impl_.base_pose_));
}

::PROTOBUF_NAMESPACE_ID::Metadata RobotState::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_dtProto_2frobot_5fmsgs_2fRobotState_2eproto_getter, &descriptor_table_dtProto_2frobot_5fmsgs_2fRobotState_2eproto_once,
      file_level_metadata_dtProto_2frobot_5fmsgs_2fRobotState_2eproto[0]);
}

// ===================================================================

class RobotStateTimeStamped::_Internal {
 public:
  static const ::dtproto::std_msgs::Header& header(const RobotStateTimeStamped* msg);
  static const ::dtproto::robot_msgs::RobotState& state(const RobotStateTimeStamped* msg);
};

const ::dtproto::std_msgs::Header&
RobotStateTimeStamped::_Internal::header(const RobotStateTimeStamped* msg) {
  return *msg->_impl_.header_;
}
const ::dtproto::robot_msgs::RobotState&
RobotStateTimeStamped::_Internal::state(const RobotStateTimeStamped* msg) {
  return *msg->_impl_.state_;
}
void RobotStateTimeStamped::clear_header() {
  if (GetArenaForAllocation() == nullptr && _impl_.header_ != nullptr) {
    delete _impl_.header_;
  }
  _impl_.header_ = nullptr;
}
RobotStateTimeStamped::RobotStateTimeStamped(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:dtproto.robot_msgs.RobotStateTimeStamped)
}
RobotStateTimeStamped::RobotStateTimeStamped(const RobotStateTimeStamped& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  RobotStateTimeStamped* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.header_){nullptr}
    , decltype(_impl_.state_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_header()) {
    _this->_impl_.header_ = new ::dtproto::std_msgs::Header(*from._impl_.header_);
  }
  if (from._internal_has_state()) {
    _this->_impl_.state_ = new ::dtproto::robot_msgs::RobotState(*from._impl_.state_);
  }
  // @@protoc_insertion_point(copy_constructor:dtproto.robot_msgs.RobotStateTimeStamped)
}

inline void RobotStateTimeStamped::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.header_){nullptr}
    , decltype(_impl_.state_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

RobotStateTimeStamped::~RobotStateTimeStamped() {
  // @@protoc_insertion_point(destructor:dtproto.robot_msgs.RobotStateTimeStamped)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void RobotStateTimeStamped::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.header_;
  if (this != internal_default_instance()) delete _impl_.state_;
}

void RobotStateTimeStamped::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void RobotStateTimeStamped::Clear() {
// @@protoc_insertion_point(message_clear_start:dtproto.robot_msgs.RobotStateTimeStamped)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.header_ != nullptr) {
    delete _impl_.header_;
  }
  _impl_.header_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.state_ != nullptr) {
    delete _impl_.state_;
  }
  _impl_.state_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RobotStateTimeStamped::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .dtproto.std_msgs.Header header = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_header(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .dtproto.robot_msgs.RobotState state = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_state(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* RobotStateTimeStamped::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:dtproto.robot_msgs.RobotStateTimeStamped)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .dtproto.std_msgs.Header header = 1;
  if (this->_internal_has_header()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::header(this),
        _Internal::header(this).GetCachedSize(), target, stream);
  }

  // .dtproto.robot_msgs.RobotState state = 2;
  if (this->_internal_has_state()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::state(this),
        _Internal::state(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dtproto.robot_msgs.RobotStateTimeStamped)
  return target;
}

size_t RobotStateTimeStamped::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dtproto.robot_msgs.RobotStateTimeStamped)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .dtproto.std_msgs.Header header = 1;
  if (this->_internal_has_header()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.header_);
  }

  // .dtproto.robot_msgs.RobotState state = 2;
  if (this->_internal_has_state()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.state_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData RobotStateTimeStamped::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    RobotStateTimeStamped::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*RobotStateTimeStamped::GetClassData() const { return &_class_data_; }


void RobotStateTimeStamped::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<RobotStateTimeStamped*>(&to_msg);
  auto& from = static_cast<const RobotStateTimeStamped&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:dtproto.robot_msgs.RobotStateTimeStamped)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_header()) {
    _this->_internal_mutable_header()->::dtproto::std_msgs::Header::MergeFrom(
        from._internal_header());
  }
  if (from._internal_has_state()) {
    _this->_internal_mutable_state()->::dtproto::robot_msgs::RobotState::MergeFrom(
        from._internal_state());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void RobotStateTimeStamped::CopyFrom(const RobotStateTimeStamped& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dtproto.robot_msgs.RobotStateTimeStamped)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RobotStateTimeStamped::IsInitialized() const {
  return true;
}

void RobotStateTimeStamped::InternalSwap(RobotStateTimeStamped* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(RobotStateTimeStamped, _impl_.state_)
      + sizeof(RobotStateTimeStamped::_impl_.state_)
      - PROTOBUF_FIELD_OFFSET(RobotStateTimeStamped, _impl_.header_)>(
          reinterpret_cast<char*>(&_impl_.header_),
          reinterpret_cast<char*>(&other->_impl_.header_));
}

::PROTOBUF_NAMESPACE_ID::Metadata RobotStateTimeStamped::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_dtProto_2frobot_5fmsgs_2fRobotState_2eproto_getter, &descriptor_table_dtProto_2frobot_5fmsgs_2fRobotState_2eproto_once,
      file_level_metadata_dtProto_2frobot_5fmsgs_2fRobotState_2eproto[1]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace robot_msgs
}  // namespace dtproto
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::dtproto::robot_msgs::RobotState*
Arena::CreateMaybeMessage< ::dtproto::robot_msgs::RobotState >(Arena* arena) {
  return Arena::CreateMessageInternal< ::dtproto::robot_msgs::RobotState >(arena);
}
template<> PROTOBUF_NOINLINE ::dtproto::robot_msgs::RobotStateTimeStamped*
Arena::CreateMaybeMessage< ::dtproto::robot_msgs::RobotStateTimeStamped >(Arena* arena) {
  return Arena::CreateMessageInternal< ::dtproto::robot_msgs::RobotStateTimeStamped >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
