// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: dtProto/robot_msgs/JointControl.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_dtProto_2frobot_5fmsgs_2fJointControl_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_dtProto_2frobot_5fmsgs_2fJointControl_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3021000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3021012 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "dtProto/std_msgs/Header.pb.h"
#include "dtProto/sensor_msgs/JointState.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_dtProto_2frobot_5fmsgs_2fJointControl_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_dtProto_2frobot_5fmsgs_2fJointControl_2eproto {
  static const uint32_t offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_dtProto_2frobot_5fmsgs_2fJointControl_2eproto;
namespace dtproto {
namespace robot_msgs {
class JointControl;
struct JointControlDefaultTypeInternal;
extern JointControlDefaultTypeInternal _JointControl_default_instance_;
class JointControlTimeStamped;
struct JointControlTimeStampedDefaultTypeInternal;
extern JointControlTimeStampedDefaultTypeInternal _JointControlTimeStamped_default_instance_;
}  // namespace robot_msgs
}  // namespace dtproto
PROTOBUF_NAMESPACE_OPEN
template<> ::dtproto::robot_msgs::JointControl* Arena::CreateMaybeMessage<::dtproto::robot_msgs::JointControl>(Arena*);
template<> ::dtproto::robot_msgs::JointControlTimeStamped* Arena::CreateMaybeMessage<::dtproto::robot_msgs::JointControlTimeStamped>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace dtproto {
namespace robot_msgs {

enum JointControl_ControlMode : int {
  JointControl_ControlMode_SET_POSITION = 0,
  JointControl_ControlMode_SET_VELOCITY = 1,
  JointControl_ControlMode_SET_TORQUE = 2,
  JointControl_ControlMode_JointControl_ControlMode_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<int32_t>::min(),
  JointControl_ControlMode_JointControl_ControlMode_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<int32_t>::max()
};
bool JointControl_ControlMode_IsValid(int value);
constexpr JointControl_ControlMode JointControl_ControlMode_ControlMode_MIN = JointControl_ControlMode_SET_POSITION;
constexpr JointControl_ControlMode JointControl_ControlMode_ControlMode_MAX = JointControl_ControlMode_SET_TORQUE;
constexpr int JointControl_ControlMode_ControlMode_ARRAYSIZE = JointControl_ControlMode_ControlMode_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* JointControl_ControlMode_descriptor();
template<typename T>
inline const std::string& JointControl_ControlMode_Name(T enum_t_value) {
  static_assert(::std::is_same<T, JointControl_ControlMode>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function JointControl_ControlMode_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    JointControl_ControlMode_descriptor(), enum_t_value);
}
inline bool JointControl_ControlMode_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, JointControl_ControlMode* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<JointControl_ControlMode>(
    JointControl_ControlMode_descriptor(), name, value);
}
// ===================================================================

class JointControl final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:dtproto.robot_msgs.JointControl) */ {
 public:
  inline JointControl() : JointControl(nullptr) {}
  ~JointControl() override;
  explicit PROTOBUF_CONSTEXPR JointControl(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  JointControl(const JointControl& from);
  JointControl(JointControl&& from) noexcept
    : JointControl() {
    *this = ::std::move(from);
  }

  inline JointControl& operator=(const JointControl& from) {
    CopyFrom(from);
    return *this;
  }
  inline JointControl& operator=(JointControl&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const JointControl& default_instance() {
    return *internal_default_instance();
  }
  static inline const JointControl* internal_default_instance() {
    return reinterpret_cast<const JointControl*>(
               &_JointControl_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(JointControl& a, JointControl& b) {
    a.Swap(&b);
  }
  inline void Swap(JointControl* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(JointControl* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  JointControl* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<JointControl>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const JointControl& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const JointControl& from) {
    JointControl::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(JointControl* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "dtproto.robot_msgs.JointControl";
  }
  protected:
  explicit JointControl(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef JointControl_ControlMode ControlMode;
  static constexpr ControlMode SET_POSITION =
    JointControl_ControlMode_SET_POSITION;
  static constexpr ControlMode SET_VELOCITY =
    JointControl_ControlMode_SET_VELOCITY;
  static constexpr ControlMode SET_TORQUE =
    JointControl_ControlMode_SET_TORQUE;
  static inline bool ControlMode_IsValid(int value) {
    return JointControl_ControlMode_IsValid(value);
  }
  static constexpr ControlMode ControlMode_MIN =
    JointControl_ControlMode_ControlMode_MIN;
  static constexpr ControlMode ControlMode_MAX =
    JointControl_ControlMode_ControlMode_MAX;
  static constexpr int ControlMode_ARRAYSIZE =
    JointControl_ControlMode_ControlMode_ARRAYSIZE;
  static inline const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor*
  ControlMode_descriptor() {
    return JointControl_ControlMode_descriptor();
  }
  template<typename T>
  static inline const std::string& ControlMode_Name(T enum_t_value) {
    static_assert(::std::is_same<T, ControlMode>::value ||
      ::std::is_integral<T>::value,
      "Incorrect type passed to function ControlMode_Name.");
    return JointControl_ControlMode_Name(enum_t_value);
  }
  static inline bool ControlMode_Parse(::PROTOBUF_NAMESPACE_ID::ConstStringParam name,
      ControlMode* value) {
    return JointControl_ControlMode_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  enum : int {
    kJointStateFieldNumber = 2,
    kModeFieldNumber = 1,
    kDurationFieldNumber = 3,
  };
  // repeated .dtproto.sensor_msgs.JointState joint_state = 2;
  int joint_state_size() const;
  private:
  int _internal_joint_state_size() const;
  public:
  void clear_joint_state();
  ::dtproto::sensor_msgs::JointState* mutable_joint_state(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::dtproto::sensor_msgs::JointState >*
      mutable_joint_state();
  private:
  const ::dtproto::sensor_msgs::JointState& _internal_joint_state(int index) const;
  ::dtproto::sensor_msgs::JointState* _internal_add_joint_state();
  public:
  const ::dtproto::sensor_msgs::JointState& joint_state(int index) const;
  ::dtproto::sensor_msgs::JointState* add_joint_state();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::dtproto::sensor_msgs::JointState >&
      joint_state() const;

  // .dtproto.robot_msgs.JointControl.ControlMode mode = 1;
  void clear_mode();
  ::dtproto::robot_msgs::JointControl_ControlMode mode() const;
  void set_mode(::dtproto::robot_msgs::JointControl_ControlMode value);
  private:
  ::dtproto::robot_msgs::JointControl_ControlMode _internal_mode() const;
  void _internal_set_mode(::dtproto::robot_msgs::JointControl_ControlMode value);
  public:

  // float duration = 3;
  void clear_duration();
  float duration() const;
  void set_duration(float value);
  private:
  float _internal_duration() const;
  void _internal_set_duration(float value);
  public:

  // @@protoc_insertion_point(class_scope:dtproto.robot_msgs.JointControl)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::dtproto::sensor_msgs::JointState > joint_state_;
    int mode_;
    float duration_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_dtProto_2frobot_5fmsgs_2fJointControl_2eproto;
};
// -------------------------------------------------------------------

class JointControlTimeStamped final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:dtproto.robot_msgs.JointControlTimeStamped) */ {
 public:
  inline JointControlTimeStamped() : JointControlTimeStamped(nullptr) {}
  ~JointControlTimeStamped() override;
  explicit PROTOBUF_CONSTEXPR JointControlTimeStamped(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  JointControlTimeStamped(const JointControlTimeStamped& from);
  JointControlTimeStamped(JointControlTimeStamped&& from) noexcept
    : JointControlTimeStamped() {
    *this = ::std::move(from);
  }

  inline JointControlTimeStamped& operator=(const JointControlTimeStamped& from) {
    CopyFrom(from);
    return *this;
  }
  inline JointControlTimeStamped& operator=(JointControlTimeStamped&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const JointControlTimeStamped& default_instance() {
    return *internal_default_instance();
  }
  static inline const JointControlTimeStamped* internal_default_instance() {
    return reinterpret_cast<const JointControlTimeStamped*>(
               &_JointControlTimeStamped_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(JointControlTimeStamped& a, JointControlTimeStamped& b) {
    a.Swap(&b);
  }
  inline void Swap(JointControlTimeStamped* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(JointControlTimeStamped* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  JointControlTimeStamped* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<JointControlTimeStamped>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const JointControlTimeStamped& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const JointControlTimeStamped& from) {
    JointControlTimeStamped::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(JointControlTimeStamped* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "dtproto.robot_msgs.JointControlTimeStamped";
  }
  protected:
  explicit JointControlTimeStamped(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kHeaderFieldNumber = 1,
    kCmdFieldNumber = 2,
  };
  // .dtproto.std_msgs.Header header = 1;
  bool has_header() const;
  private:
  bool _internal_has_header() const;
  public:
  void clear_header();
  const ::dtproto::std_msgs::Header& header() const;
  PROTOBUF_NODISCARD ::dtproto::std_msgs::Header* release_header();
  ::dtproto::std_msgs::Header* mutable_header();
  void set_allocated_header(::dtproto::std_msgs::Header* header);
  private:
  const ::dtproto::std_msgs::Header& _internal_header() const;
  ::dtproto::std_msgs::Header* _internal_mutable_header();
  public:
  void unsafe_arena_set_allocated_header(
      ::dtproto::std_msgs::Header* header);
  ::dtproto::std_msgs::Header* unsafe_arena_release_header();

  // .dtproto.robot_msgs.JointControl cmd = 2;
  bool has_cmd() const;
  private:
  bool _internal_has_cmd() const;
  public:
  void clear_cmd();
  const ::dtproto::robot_msgs::JointControl& cmd() const;
  PROTOBUF_NODISCARD ::dtproto::robot_msgs::JointControl* release_cmd();
  ::dtproto::robot_msgs::JointControl* mutable_cmd();
  void set_allocated_cmd(::dtproto::robot_msgs::JointControl* cmd);
  private:
  const ::dtproto::robot_msgs::JointControl& _internal_cmd() const;
  ::dtproto::robot_msgs::JointControl* _internal_mutable_cmd();
  public:
  void unsafe_arena_set_allocated_cmd(
      ::dtproto::robot_msgs::JointControl* cmd);
  ::dtproto::robot_msgs::JointControl* unsafe_arena_release_cmd();

  // @@protoc_insertion_point(class_scope:dtproto.robot_msgs.JointControlTimeStamped)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::dtproto::std_msgs::Header* header_;
    ::dtproto::robot_msgs::JointControl* cmd_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_dtProto_2frobot_5fmsgs_2fJointControl_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// JointControl

// .dtproto.robot_msgs.JointControl.ControlMode mode = 1;
inline void JointControl::clear_mode() {
  _impl_.mode_ = 0;
}
inline ::dtproto::robot_msgs::JointControl_ControlMode JointControl::_internal_mode() const {
  return static_cast< ::dtproto::robot_msgs::JointControl_ControlMode >(_impl_.mode_);
}
inline ::dtproto::robot_msgs::JointControl_ControlMode JointControl::mode() const {
  // @@protoc_insertion_point(field_get:dtproto.robot_msgs.JointControl.mode)
  return _internal_mode();
}
inline void JointControl::_internal_set_mode(::dtproto::robot_msgs::JointControl_ControlMode value) {
  
  _impl_.mode_ = value;
}
inline void JointControl::set_mode(::dtproto::robot_msgs::JointControl_ControlMode value) {
  _internal_set_mode(value);
  // @@protoc_insertion_point(field_set:dtproto.robot_msgs.JointControl.mode)
}

// repeated .dtproto.sensor_msgs.JointState joint_state = 2;
inline int JointControl::_internal_joint_state_size() const {
  return _impl_.joint_state_.size();
}
inline int JointControl::joint_state_size() const {
  return _internal_joint_state_size();
}
inline ::dtproto::sensor_msgs::JointState* JointControl::mutable_joint_state(int index) {
  // @@protoc_insertion_point(field_mutable:dtproto.robot_msgs.JointControl.joint_state)
  return _impl_.joint_state_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::dtproto::sensor_msgs::JointState >*
JointControl::mutable_joint_state() {
  // @@protoc_insertion_point(field_mutable_list:dtproto.robot_msgs.JointControl.joint_state)
  return &_impl_.joint_state_;
}
inline const ::dtproto::sensor_msgs::JointState& JointControl::_internal_joint_state(int index) const {
  return _impl_.joint_state_.Get(index);
}
inline const ::dtproto::sensor_msgs::JointState& JointControl::joint_state(int index) const {
  // @@protoc_insertion_point(field_get:dtproto.robot_msgs.JointControl.joint_state)
  return _internal_joint_state(index);
}
inline ::dtproto::sensor_msgs::JointState* JointControl::_internal_add_joint_state() {
  return _impl_.joint_state_.Add();
}
inline ::dtproto::sensor_msgs::JointState* JointControl::add_joint_state() {
  ::dtproto::sensor_msgs::JointState* _add = _internal_add_joint_state();
  // @@protoc_insertion_point(field_add:dtproto.robot_msgs.JointControl.joint_state)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::dtproto::sensor_msgs::JointState >&
JointControl::joint_state() const {
  // @@protoc_insertion_point(field_list:dtproto.robot_msgs.JointControl.joint_state)
  return _impl_.joint_state_;
}

// float duration = 3;
inline void JointControl::clear_duration() {
  _impl_.duration_ = 0;
}
inline float JointControl::_internal_duration() const {
  return _impl_.duration_;
}
inline float JointControl::duration() const {
  // @@protoc_insertion_point(field_get:dtproto.robot_msgs.JointControl.duration)
  return _internal_duration();
}
inline void JointControl::_internal_set_duration(float value) {
  
  _impl_.duration_ = value;
}
inline void JointControl::set_duration(float value) {
  _internal_set_duration(value);
  // @@protoc_insertion_point(field_set:dtproto.robot_msgs.JointControl.duration)
}

// -------------------------------------------------------------------

// JointControlTimeStamped

// .dtproto.std_msgs.Header header = 1;
inline bool JointControlTimeStamped::_internal_has_header() const {
  return this != internal_default_instance() && _impl_.header_ != nullptr;
}
inline bool JointControlTimeStamped::has_header() const {
  return _internal_has_header();
}
inline const ::dtproto::std_msgs::Header& JointControlTimeStamped::_internal_header() const {
  const ::dtproto::std_msgs::Header* p = _impl_.header_;
  return p != nullptr ? *p : reinterpret_cast<const ::dtproto::std_msgs::Header&>(
      ::dtproto::std_msgs::_Header_default_instance_);
}
inline const ::dtproto::std_msgs::Header& JointControlTimeStamped::header() const {
  // @@protoc_insertion_point(field_get:dtproto.robot_msgs.JointControlTimeStamped.header)
  return _internal_header();
}
inline void JointControlTimeStamped::unsafe_arena_set_allocated_header(
    ::dtproto::std_msgs::Header* header) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.header_);
  }
  _impl_.header_ = header;
  if (header) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:dtproto.robot_msgs.JointControlTimeStamped.header)
}
inline ::dtproto::std_msgs::Header* JointControlTimeStamped::release_header() {
  
  ::dtproto::std_msgs::Header* temp = _impl_.header_;
  _impl_.header_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::dtproto::std_msgs::Header* JointControlTimeStamped::unsafe_arena_release_header() {
  // @@protoc_insertion_point(field_release:dtproto.robot_msgs.JointControlTimeStamped.header)
  
  ::dtproto::std_msgs::Header* temp = _impl_.header_;
  _impl_.header_ = nullptr;
  return temp;
}
inline ::dtproto::std_msgs::Header* JointControlTimeStamped::_internal_mutable_header() {
  
  if (_impl_.header_ == nullptr) {
    auto* p = CreateMaybeMessage<::dtproto::std_msgs::Header>(GetArenaForAllocation());
    _impl_.header_ = p;
  }
  return _impl_.header_;
}
inline ::dtproto::std_msgs::Header* JointControlTimeStamped::mutable_header() {
  ::dtproto::std_msgs::Header* _msg = _internal_mutable_header();
  // @@protoc_insertion_point(field_mutable:dtproto.robot_msgs.JointControlTimeStamped.header)
  return _msg;
}
inline void JointControlTimeStamped::set_allocated_header(::dtproto::std_msgs::Header* header) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.header_);
  }
  if (header) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(header));
    if (message_arena != submessage_arena) {
      header = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, header, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.header_ = header;
  // @@protoc_insertion_point(field_set_allocated:dtproto.robot_msgs.JointControlTimeStamped.header)
}

// .dtproto.robot_msgs.JointControl cmd = 2;
inline bool JointControlTimeStamped::_internal_has_cmd() const {
  return this != internal_default_instance() && _impl_.cmd_ != nullptr;
}
inline bool JointControlTimeStamped::has_cmd() const {
  return _internal_has_cmd();
}
inline void JointControlTimeStamped::clear_cmd() {
  if (GetArenaForAllocation() == nullptr && _impl_.cmd_ != nullptr) {
    delete _impl_.cmd_;
  }
  _impl_.cmd_ = nullptr;
}
inline const ::dtproto::robot_msgs::JointControl& JointControlTimeStamped::_internal_cmd() const {
  const ::dtproto::robot_msgs::JointControl* p = _impl_.cmd_;
  return p != nullptr ? *p : reinterpret_cast<const ::dtproto::robot_msgs::JointControl&>(
      ::dtproto::robot_msgs::_JointControl_default_instance_);
}
inline const ::dtproto::robot_msgs::JointControl& JointControlTimeStamped::cmd() const {
  // @@protoc_insertion_point(field_get:dtproto.robot_msgs.JointControlTimeStamped.cmd)
  return _internal_cmd();
}
inline void JointControlTimeStamped::unsafe_arena_set_allocated_cmd(
    ::dtproto::robot_msgs::JointControl* cmd) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.cmd_);
  }
  _impl_.cmd_ = cmd;
  if (cmd) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:dtproto.robot_msgs.JointControlTimeStamped.cmd)
}
inline ::dtproto::robot_msgs::JointControl* JointControlTimeStamped::release_cmd() {
  
  ::dtproto::robot_msgs::JointControl* temp = _impl_.cmd_;
  _impl_.cmd_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::dtproto::robot_msgs::JointControl* JointControlTimeStamped::unsafe_arena_release_cmd() {
  // @@protoc_insertion_point(field_release:dtproto.robot_msgs.JointControlTimeStamped.cmd)
  
  ::dtproto::robot_msgs::JointControl* temp = _impl_.cmd_;
  _impl_.cmd_ = nullptr;
  return temp;
}
inline ::dtproto::robot_msgs::JointControl* JointControlTimeStamped::_internal_mutable_cmd() {
  
  if (_impl_.cmd_ == nullptr) {
    auto* p = CreateMaybeMessage<::dtproto::robot_msgs::JointControl>(GetArenaForAllocation());
    _impl_.cmd_ = p;
  }
  return _impl_.cmd_;
}
inline ::dtproto::robot_msgs::JointControl* JointControlTimeStamped::mutable_cmd() {
  ::dtproto::robot_msgs::JointControl* _msg = _internal_mutable_cmd();
  // @@protoc_insertion_point(field_mutable:dtproto.robot_msgs.JointControlTimeStamped.cmd)
  return _msg;
}
inline void JointControlTimeStamped::set_allocated_cmd(::dtproto::robot_msgs::JointControl* cmd) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.cmd_;
  }
  if (cmd) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(cmd);
    if (message_arena != submessage_arena) {
      cmd = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, cmd, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.cmd_ = cmd;
  // @@protoc_insertion_point(field_set_allocated:dtproto.robot_msgs.JointControlTimeStamped.cmd)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace robot_msgs
}  // namespace dtproto

PROTOBUF_NAMESPACE_OPEN

template <> struct is_proto_enum< ::dtproto::robot_msgs::JointControl_ControlMode> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::dtproto::robot_msgs::JointControl_ControlMode>() {
  return ::dtproto::robot_msgs::JointControl_ControlMode_descriptor();
}

PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_dtProto_2frobot_5fmsgs_2fJointControl_2eproto
