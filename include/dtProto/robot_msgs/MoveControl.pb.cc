// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: dtProto/robot_msgs/MoveControl.proto

#include "dtProto/robot_msgs/MoveControl.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace dtproto {
namespace robot_msgs {
PROTOBUF_CONSTEXPR MoveControl::MoveControl(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.cmd_pose_)*/nullptr
  , /*decltype(_impl_.cmd_vel_)*/nullptr
  , /*decltype(_impl_.mode_)*/0
  , /*decltype(_impl_.duration_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct MoveControlDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MoveControlDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~MoveControlDefaultTypeInternal() {}
  union {
    MoveControl _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MoveControlDefaultTypeInternal _MoveControl_default_instance_;
PROTOBUF_CONSTEXPR MoveControlTimeStamped::MoveControlTimeStamped(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.header_)*/nullptr
  , /*decltype(_impl_.cmd_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct MoveControlTimeStampedDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MoveControlTimeStampedDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~MoveControlTimeStampedDefaultTypeInternal() {}
  union {
    MoveControlTimeStamped _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MoveControlTimeStampedDefaultTypeInternal _MoveControlTimeStamped_default_instance_;
}  // namespace robot_msgs
}  // namespace dtproto
static ::_pb::Metadata file_level_metadata_dtProto_2frobot_5fmsgs_2fMoveControl_2eproto[2];
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_dtProto_2frobot_5fmsgs_2fMoveControl_2eproto[1];
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_dtProto_2frobot_5fmsgs_2fMoveControl_2eproto = nullptr;

const uint32_t TableStruct_dtProto_2frobot_5fmsgs_2fMoveControl_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::dtproto::robot_msgs::MoveControl, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::dtproto::robot_msgs::MoveControl, _impl_.mode_),
  PROTOBUF_FIELD_OFFSET(::dtproto::robot_msgs::MoveControl, _impl_.cmd_pose_),
  PROTOBUF_FIELD_OFFSET(::dtproto::robot_msgs::MoveControl, _impl_.cmd_vel_),
  PROTOBUF_FIELD_OFFSET(::dtproto::robot_msgs::MoveControl, _impl_.duration_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::dtproto::robot_msgs::MoveControlTimeStamped, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::dtproto::robot_msgs::MoveControlTimeStamped, _impl_.header_),
  PROTOBUF_FIELD_OFFSET(::dtproto::robot_msgs::MoveControlTimeStamped, _impl_.cmd_),
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::dtproto::robot_msgs::MoveControl)},
  { 10, -1, -1, sizeof(::dtproto::robot_msgs::MoveControlTimeStamped)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::dtproto::robot_msgs::_MoveControl_default_instance_._instance,
  &::dtproto::robot_msgs::_MoveControlTimeStamped_default_instance_._instance,
};

const char descriptor_table_protodef_dtProto_2frobot_5fmsgs_2fMoveControl_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n$dtProto/robot_msgs/MoveControl.proto\022\022"
  "dtproto.robot_msgs\032\035dtProto/std_msgs/Hea"
  "der.proto\032 dtProto/geometry_msgs/Pose.pr"
  "oto\032!dtProto/geometry_msgs/Twist.proto\"\223"
  "\002\n\013MoveControl\0229\n\004mode\030\001 \001(\0162+.dtproto.r"
  "obot_msgs.MoveControl.ControlMode\022/\n\010cmd"
  "_pose\030\002 \001(\0132\035.dtproto.geometry_msgs.Pose"
  "3d\022-\n\007cmd_vel\030\003 \001(\0132\034.dtproto.geometry_m"
  "sgs.Twist\022\020\n\010duration\030\004 \001(\002\"W\n\013ControlMo"
  "de\022\021\n\rPOSE_ABSOLUTE\020\000\022\021\n\rPOSE_RELATIVE\020\001"
  "\022\020\n\014VEL_ABSOLUBE\020\002\022\020\n\014VEL_RELATIVE\020\003\"p\n\026"
  "MoveControlTimeStamped\022(\n\006header\030\001 \001(\0132\030"
  ".dtproto.std_msgs.Header\022,\n\003cmd\030\002 \001(\0132\037."
  "dtproto.robot_msgs.MoveControlb\006proto3"
  ;
static const ::_pbi::DescriptorTable* const descriptor_table_dtProto_2frobot_5fmsgs_2fMoveControl_2eproto_deps[3] = {
  &::descriptor_table_dtProto_2fgeometry_5fmsgs_2fPose_2eproto,
  &::descriptor_table_dtProto_2fgeometry_5fmsgs_2fTwist_2eproto,
  &::descriptor_table_dtProto_2fstd_5fmsgs_2fHeader_2eproto,
};
static ::_pbi::once_flag descriptor_table_dtProto_2frobot_5fmsgs_2fMoveControl_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_dtProto_2frobot_5fmsgs_2fMoveControl_2eproto = {
    false, false, 558, descriptor_table_protodef_dtProto_2frobot_5fmsgs_2fMoveControl_2eproto,
    "dtProto/robot_msgs/MoveControl.proto",
    &descriptor_table_dtProto_2frobot_5fmsgs_2fMoveControl_2eproto_once, descriptor_table_dtProto_2frobot_5fmsgs_2fMoveControl_2eproto_deps, 3, 2,
    schemas, file_default_instances, TableStruct_dtProto_2frobot_5fmsgs_2fMoveControl_2eproto::offsets,
    file_level_metadata_dtProto_2frobot_5fmsgs_2fMoveControl_2eproto, file_level_enum_descriptors_dtProto_2frobot_5fmsgs_2fMoveControl_2eproto,
    file_level_service_descriptors_dtProto_2frobot_5fmsgs_2fMoveControl_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_dtProto_2frobot_5fmsgs_2fMoveControl_2eproto_getter() {
  return &descriptor_table_dtProto_2frobot_5fmsgs_2fMoveControl_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_dtProto_2frobot_5fmsgs_2fMoveControl_2eproto(&descriptor_table_dtProto_2frobot_5fmsgs_2fMoveControl_2eproto);
namespace dtproto {
namespace robot_msgs {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* MoveControl_ControlMode_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_dtProto_2frobot_5fmsgs_2fMoveControl_2eproto);
  return file_level_enum_descriptors_dtProto_2frobot_5fmsgs_2fMoveControl_2eproto[0];
}
bool MoveControl_ControlMode_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
constexpr MoveControl_ControlMode MoveControl::POSE_ABSOLUTE;
constexpr MoveControl_ControlMode MoveControl::POSE_RELATIVE;
constexpr MoveControl_ControlMode MoveControl::VEL_ABSOLUBE;
constexpr MoveControl_ControlMode MoveControl::VEL_RELATIVE;
constexpr MoveControl_ControlMode MoveControl::ControlMode_MIN;
constexpr MoveControl_ControlMode MoveControl::ControlMode_MAX;
constexpr int MoveControl::ControlMode_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

// ===================================================================

class MoveControl::_Internal {
 public:
  static const ::dtproto::geometry_msgs::Pose3d& cmd_pose(const MoveControl* msg);
  static const ::dtproto::geometry_msgs::Twist& cmd_vel(const MoveControl* msg);
};

const ::dtproto::geometry_msgs::Pose3d&
MoveControl::_Internal::cmd_pose(const MoveControl* msg) {
  return *msg->_impl_.cmd_pose_;
}
const ::dtproto::geometry_msgs::Twist&
MoveControl::_Internal::cmd_vel(const MoveControl* msg) {
  return *msg->_impl_.cmd_vel_;
}
void MoveControl::clear_cmd_pose() {
  if (GetArenaForAllocation() == nullptr && _impl_.cmd_pose_ != nullptr) {
    delete _impl_.cmd_pose_;
  }
  _impl_.cmd_pose_ = nullptr;
}
void MoveControl::clear_cmd_vel() {
  if (GetArenaForAllocation() == nullptr && _impl_.cmd_vel_ != nullptr) {
    delete _impl_.cmd_vel_;
  }
  _impl_.cmd_vel_ = nullptr;
}
MoveControl::MoveControl(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:dtproto.robot_msgs.MoveControl)
}
MoveControl::MoveControl(const MoveControl& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  MoveControl* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.cmd_pose_){nullptr}
    , decltype(_impl_.cmd_vel_){nullptr}
    , decltype(_impl_.mode_){}
    , decltype(_impl_.duration_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_cmd_pose()) {
    _this->_impl_.cmd_pose_ = new ::dtproto::geometry_msgs::Pose3d(*from._impl_.cmd_pose_);
  }
  if (from._internal_has_cmd_vel()) {
    _this->_impl_.cmd_vel_ = new ::dtproto::geometry_msgs::Twist(*from._impl_.cmd_vel_);
  }
  ::memcpy(&_impl_.mode_, &from._impl_.mode_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.duration_) -
    reinterpret_cast<char*>(&_impl_.mode_)) + sizeof(_impl_.duration_));
  // @@protoc_insertion_point(copy_constructor:dtproto.robot_msgs.MoveControl)
}

inline void MoveControl::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.cmd_pose_){nullptr}
    , decltype(_impl_.cmd_vel_){nullptr}
    , decltype(_impl_.mode_){0}
    , decltype(_impl_.duration_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

MoveControl::~MoveControl() {
  // @@protoc_insertion_point(destructor:dtproto.robot_msgs.MoveControl)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void MoveControl::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.cmd_pose_;
  if (this != internal_default_instance()) delete _impl_.cmd_vel_;
}

void MoveControl::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void MoveControl::Clear() {
// @@protoc_insertion_point(message_clear_start:dtproto.robot_msgs.MoveControl)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.cmd_pose_ != nullptr) {
    delete _impl_.cmd_pose_;
  }
  _impl_.cmd_pose_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.cmd_vel_ != nullptr) {
    delete _impl_.cmd_vel_;
  }
  _impl_.cmd_vel_ = nullptr;
  ::memset(&_impl_.mode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.duration_) -
      reinterpret_cast<char*>(&_impl_.mode_)) + sizeof(_impl_.duration_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* MoveControl::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .dtproto.robot_msgs.MoveControl.ControlMode mode = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_mode(static_cast<::dtproto::robot_msgs::MoveControl_ControlMode>(val));
        } else
          goto handle_unusual;
        continue;
      // .dtproto.geometry_msgs.Pose3d cmd_pose = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_cmd_pose(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .dtproto.geometry_msgs.Twist cmd_vel = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_cmd_vel(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // float duration = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 37)) {
          _impl_.duration_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* MoveControl::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:dtproto.robot_msgs.MoveControl)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .dtproto.robot_msgs.MoveControl.ControlMode mode = 1;
  if (this->_internal_mode() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      1, this->_internal_mode(), target);
  }

  // .dtproto.geometry_msgs.Pose3d cmd_pose = 2;
  if (this->_internal_has_cmd_pose()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::cmd_pose(this),
        _Internal::cmd_pose(this).GetCachedSize(), target, stream);
  }

  // .dtproto.geometry_msgs.Twist cmd_vel = 3;
  if (this->_internal_has_cmd_vel()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::cmd_vel(this),
        _Internal::cmd_vel(this).GetCachedSize(), target, stream);
  }

  // float duration = 4;
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_duration = this->_internal_duration();
  uint32_t raw_duration;
  memcpy(&raw_duration, &tmp_duration, sizeof(tmp_duration));
  if (raw_duration != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(4, this->_internal_duration(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dtproto.robot_msgs.MoveControl)
  return target;
}

size_t MoveControl::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dtproto.robot_msgs.MoveControl)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .dtproto.geometry_msgs.Pose3d cmd_pose = 2;
  if (this->_internal_has_cmd_pose()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.cmd_pose_);
  }

  // .dtproto.geometry_msgs.Twist cmd_vel = 3;
  if (this->_internal_has_cmd_vel()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.cmd_vel_);
  }

  // .dtproto.robot_msgs.MoveControl.ControlMode mode = 1;
  if (this->_internal_mode() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_mode());
  }

  // float duration = 4;
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_duration = this->_internal_duration();
  uint32_t raw_duration;
  memcpy(&raw_duration, &tmp_duration, sizeof(tmp_duration));
  if (raw_duration != 0) {
    total_size += 1 + 4;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MoveControl::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    MoveControl::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*MoveControl::GetClassData() const { return &_class_data_; }


void MoveControl::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<MoveControl*>(&to_msg);
  auto& from = static_cast<const MoveControl&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:dtproto.robot_msgs.MoveControl)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_cmd_pose()) {
    _this->_internal_mutable_cmd_pose()->::dtproto::geometry_msgs::Pose3d::MergeFrom(
        from._internal_cmd_pose());
  }
  if (from._internal_has_cmd_vel()) {
    _this->_internal_mutable_cmd_vel()->::dtproto::geometry_msgs::Twist::MergeFrom(
        from._internal_cmd_vel());
  }
  if (from._internal_mode() != 0) {
    _this->_internal_set_mode(from._internal_mode());
  }
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_duration = from._internal_duration();
  uint32_t raw_duration;
  memcpy(&raw_duration, &tmp_duration, sizeof(tmp_duration));
  if (raw_duration != 0) {
    _this->_internal_set_duration(from._internal_duration());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void MoveControl::CopyFrom(const MoveControl& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dtproto.robot_msgs.MoveControl)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MoveControl::IsInitialized() const {
  return true;
}

void MoveControl::InternalSwap(MoveControl* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(MoveControl, _impl_.duration_)
      + sizeof(MoveControl::_impl_.duration_)
      - PROTOBUF_FIELD_OFFSET(MoveControl, _impl_.cmd_pose_)>(
          reinterpret_cast<char*>(&_impl_.cmd_pose_),
          reinterpret_cast<char*>(&other->_impl_.cmd_pose_));
}

::PROTOBUF_NAMESPACE_ID::Metadata MoveControl::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_dtProto_2frobot_5fmsgs_2fMoveControl_2eproto_getter, &descriptor_table_dtProto_2frobot_5fmsgs_2fMoveControl_2eproto_once,
      file_level_metadata_dtProto_2frobot_5fmsgs_2fMoveControl_2eproto[0]);
}

// ===================================================================

class MoveControlTimeStamped::_Internal {
 public:
  static const ::dtproto::std_msgs::Header& header(const MoveControlTimeStamped* msg);
  static const ::dtproto::robot_msgs::MoveControl& cmd(const MoveControlTimeStamped* msg);
};

const ::dtproto::std_msgs::Header&
MoveControlTimeStamped::_Internal::header(const MoveControlTimeStamped* msg) {
  return *msg->_impl_.header_;
}
const ::dtproto::robot_msgs::MoveControl&
MoveControlTimeStamped::_Internal::cmd(const MoveControlTimeStamped* msg) {
  return *msg->_impl_.cmd_;
}
void MoveControlTimeStamped::clear_header() {
  if (GetArenaForAllocation() == nullptr && _impl_.header_ != nullptr) {
    delete _impl_.header_;
  }
  _impl_.header_ = nullptr;
}
MoveControlTimeStamped::MoveControlTimeStamped(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:dtproto.robot_msgs.MoveControlTimeStamped)
}
MoveControlTimeStamped::MoveControlTimeStamped(const MoveControlTimeStamped& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  MoveControlTimeStamped* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.header_){nullptr}
    , decltype(_impl_.cmd_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_header()) {
    _this->_impl_.header_ = new ::dtproto::std_msgs::Header(*from._impl_.header_);
  }
  if (from._internal_has_cmd()) {
    _this->_impl_.cmd_ = new ::dtproto::robot_msgs::MoveControl(*from._impl_.cmd_);
  }
  // @@protoc_insertion_point(copy_constructor:dtproto.robot_msgs.MoveControlTimeStamped)
}

inline void MoveControlTimeStamped::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.header_){nullptr}
    , decltype(_impl_.cmd_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

MoveControlTimeStamped::~MoveControlTimeStamped() {
  // @@protoc_insertion_point(destructor:dtproto.robot_msgs.MoveControlTimeStamped)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void MoveControlTimeStamped::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.header_;
  if (this != internal_default_instance()) delete _impl_.cmd_;
}

void MoveControlTimeStamped::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void MoveControlTimeStamped::Clear() {
// @@protoc_insertion_point(message_clear_start:dtproto.robot_msgs.MoveControlTimeStamped)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.header_ != nullptr) {
    delete _impl_.header_;
  }
  _impl_.header_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.cmd_ != nullptr) {
    delete _impl_.cmd_;
  }
  _impl_.cmd_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* MoveControlTimeStamped::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .dtproto.std_msgs.Header header = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_header(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .dtproto.robot_msgs.MoveControl cmd = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_cmd(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* MoveControlTimeStamped::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:dtproto.robot_msgs.MoveControlTimeStamped)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .dtproto.std_msgs.Header header = 1;
  if (this->_internal_has_header()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::header(this),
        _Internal::header(this).GetCachedSize(), target, stream);
  }

  // .dtproto.robot_msgs.MoveControl cmd = 2;
  if (this->_internal_has_cmd()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::cmd(this),
        _Internal::cmd(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dtproto.robot_msgs.MoveControlTimeStamped)
  return target;
}

size_t MoveControlTimeStamped::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dtproto.robot_msgs.MoveControlTimeStamped)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .dtproto.std_msgs.Header header = 1;
  if (this->_internal_has_header()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.header_);
  }

  // .dtproto.robot_msgs.MoveControl cmd = 2;
  if (this->_internal_has_cmd()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.cmd_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MoveControlTimeStamped::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    MoveControlTimeStamped::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*MoveControlTimeStamped::GetClassData() const { return &_class_data_; }


void MoveControlTimeStamped::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<MoveControlTimeStamped*>(&to_msg);
  auto& from = static_cast<const MoveControlTimeStamped&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:dtproto.robot_msgs.MoveControlTimeStamped)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_header()) {
    _this->_internal_mutable_header()->::dtproto::std_msgs::Header::MergeFrom(
        from._internal_header());
  }
  if (from._internal_has_cmd()) {
    _this->_internal_mutable_cmd()->::dtproto::robot_msgs::MoveControl::MergeFrom(
        from._internal_cmd());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void MoveControlTimeStamped::CopyFrom(const MoveControlTimeStamped& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dtproto.robot_msgs.MoveControlTimeStamped)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MoveControlTimeStamped::IsInitialized() const {
  return true;
}

void MoveControlTimeStamped::InternalSwap(MoveControlTimeStamped* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(MoveControlTimeStamped, _impl_.cmd_)
      + sizeof(MoveControlTimeStamped::_impl_.cmd_)
      - PROTOBUF_FIELD_OFFSET(MoveControlTimeStamped, _impl_.header_)>(
          reinterpret_cast<char*>(&_impl_.header_),
          reinterpret_cast<char*>(&other->_impl_.header_));
}

::PROTOBUF_NAMESPACE_ID::Metadata MoveControlTimeStamped::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_dtProto_2frobot_5fmsgs_2fMoveControl_2eproto_getter, &descriptor_table_dtProto_2frobot_5fmsgs_2fMoveControl_2eproto_once,
      file_level_metadata_dtProto_2frobot_5fmsgs_2fMoveControl_2eproto[1]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace robot_msgs
}  // namespace dtproto
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::dtproto::robot_msgs::MoveControl*
Arena::CreateMaybeMessage< ::dtproto::robot_msgs::MoveControl >(Arena* arena) {
  return Arena::CreateMessageInternal< ::dtproto::robot_msgs::MoveControl >(arena);
}
template<> PROTOBUF_NOINLINE ::dtproto::robot_msgs::MoveControlTimeStamped*
Arena::CreateMaybeMessage< ::dtproto::robot_msgs::MoveControlTimeStamped >(Arena* arena) {
  return Arena::CreateMessageInternal< ::dtproto::robot_msgs::MoveControlTimeStamped >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
